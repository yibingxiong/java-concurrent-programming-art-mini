{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["art","concurr","git地址","java","mini","mini上边提issu","program","xxx表示所转载文章的链接","“大雄和你一起学编程”或者打赏或者github点个star。","一些api的使用直接在demo说明，不单独说明","三种方式，总有一款适合你，三种都搞大雄要送你哆啦a梦。","不同点是什么","不特别追求底层细节的同学","会有一种醍醐灌顶的感觉","公众号二维码","删除了一些晦涩难懂，且大雄认为在开发中不是那么重要的内容","前言","在githubjava","在“大雄和你一起学编程”公众号留言","基于此，通过参考这本书，结合网上的一些资料和自己的理解，写了此笔记。本笔记是《java并发编程艺术》的读书笔记，绝大部分内容来自这本书。希望帮助同学们快速掌握并发编程的门道，也希望借对此笔记的整理提高笔者自身对并发编程的理解、巩固相关的一些知识点。","大雄本身也在学习中，基础不是太好，各位同学如果发现有什么错漏的地方请不吝啬指出，有什么疑问的地方也欢迎交流。方式如下：","如果你觉得此书有帮助到你，欢迎关注大雄的微信公众号","很多人推荐方腾飞老师的《java并发编程艺术》，大雄（笔者名号）自感太菜，也花了一些时间去学习。发现其中有些知识点太难了，而对开发人员来讲并没有太大意义。一些内容也讲的不是特别好懂。","微信赞赏码","支付宝收款码","支持大雄","期望快速掌握并发编程核心内容的同学","期望更加深入了解并发编程的同学建议还是看看原书,","本文转自xxx，欢迎关注微信公众号“大雄和你一些学编程”,共同学习探讨。","正在做面试准备，期望快速复习的同学","每一章增加了总结思维导图，帮助回顾和记忆","添加了一些感觉不太容易理解内容的个人理解","版权声明","特别说明：第8章和第9章完全是从书上抄过来的。这些不太熟悉，所以将一些自己觉得很中要的东西抄下来了，背一背，哈哈。","相比《java并发编程艺术》，本书有如下不同点：","说明","谁适合读","调整了一些内容的排序，以便于更加容易理解","转载请在醒目位置注明如下信息:"],"第01章-在idea怎么调试jdk源码/":["compil","error","error:java:","failed:","idea查看jdk源码并在源码中写注释","intern","java","从openjdk找的那两个类，直接拷贝下来在你的maven工程里边手动创建就可以了，可以直接在github下载,免得找","具体步骤可以参考","在idea怎么调试jdk源码","在第一次跑测试demo之前，一定先把文章中给出的可能出现的问题解决好了再跑，争取一次搞定，因为build一次非常慢非常耗费性能，另外，如果出现报错，一定及时杀死进程，因为有一个报错就跑不起来了","大家如果遇到，可以参考下变这篇文章排查","大雄在搭建时还遇到了一个问题","工欲善其事，必先利其器。研究并发编程相关原理会经常看jdk源码，因此我们有必要在开发环境中安全的调试jdk源码。","很显然，我们不能直接在你本地安装的jdk里边改源码，加注释。因此我们需要将jdk源码拷贝到项目中，配置项目运行的jdk为我们拷贝的jdk。这样就能愉快的加注释、打断点了。","我本来想着把我搞好的项目放到到github上边，但是看起来不现实，jdk代码太多了，add和commit时太费时间和性能了。","第01章","解决办法","还有一个坑，大家注意，搞好了就不要随便修改maven依赖了，因为修改后整个又要重新编译，非常慢","这个问题多半是编译器和jdk版本不匹配导致的","这篇文章写了非常详细的步骤，还有每一步的截图以及对一些错误的解决方法。"],"第02章-并发编程基础/":["并发编程基础","本章就是介绍一些多线程编程的基础知识，比如什么是线程，为什么要用多线程，如何创建线程，如何启动，如何同步，如何通信，线程的生命周期是怎样的等等，期望能够快速的把多线程跑起来。","第02章","首先能够把多线程程序跑起来，感觉会有一些成就感，增加一些信心吧。"],"第02章-并发编程基础/01-线程的定义和意义.html":["01","cpu处理速度","cpu通过时间分片来执行任务，多个线程在cpu上争抢时间片执行，线程切换需要保存一些状态，再次切换回去需要恢复状态，此为上下文切换成本。","java程序至少有一个线程main，main线程由jvm创建","socket连接数","上下文切换","为什么要有多线程","使用cas算法：用自旋不用锁可以减少线程竞争切换，但是可能会更加耗cpu","使用协程：在一个线程里执行多个任务","使用最少的线程","减少上下文切换的方法：","可以充分利用多处理器核心","同一进程中的多条线程将共享该进程中的全部系统资源，如虚拟地址空间，文件描述符和信号处理等等","因此并不是线程越多越快，频繁的切换会损失性能","对于数据库锁，加锁和解锁必须在一个数据库连接里，否则会出现解锁失败的情况","尝试使用定时锁，使用lock.trylock（timeout）来替代使用内部锁机制","带宽","常见资源限制","并发编程需要注意的问题","应对资源限制","数据库连接数","无锁并发编程：例如把一堆数据分为几块，交给不同线程执行，避免用锁","是操作系统能够进行运算调度的最小单位","是轻量级的进程，线程的创建和切换成本比进程低","更好的编程模型，例如可以使用生产者消费者模型进行解耦","更快的响应时间，可以将数据一致性要求不强的工作交给别的线程做","根据不同的资源限制调整程序的并发度，找到瓶颈，把瓶颈资源搞多一些，或者根据这个瓶颈调整线程数","死锁","死锁就是线程之间因争夺资源处理不当出现的相互等待现象","硬件资源限制","磁盘读写速度","程序的执行需要资源，比如数据库连接、带宽，可能会由于资源的限制，多个线程并不是并发，而是串行，不仅无优势，反而带来不必要的上下文切换损耗","线程的定义","线程的定义与意义","线程的定义和意义","资源限制","软件资源限制","避免一个线程同时获取多个锁","避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源","避免死锁的方法：","集群化，增加资源"],"第02章-并发编程基础/02-创建线程的三种方式.html":["(executionexcept","(int","(interruptedexcept","//","02","0;","=",">","@overrid","call()","callabl","callable也是函数式接口，所以也能用lamba","catch","class","e)","e.printstacktrace();","except","extend","futuretask","futuretask<>(new","implement","int","integ","java8也可以使用lamba\");","mythread","mythreadbycal","mythreadbycallable());","mythreadbyrunn","mythreadbyrunnable();","new","public","run()","runnabl","sum","system.out.println(\"runnable是函数式接口，","system.out.println(futuretask.get());","thread","thread(()","thread(futuretask).start();","thread(mythreadbyrunnable);","thread.start();","thread2","thread2.start();","throw","tri","void","{","}","}).start();","三种方式比较","不能","中等","为啥thread构造里边能方runnable，也能放futuretask?","使用callabl","使用callable和futur","使用callable时最复杂的，但是也是最灵活的","使用简易程度","其实futuretask继承runnablefuture，而runnablefuture继承runnable和future，注意接口是可以多继承的","再来一个，复用了任务代码，继承thread就不行","创建线程的三种方式","可以","复杂","实现runnabl","实现runnable接口","将futuretask的实例作为thread构造参数","废话不说，直接上代码","搞一个类实现callable接口，重写call方法，在call执行任务","方式","是否可以共享任务代码","是否可以再继承别的类","是否可以声明抛出异常","是否可以有返回值","用futuretask包装实现callable接口类的实例","用lamba也可以","简单","继承thread","继承thread是最容易的，但是也是最不灵活的","继承thread类","调用futuretask实例的get拿到返回值，调这一句会阻塞父线程","调用futuretask的get能拿到返回的值","还是上面那个mythreadbyrunnable类","这是最复杂的一种方式，他可以有返回值，归纳一下步骤：","这里说的共享任务代码举个例子：","重写run方法执行任务"],"第02章-并发编程基础/03-线程的一些属性.html":["${一个数字}这个样子","()","//","03","10，默认优先级和创建他的父线程相同","=",">","new","set","system.out.println(\"欢迎关注微信公号'大雄和你一起学编程'\");","system.out.println(threadgroup1.activecount());","thread","thread(threadgroup,","thread.getthreadgroup()","thread.getthreadgroup();","threada.getname();","threada.getpriority()","threada.isdaemon();","threada.setdaemon(true);","threada.setname(\"欢迎关注微信公号'大雄和你一起学编程'\");","threada.setpriority(thread.norm_priority);","threadgroup","threadgroup(\"欢迎关注微信公号'大雄和你一起学编程'\");","threadgroup1","threadgroup1.interrupt();","threadgroup1.setmaxpriority(10);","thread的构造里边可以指定","{","});","中断组里所有线程","为其他线程服务的线程可以是守护线程，守护线程的特点是如果所有的前台线程死亡，则守护线程自动死亡。","优先级高的线程可以得到更多cpu资源,","可以把线程放到组里，一起管理","名字","基于线程组的操作","所属线程组","拿到线程组","是否是守护线程(daemon)","有多少活的线程","级别是1","线程优先级(priority)","线程的一些属性","给以给线程取一个响亮的名字，便于排查问题，默认为thread","获取名字","设置名字","设置线程最高优先级是多少","设置线程组","非守护线程创建的线程默认为非守护线程，守护则默认为守护"],"第02章-并发编程基础/04-线程同步.html":["\"不够了\");","\"剩下\"","(account.gettotal()","(interruptedexcept","(total","(total)","+","04","10)","=",">=","@overrid","a.setname(\"a\");","a.start();","account","account(100);","account(int","account.draw(10);","args)","b","b.setname(\"b\");","b.start();","catch","class","demo_02_04_1_threadsync","draw(int","e)","e.printstacktrace();","final","gettotal()","int","integ","lock","lock.lock();","lock.unlock();","main(string[]","money)","money;","new","privat","public","reentrantlock();","return","run()","runnabl","runnable()","static","sychronized加在普通方法上，锁为当前实例对象","synchron","synchronized同步块，锁为()里边的对象","system.out.println(thread.currentthread().getname()","this.tot","this.total);","thread","thread(runnable);","thread.sleep(1);","total)","total;","tri","void","{","}","};","一个是可以使用synchronized同步，一个是可以使用lock。synchronized是也是隐式的锁。","使用比较简单，进方法加锁，执行完释放，后面会专门介绍锁。","假设ab两个人从同一个账户里取钱，直接在draw这个方法加synchronized关键字，防止两个人同时进入draw","加在静态方法上，锁为当前类的class","同步代码块","同步方法","多个线程访问同一个资源可能会导致结果的不确定性，因此有时需要控制只有一个线程访问共享资源，此为线程同步。","线程同步","锁"],"第02章-并发编程基础/05-线程间的通信.html":["\"：收到通知，处理业务逻辑\");","(!flag)","(int","(interruptedexcept","(list.isempty())","(list.size()","(lock)","(不满足条件)","(对象)","//","05","0;","=",">",">=","a.setname(\"我是等待者\");","a.start();","args)","b","b.setname(\"通知者\");","b.start();","boolean","boundlist","boundlist(int","boundlist<>(10);","catch","class","condit","condition.await()","condition与object监视器的区别","condition接口也提供了类似object的监视器方法，与lock配合可以实现等待/通知模式","demo_02_05_1_condit","e)","e.printstacktrace();","false;","final","flag","get()","int","int):","interruptedexcept","linkedlist","linkedlist<>();","list","list.poll();","list.push(x);","list;","lock","lock.lock();","lock.lock()获取锁lock.newcondition()获取condit","lock.newcondition();","lock.notify();","lock.unlock();","lock.wait();","main(string[]","new","notempti","notempty.await();","notempty.signalall();","notfullcondit","notfullcondition.await();","notfullcondition.signalall();","notifi","notify()或notifyall()方法调用后，等待线程不会立即从wait()返回，需要调用notify()或notifall()的线程释放锁之后，等待线程才有机会从wait()返回。","notify()方法将等待队列中的一个等待线程从等待队列中移到同步队列中，而notifyall()方法则是将等待队列中所有的线程全部移到同步队列，被移动的线程状态由waiting变为blocked。","notify:","notifyal","notifyall:","obj.wait()","object","object();","object的监视器方法","privat","public","push(t","reentrantlock();","return","signalal","size)","size;","start()","static","synchron","system.out.println(thread.currentthread().getname()+","system.out.println(thread.currentthread().getname()+\":发出通知\");","system.out.println(thread.currentthread().getname()+\"：等待通知\");","t","this.siz","thread","thread(()","thread.sleep(1000);","throw","tri","true;","void","wait(long):","wait(long,","wait:","waitnotifymodel","x","x)","x;","{","}","});","一个","一些需要注意的点：","一般都会将condition对象作为成员变量。当调用await()方法后，当前线程会释放锁并在此等待，而其他线程调用condition对象的signal()方法，通知当前线程后，当前线程才从await()方法返回，并且在返回前已经获取了锁。","上述的这种等待通知需要使用synchronized,","不支持","仅仅有一个处于该对象的等待池中的线程（随机）会进入该对象的同步队列（锁池）。","从wait()方法返回的前提是获得了调用对象的锁。","以上来自啃碎并发（二）：java线程的生命周期","使用wait()、notify()和notifyall()时需要先对调用对象加锁。","使线程进入waiting（后面线程的生命周期讲）状态，只有等待另一个线程通知或者被中断才返回，需要注意的是，调用wait方法后需要释放对象的锁","关于等待队列和同步队列","前置条件","可以参看第05章的相关内容","可以多个","同步队列（锁池）：假设线程a已经拥有了某个对象（注意:不是类）的锁，而其它的线程想要调用这个对象的某个synchronized方法(或者synchronized块)，由于这些线程在进入对象的synchronized方法之前必须先获得该对象的锁的拥有权，但是该对象的锁目前正被线程a拥有，所以这些线程就进入了该对象的同步队列（锁池）中，这些线程状态为blocked。","和wait类似，加入了超时时间，超时了还没被通知就直接返回","唤醒生产者","唤醒等待中的一个或多个线程","唤醒等待的消费者","基于blockingqueue实现线程通信","基于condition的通信","基于等待通知模型的通信","处于该对象的等待池中的线程就会全部进入该对象的同步队列（锁池）中，准备争夺锁的拥有权。如果另外的一个线程调用了相同对象的notify()方法，那么","处理业务逻辑","如果使用lock的话就要用condition了","实现一个有界队列，当队列为空时阻塞消费线程，当队列满时阻塞生产线程","对象.notify();","对象.wait()","当前线程释放锁并进入等待状态","拿两个condition,一个是非空，一个是不满","支持","支持signal","改变条件","模型","满了就等待","生产数据的线程","相关api","示例","空了就等","等待/通知的相关方法是任意java对象都具备的，因为这些方法被定义在所有对象的超类java.lang.object上。","等待状态中不响应中断","等待者","等待通知模型的示例","等待队列个数","等待队列（等待池）：假设一个线程a调用了某个对象的wait()方法，线程a就会释放该对象的锁（因为wait()方法必须出现在synchronized中，这样自然在执行wait()方法之前线程a就已经拥有了该对象的锁），同时","纳秒级，不常用","线程a就进入到了该对象的等待队列（等待池）中，此时线程a状态为waiting。如果另外的一个线程调用了相同对象的notifyall()方法，那么","线程之间协调工作的方式","线程间的通信","获得对象的锁","调用wait()方法后，线程状态由running变为waiting，并将当前线程放置到对象的等待队列，释放锁。","调用方式","这里列个标题，后边说到了blockingqueue就明白怎么做了。","这里有一些线程的状态，可以看完后边的线程的生命周期再回过头看看","进入等待状态到将来的某个时间","通知一个对象上等待的线程，使其从wait方法返回，而返回的前提是该线程获取到了对象的锁","通知对象上所有等待的线程，使其从wait方法返回","通知者","释放锁进入超时等待状态","项目"],"第02章-并发编程基础/06-控制线程.html":["(int","(isalive())","06","0;","=","@overrid","api","call()","callabl","class","demo_02_06_1_join","demo_02_06_2_sleep","demo_02_06_3_interrupt","extend","final","futuretask","futuretask<>(new","implement","int","integ","interruptedexcept","java中断机制是一种协作机制，也就是说通过中断并不能直接终止另一个线程，而需要被中断的线程自己处理中断。","join","join()","join(long","join如果带超时时间的话，那么如果超时的话主线程也会不再等join进去的线程而继续执行.","join实际就是判断join进来的线程存活状态，如果活着就调用wait(0),如果带超时时间了的话，wait里边的时间会算出来","millis)","millis,","mycal","mycallable());","nanos)","nativ","new","public","run()","sleep","sleep(long","static","synchron","thread","thread(futuretask);","thread.start();","thread.yield()","throw","void","wait(0);","yield","{","}","中断","主线程join一个线程，那么主线程会阻塞直到join进来的线程执行完，主线程继续执行，","也是让线程暂停一下，但是是进入就绪状态，让系统重新开始一次新的调度过程","例子","前面有一些方法声明了interruptedexception，","参考了《疯狂java讲义》的提法，将如下内容归为控制线程。","控制线程","睡觉方法，使得线程暂停一段时间，进入阻塞状态。","示例","被中断的线程可以自已处理中断，也可以不处理或者抛出去。","这意味者他们可以被中断，中断后把异常抛给调用方，让调用方自己处理."],"第02章-并发编程基础/07-线程的生命周期.html":["//","07","1.","2.","3.","4.","7种状态！！！","blocked,","enum","locksupport.parknano","locksupport.parkuntil","new,","object.wait()","public","runnable,","state","terminated;","thread.join(long)","thread.sleep","timed_waiting,","waiting,","waiting状态的线程在等待别的线程做一个特殊的事情（action）例如","{","}","《java并发编程艺术》里边有7中状态","《疯狂java讲义》里边只有5中状态，缺少waiting和timed_wait","上边的那篇文章，文字描述有7中状态，但是图里边只有6种","加上一个特定的正的超时时间调用如下方法会进入此状态","啃碎并发（二）：java线程的生命周期","在调用了object.wait重新进入同步块或者同步方法","大雄不去具体研究状态的流转了，直接参考一些资料及上述翻译，搞一个前无古人、后有来者的线程生命周期图","大雄也懵了，遂在源码找到了如下一个枚举,","对于一个拥有8级英语水品的6级没过的人来说，这段翻译太难了，但是翻译出来感觉很清晰了。","就是有一个特定等待时间的线程","应该是","执行完了结束的状态","比如cpu","没有加超时参数","线程的生命周期","表示可运行（大家的翻译应该是就绪）的线程","表示在jvm正在运行，但是他可能需要等操作系统分配资源","表示正在等待监视器锁以便重新进进入同步块或者同步方法","表示没有开始的线程","表示线程在等待监视器锁","要是早点发现这篇文章的话，大雄也不用费劲在《java并发编程艺术》和《疯狂java讲义》以及各种博客找资料了。","调用join()","调用locksupport.park()","调用了join的在等待指定线程结束","调用了wait的在等待其他线程调用notify或者notifyal","调用如下方法之一会进入wait","还是先说两嘴，这个生命周期的图我找到了不少版本，不仅图的形式不一样，里边的内容也有些出入","这个图八成、没准、大概是没有太大问题的。此图中，原谅色是线程状态，紫色是引起状态变化的原因。","这篇文章写的非常好，建议看一下。","这里我只想把这篇文章里一个图改一下贴到这里，细节部分大家可以参考上述这篇文章。","里面有一些注释，翻译了一下。"],"第02章-并发编程基础/08-ThreadLocal.html":["!=","&","&&","(e","(inheritthreadloc","(int","(key","(len","(map","(t)e.value;","(table.length","(table[h]","(threadlocal)","*","*/","/*","//","08","0;","1);","1;","=","==",">","@overrid","@suppresswarnings(\"unchecked\")","args)","begin()","c","c;","childvalue(t","class","class.","createinheritedmap(threadlocalmap","createmap(t,","createmap(thread","demo_02_08_1_threadloc","demo_02_08_2_threadlocalinherit","e","e);","e.get()","e.get();","e;","end()","entri","entry(key,","entry[]","entry[len];","extend","firstvalue)","firstvalue);","get()","getentry(threadloc","getentryaftermiss(key,","getmap(t);","getmap(thread","h","i,","inheritablethreadloc","inheritablethreadlocal.set(\"欢迎关注微信公众号","inheritablethreadlocal<>();","inheritablethreadlocal的实现主要是在线程创建的时候，如果父线程有inheritablethreadlocal,","initialvalue()","int","j","key","key)","key,","key.childvalue(e.value);","key.threadlocalhashcod","key为threadlocal,","len","len);","long","main(string[]","maintain","map","map.getentry(this);","map.set(this,","new","nextindex(h,","null","null)","null;","object","parent.inheritablethreadloc","parentmap)","parentmap.table;","parentmap就是父线程的inheritablethreadloc","parentt","parenttable.length;","parentvalue)","parentvalue;","pertain","privat","profil","profiler.begin();","protect","public","result","result;","return","run()","set","set(t","set(threadloc","setinitialvalue();","setthreshold(len);","size++;","static","sum","system.currenttimemillis()","system.currenttimemillis();","system.out.println(inheritablethreadlocal.get());","system.out.println(threadlocal.get());","t","t)","t,","t.inheritablethreadloc","t.inheritablethreadlocals;","tab[i]","tabl","table;","table[h]","table[i];","testthreadlocalinherit","testthreadlocalinherit().start();","thereadloc","this.inheritablethreadloc","thread","thread(()","thread.","thread.currentthread();","threadloc","threadlocal();","threadlocal(){","threadlocal.createinheritedmap(parent.inheritablethreadlocals);","threadlocal.get();","threadlocal.set(\"ddd\");","threadlocal.set(system.currenttimemillis());","threadlocal.threadlocalmap","threadlocalmap","threadlocalmap(parentmap);","threadlocalmap(this,","threadlocalmap(threadlocalmap","threadlocalmap.entri","threadlocalmap是threadlocal的内部类，他里边是一个用一个entry数组来存数据的。set时讲threadlocal作为key，要存的值传进去，他会对key做一个hash，构建entry,放到entry数组里边。","threadlocal和inheritablethreadlocal是基于在thread里边的两个变量实现的，这两个变量类似于一个hashmap的结构threadlocalmap，里边的entri","threadlocal的创建","threadlocal看完了，再来瞅瞅inheritablethreadlocals,看看他是怎么可以从父线程那里拿东西的","thread{","valu","value)","value);","value为你存的值.","void","{","{...}","}","};","上边这个就是thread的两个成员变量，其实两个是一样的类型。","会被拷贝到子线程。","伪码","你会发现他是在init方法中赋值的，而init实在thread的构造方法中调用的","使用示例","内部的entry结构","再来看看threadlocal的get方法","再来看看threadlocal的set,","创建这个线程的那个线程，也就是父线程","发现他和threadlocal长得差不多，就是重写了三个方法，由此看来关键在inheritablethreadlocals是如何传递的","发现很简单，就是把父线程的东西到自己线程的inheritablethreadlocals里边","同上","大雄和你一起学编程","大雄和你一起学编程\");","存数据的","实现原理","很容易想到，因为这个东西是跟着线程走的，所以应该是线程的一个属性，事实上也是这样，threadlocal和inheritablethreadlocal都是存储在thread里面的。","总结一下","是一个以threadlocal对象为键、任意对象为值的存储结构。这个结构被附带在线程上，也就是说一个线程可以根据一个threadlocal对象查询到绑定在这个线程上的一个值。","欢迎关注微信公众号","直接在thread里面搜inheritablethreadloc","看来现在得看看threadlocal.createinheritedmap这个方法了","继承了threadlocal,","记录开始时间","记录耗时","超简单，我们的map不要threadlocals了，改为inheritablethreadloc","超级简单,不多说","这个parent就是","这个也很有趣，一般init在初始化完成，但是他是在你取的时候去调","这个也很简单，他会调你重写的initialvalue方法，拿到一个值，set进去并且返回给你","这个就是拿到的存在thread的threadlocals这个变量","这个方法在threadlocal是直接抛出一个异常unsupportedoperationexcept","这种threadlocal可以从父线程传到子线程，也就是子线程能访问父线程中的inheritablethreadloc","这里就是毫无难度的事情了","重写了三个方法"],"第02章-并发编程基础/09-原子类.html":["(int","//","09","0;","=","args)","atomicinteg","atomicinteger(0);","atomicinteger.get();","atomicinteger.getandincrement();","class","counter","counter();","counter2","counter2();","demo_04_01_1_atom","get()","increment()","int","interruptedexcept","j","main(string[]","new","privat","public","return","static","throw","valu","value++;","value;","void","{","}","一个使用的例子","一个简单的i++操作,","为此，java.util.concurrent.atomic这个包下边提供了一些原子类，这些原子操作类提供了一种用法简单、性能高效、线程安全地更新一个变量的方式。","原子类","多线程环境下如果i是共享的，这个操作就不是原子的。","超级简单~","这个没有用原子类","这个用了原子类"],"第02章-并发编程基础/10-章小结.html":["10","art","concurr","java","mini对应章下面找到","program","本图源文件可以在github","章小结"],"第03章-锁/":["第03章","锁","锁是实现线程同步，用来控制多个线程访问共享资源的方式。一般来说，一个锁能够防止多个线程同时访问共享资源（但是有些锁可以允许多个线程并发的访问共享资源，比如读写锁）。本章将介绍如何使用锁，锁的实现原理。"],"第03章-锁/01-锁的基本使用.html":["(money","+","//","01","=",">=","account","account(integ","boolean","class","condit","count)","count);","count;","draw(int","false;","final","integ","interruptedexcept","lock","lock()","lock.lock();","lock.unlock();","lockinterruptibly()","lock可以尝试非阻塞获取锁、能被中断的获取锁、能够带超时的获取锁，","lock接口","money","money)","money;","new","newcondition()","privat","public","reentrantlock();","return","static","synchronized不能做到","synchronized是隐式获取释放锁，比较简单和固定，lock是需要手动获取锁和释放，比较灵活","system.out.println(\"取走\"","system.out.println(\"钱不够了，去关注微信公号‘大雄和你一起学编程’吧\");","this.money","throw","time,","timeunit","tri","true;","trylock()","trylock(long","unit)","unlock()","void","{","}","一个例子","写到finally，保证释放锁","加锁不要放到try里边，因为如果在获取锁（自定义锁的实现）时发生了异常，异常抛出的同时，也会导致锁无故释放","可中断获取锁，在获取锁的过程中可以被中断，被中断后抛出异常返回","可以看到和synchronized相比lock要灵活和强大，使用会稍微麻烦一点：","在超时时间内获取到了锁，返回true2.","尝试非阻塞的获取锁，立即返回，拿到锁返回true，否则fals","带try的这种方法，就是拿的到就拿，拿不到就算了，会立即返回；这个就想学习一样，学的会就学，学不会就算了，当然这是错误的观点了。","搞个可重入锁练手","方法","获取等待通知组件，只有拿到了锁，才能拿到这个对象，调用wait()方法，调用后释放锁","获取锁。调用方法会获取锁，直到锁获取后返回","被中断了，抛出异常返回3.","说明","超时时间到，返回fals","超时的获取锁返回的情况1.","释放锁","锁一般都是实现lock接口，所以了解lock接口的api，基本就会用锁了。","锁的基本使用"],"第03章-锁/02-AQS.html":["!=","&&","(!tryacquire(arg)","(;","(;;)","(compareandsethead(new","(compareandsetstate(0,","(compareandsetstate(currentstate,","(compareandsettail(pred,","(compareandsettail(t,","(failed)","(getstate()","(h","(int","(newstat","(node","(p","(pred","(shouldparkafterfailedacquire(p,","(t","(t.waitstatu","(tryrelease(arg))","(w",")","+","//","0)","02","0;","1))","1,","1;","2;","3)","3)就是fals","3;","3，","9一下都启动了，但是每一批都只有三个线程在执行，因为只有三个线程能拿到锁",";","=","==",">","@overrid","abstractqueuedsynchron","acquire(int","acquireinterruptibly(int","acquirequeued(addwaiter(node.exclusive),","acquirequeued(fin","acquireshared(int","acquiresharedinterruptibly(int","acquireshared需要无条件传播","addwait","addwaiter(nod","addwaiter前面说了，就是进入同步对队列，看看acquirequeu","api","aq","aqs依赖内部的同步队列来完成同步状态的管理，当前线程获取同步状态失败时，aqs会将当前线程以及等待状态等信息构造成为一个节点（node）并将其加入同步队列，同时会阻塞当前线程，当同步状态释放时，会把首节点中的线程唤醒，使其再次尝试获取同步状态。","aqs写太多了，贴了不少代码，但是回头看，几句话就能概括aqs。","aqs就是这么用的，继承他，然后根据需要重写他的方法","aqs提供的模板方法","aqs是同步状态管理的工具","aqs的使用","aqs的原理","arg)","arg))","arg):","arg)：","arg)：共享式获取同步状态，没获取到则进入同步队列，同一时刻可以有多个线程获取到同步状态","arg)：共享式获取同步状态，返回>=0表示获取成功，否则表示获取失败","arg)：共享式释放同步状态","arg)：可以被中断","arg)：独占式释放同步状态，释放后会将同步队列第一个节点唤醒","arg)：独占是获取同步状态，但是能响应中断，被中断抛异常","arg,","arg;","args)","backup","boolean","cancel","cancelacquire(node);","cas底层是sun.misc.unsafe里边提供的，都是些native方法","class","collect","compareandset","compareandsethead(nod","compareandsetstate(int","compareandsettail(nod","compareandsettail或者head失败就自旋","compareandswapint(object","compareandswaplong(object","compareandswapobject(object","condit","conditionobject();","currentst","daxionglock","daxionglock();","demo_03_02_1_aq","demo_03_02_2_triplelock","enq","enq(fin","enq(node);","enq;","establish","exclus","expect,","extend","fail","failur","false;","fast","final","full","gc","getqueuedthreads():","getstate()","getstate();","getstate()：","h","h.waitstatu","head","head;","headoffset,","head都是null怎么处理，有元素怎么处理，无非就是引用指来指去，不同的是，他需要保证原子性","help","illegalmonitorstateexception();","illegalstateexception();","implement","initi","int","interrupt","interrupted;","interruptedexcept","isheldexclusively()","isheldexclusively()：当前同步器是否在独占模式下被线程占用","isshared()","j","lock","lock()","lock.lock();","lockinterruptibly()","long","main(string[]","marker","mode)","mode);","mode;","nanostimeout)：带超时，且能被中断","nanostimeout)：独占是获取同步状态，能响应中断，且有超时，超时返回fals","nativ","new","newcondition()","newstat","newstate))","newstate)：设置同步状态","next;","nextwait","nextwaiter;","node","node()","node()))","node();","node(thread","node(thread.currentthread(),","node)","node))","node,","node.predecessor();","node.prev","node.waitstatus;","node;","null","null)","null,","null;","nullpointerexcept","nullpointerexception();","object","p","p.next","p;","parkandcheckinterrupt())","path","pred","pred.next","pred;","predecessor()","prev;","privat","propag","protect","public","p是当前节点的前驱节点","release(int","releaseshared(int","return","s","selfinterrupt();","setexclusiveownerthread(null);","setexclusiveownerthread(thread.currentthread());","sethead(node);","setstate(0);","setstate(3);","setstate(int","share","shared;","signal","static","super();","sync","sync()","sync();","sync.acquire(1);","sync.acquireinterruptibly(1);","sync.newcondition();","sync.release(1);","sync.releaseshared(1);","sync.tryacquire(1);","sync.tryacquirenanos(1,","sync.tryacquiresharednanos(1,","t","t.next","t.prev)","t;","tail","tail;","tailoffset,","this.nextwait","this.thread","this.waitstatu","thread","thread(()","thread,","thread;","throw","time,","timeunit","tri","triplelock","triplelock();","triplelock.lock();","true;","tryacquire(arg))","tryacquire(int","tryacquirenanos(int","tryacquireshared(int","tryacquiresharednanos(int","tryacquire是你自己要重写的，传说中的模板方法模式啊，比如我们之前那个独占锁","trylock()","trylock(long","tryrelease(int","tryreleaseshared(int","tryrelease也是需要重写的","unit)","unit.tonanos(time));","unlock()","unparksuccessor(h);","unparksuccessor(nod","unsafe.compareandswapobject(this,","unsupportedoperationexception();","update)","update);","update)：原子的设置同步状态","us","var1,","var2,","var4,","var5);","var6);","void","volatil","waitstatus)","waitstatus;","ws","{","}","《java并发编程艺术》里边有个图，对这个独占式同步状态获取流程说的比较清晰","一个使用aqs的例子","一个共享式获取同步状态的例子","一些说明：","三个有一个执行完了，后边的才能拿到锁","下一个在condit","不得不说，牛逼啊！~","为了避免竞争，acquire方法必须首先标识他需要sign","为什么这里不需要用原子操作？因为释放的时候说明那个线程占用同步器，而同步器只会被一个线程占用","举个例子，a线程拿到的变量值是1，想改为3，但是在你还没改的时候b线程给他改成2了，compareandswapint(obj,3333,","从后往前找，找到第一个没有被取消的节点","代码比较多，关键处有注释。aqs就是这么用的，直接继承他，按你的需要去重写他的方法，定义自己的规则，什么样的情况下能获取，什么情况不能等等。","入队","入队和出队的过程","共享和独占获取同步状态的区别其实是看你自己定义的规则是否允许几个线程同时获得同步状态","共享式同步状态的获取和释放","共享式超时同步状态获取","共享式释放同步状态；","共享式：指几个线程可以同时获得同步状态，独占式：指只能单独的线程获得同步状态","其实和独占差不多，不同的是可以同时有几个线程获得同步状态，而满足怎样的条件可以获取同步状态时通过重写tryacquireshared决定的。","出队","出队就head指针的改变，出队是首节点出队，而节点是获取同步状态的节点，而同步状态只有一个节点能获取到，所以出队是不用cas的","出队的很关键一点是，他需要唤醒他后边节点的线程，让他去拿同步状态","前面的“独占不可重入锁”演示了独占式获取同步锁，这个例子演示共享式","只要tryacquireshared返回值>=0,","可以把aqs理解为管理状态的一个东西，然后你可以通过重写他的一些方法定义自己的规则","可以被重写的方法","可以通过重写他的一些方法制定自己的规则","同步队列中的节点","后边的先传给你需要unparking，","后边的线程被阻塞(通过park)了，","否则的话，也是加入同步队列里自旋，判断条件时tryacquireshared返回值>=0了，","和普通队列一样，也是考虑tail","和独占式的区别就是，他的释放是需要保证原子性的，因为独占式释放的时候时天然的原子性，而共享式的可能有几个线程同时释放，所以就要通过自旋+cas保证原子性","因为0才是没被占用，所以我们期望0的时候可以获取，获取之后要改为非0","基于aqs实现一个独占不可重入锁，不可重入就是一个线程获取到了锁，然后他又来获取，这时会被阻塞","如果失败就阻塞","如果当前节点变为了头节点，且拿到了同步状态","实在独占式的模式下","实现锁的时候直接调aqs的方法就好了","小结","就是成功获取到了同步状态了","当前时间是否超出了deadline,","当前节点的线程的引用","当同步队列的首节点释放时就通知他的后继节点尝试获取同步状态，获取成功就把自己这只为首节点","思路：使用四个状态，0","我们发现，入队其实挺简单的，特殊的就是一个cas操作了。ca","我们自己的独占锁里边的tryacquir","我们规定，同步状态为0表示同步器没有被占用，非0表示被占用了","我特么才知道idea有个快捷键叫ctrl+f12","所以,当前节点必须在他取消或者释放时unpark他后边的节点的线程","所以一定是原子的","方法比较多，不要怕，通过下边的例子和之后对一些锁的实现原理分析就能理解了","是在共享式的模式下","暂时不用condition,直接返回nul","标识","标识没有cancel","标识线程取消，可能是因为超时或者被中断了，这是个终态，不会再block了","标识线程在condition等待，等待在condition队列，直到被转移到sync","比较交换","没什么可写的了，列个标题，猜也能猜到怎么做的了","没有太大区别，就是他加入同步对队列后会算一个deadline,deatline=当前时间+你允许的超时时间，然后自旋的时候会每次都检查","没被占用尝试释放，直接抛异常，也就是必须式获取了同步状态的线程才能释放他","注意&&是短路的，写的真骚气","然后尝试原子acquire,","然后是释放同步状态","然后里边节点有自己的状态，然后有共享还是独占的标识，有自己的状态。","状态>0就表示同步器被占用了","独占式同步状态的获取与释放","独占式获取同步状态，在此方法中需要查询当前状态并判断是否符合预期，然后cas设置同步状态","独占式获取同步状态，获取成功则返回，否则进入同步队列等待，会调用重写的tryacquire(int","独占式超时同步状态获取","独占式释放同步状态，","由于我们时独占锁，所以重写独占式同步状态获取和释放，以及同步器是否被占用的判断规则","目前还不是特别明朗，继续看","第一个参标识","第三个，原来的状态与expect相等，则修改为update状态，否则返回fals","第二个是个偏移量，第三个是你期望他是什么值才改，第四个是你想改成什么","等待获取同步状态的线程有机会拿到同步状态","获取","获取同步状态","获取同步状态失败时会构建一个节点放到同步队列，然后自旋获取同步状态，","获取同步队列里的线程","获取和修改aqs状态的几个方法","获取失败的话会进入同步队列阻塞","获取的话，前面api里变有，是","表示剩余可以获得锁的线程数，0表示没有了，不能获取了，需要阻塞","要改那个对象，","要求：实现一把锁，至多三个（书上是两个，咱们变化下，哈哈）线程可以获得","设置当前线程占用了这个访问的权限","证明写的没问题","超出了就直接返回fals","超时获取，就是会根据你给的超时时间算一个deadline,每次自旋都检查是否超出了deadline，超出了直接获取失败，返回fals","还有这个","这一段对节点的定义代码少，注释贼多，看了一下，惊奇的发现，《java并发编程艺术》里边的跟里边的注释差不多","这两个线程一定是一个线程执行完了另一个执行","这两方法，直接aqs源代码找就可以了","这个就是之前讲的出队的操作，他会唤醒当前节点的下一个不是cancel状态的节点","这个就是传说中的cas操作了","这个测试例子，发现0","这里先直接这么尝试一把，不行再enq","这里就是你加的节点一自旋获取同步状态","这里应该是一个加速吧，本来直接调enq就可以了，但是enq里边有自旋","这里我找了很久首节点引用在哪修改的，但是没找到，奇怪（在后边找到了，一个节点进入到同步队列后就会开始自旋获取同步状态，获取到了就会改head引用的执行，指向自己）","那么同步状态就获取成功了。","那么将当前节点设置为头","释放","队列","队列同步器abstractqueuedsynchronizer（aqs)是实现各种锁的关键，因此要了解锁的原理或者自己实现锁必须先了解aqs。","队列（条件队列或者等待队列）等待的节点","首先他是双向队列的节点，所以prev,next,"],"第03章-锁/03-ReentrantLock.html":["!=","!hasqueuedpredecessors()，hasqueuedpredecessors是判断当前节点是否有前驱节点，如果有，证明有比当前节点等待时间长的节点，所以此时失败，返回false，继续等","\"","\"[lock","\"[unlocked]\"","\"]\");","&&","(!(condit","((","((o","(c","(compareandsetstate(0,","(condit","(current","(nextc","+","//","0)","03","1,","5179523762034025860l;","7373984872572414699l;",":","=","==","?","abstract","abstractqueuedsynchron","abstractqueuedsynchronizer.conditionobject))","acquires)","acquires))","acquires;","boolean","c","class","collect","condition)","current","extend","field","final","getexclusiveownerthread())","getqueuedthreads()","getstate();","getwaitingthreads(condit","getwaitqueuelength(condit","h","h.next)","hasqueuedpredecessors()","haswaiters(condit","head;","illegalargumentexception(\"not","implement","initi","instanceof","int","java.io.serializ","lock();","lock,","long","new","nextc","node","nonfairtryacquire(int","null","null)","nullpointerexception();","o","o.getname()","order","owner\");","privat","protect","public","read","reentrantlock","return","revers","s.thread","s;","serialversionuid","setexclusiveownerthread(current);","static","string","super.tostring()","sync","sync.getowner();","sync.getqueuedthreads();","sync.getwaitingthreads((abstractqueuedsynchronizer.conditionobject)condition);","sync.getwaitqueuelength((abstractqueuedsynchronizer.conditionobject)condition);","sync.haswaiters((abstractqueuedsynchronizer.conditionobject)condition);","sync;","t","tail;","thread","thread.currentthread());","thread.currentthread();","throw","tostring()","true;","void","{","||","}","公平与非公平","公平就是先尝试获取锁的线程会先得到多，非公平则是去竞争锁，默认是非公平的锁","公平的相比于非公平的会多判断一个","公平的锁多一次判断，导致性能损失，可以避免饥饿","原理","可重入原理","同步队列为空，或者当前节点是头节点","如果减到了0，表示释放成功了，否则没有释放成功","实现方面非公平和公平的区别就tryacquire方法不一样","就是支持重进入的锁，它表示该锁能够支持一个线程对资源的重复加锁。除此之外，该锁的还支持获取锁时的公平和非公平性选择。","很严谨","有线程获取了锁，这个线程是自己","源码","源码不多，直接贴出来","状态是0表示没有被获取，进行cas并在cas成功时返回tru","获取的时候如果state==0，那么正常获取，同时记录拥有同步状态的是当前线程，cas更新状态为1；如果state!=0,就要看拥有同步状态的线程是不是和当前线程一样，一样的话，获取成功，同时cas对state+1，不一样则进入同步队列里边自旋阻塞","跟我们使用aqs一样，也是继承他然后定义一些自己的规则","返回false，","返回false，tryacquire才可能返回true，保证了先来后到","这个是公平性的保证，他记录了谁获取到同步状态","释放：释放的时候state","非公平的性能会更高，但是可能会产生饥饿"],"第03章-锁/04-ReentrantReadWriteLock.html":["!=","(!compareandsetstate(c,","(!isheldexclusively())","(!isupdate)","(c","(free)","(int","(w","+","//","0","0)","04","0;","1))","1，减到0就是读锁释放了。","1，当写状态为0时表示写锁已被释放，唤醒同步队列里的线程，同时前次写线程的修改对后续读写线程可见。","=","==","boolean","c","class","count","current","c与0x0000ffff求与","c！=0但是低16位为0表示有人拿了读锁，有人拿了读锁是不能获取写锁的","error(\"maximum","exceeded\");","exclusivecount(c);","exclusivecount(nextc)","false;","final","free","free;","getexclusiveownerthread())","getreadholdcount()：返回当前线程获取读锁的次数","getreadlockcount()：返回当前读锁被获取到的次数，与线程数无关，同一个线程获取n次","getstate()","getstate();","getwriteholdcount()：获取当前写锁被获取的次数","illegalmonitorstateexception();","int","isupd","iswritelocked()：判断读锁是否被获取了","linkedlist","linkedlist<>();","lock","max_count)","max_count是0xffff,","new","nextc","privat","process","process.processdata();","processdata()","protect","public","readlock","readlock()：","readlock.lock();","readlock.unlock();","reentrantreadwritelock","reentrantreadwritelock();","reentrantreadwritelock.readlock","reentrantreadwritelock.readlock();","reentrantreadwritelock.writelock","reentrantreadwritelock.writelock();","releases)","releases;","return","setexclusiveownerthread(current);","setexclusiveownerthread(null);","setstate(nextc);","thread","thread.currentthread();","throw","tri","true;","tryrelease(int","trywritelock()","void","w","writelock","writelock()：","writelock.lock();","{","||","}","}).start();","为了用一个state表示两种锁的状态就需要对状态拆分，int是32位，所以拆成两个部分，高16位标识读状态，低16位标识写状态。","主要是为了保证数据的可见性，如果当前线程不获取读锁而是直接释放写锁，","假设1不加读锁的话，线程a执行到2这个位置，写锁已经释放了，读锁也没有，所可能恰好此时有别的线程（线程b）获取到了写锁，又修改了数据，此时线程a或的数据还是之前的，这就是他没有感知到线程b对数据的更新。","假设此刻另一个线程（记作线程t）获取了写锁并修改了数据，那么当前线程无法感知线程t的数据更新。如果当前线程获取读锁，即遵循锁降级的步骤，则线程t将会被阻塞，直到当前线程使用数据并释放读锁之后，线程t才能获取写锁进行数据更新。","写锁是一个支持重进入的排它锁。若写状态为0且读状态为0，直接获取写锁；若写状态大于0，看获取同步状态的线程是不是当前线程，是则写状态+1，否则，构建节点进入同步队列，自旋阻塞。","写锁的获取与释放","写锁的释放与reentrantlock的释放过程基本类似，每次释放写状态","原理","可以思考下为什么有人拿了读锁不能获取写锁","可重入","因为写状态是只有16位的","在设置或者获取状态时需要做一些位运算","在读多于写的情况下，读写锁能够提供比排它锁更好的并发性和吞吐量","当一个写线程访问时，所有其他线程阻塞","当一个读线程访问时，其他读线程不会被阻塞","当然这里边可能会涉及记录哪些线程获取了读锁，我也没细看，感觉没什么难度。","必须先释放读书","支持公平锁与非公平锁","支持锁降级：遵循获取写锁、获取读锁再释放写锁的次序，写锁能够降级为读锁","核心api","根据锁降级还是比较难理解的，为啥要有这个东西，书上原文","模拟生产数据","特性","直接搬书上的一个例子","碎碎念","突然想到一个面试题，读写锁中读锁之多可以被多少个线程获取？写锁呢？这个是我自己想到的题。感觉能比较好的考察对读写锁原理的理解。","获取写锁","获取读锁","读写状态的设计","读写锁在同一时刻允许多个线程访问","读写锁有两个锁，而且他们是有关系的，显然是用一个aqs，但是一个aqs只有一个state。","读写锁维护了一对锁，一个读锁和一个写锁，通过分离读锁和写锁，使得并发性相比一般的排他锁有了很大提升。","读锁是一个支持重进入的共享锁，它能够被多个线程同时获取，写状态位0时总能获取，写状态不为0，不会获取，获取成功读状态就+1。","读锁的获取与释放","返回n","这没啥好说的","释放的时候呢就是读状态","锁降级","锁降级是指把持住（当前拥有的）写锁，再获取到读锁，随后释放（先前拥有的）写锁的过程。"],"第03章-锁/05-LockSupport.html":["05","api","blocker)","blocker,","broker表示阻塞对象，多用于系统监控可问题排查，书上说的，我也不知道","deadline)","locksupport","long","nanos)","notifyall不支持指定具体唤醒哪个线程，阻塞也只能阻塞当前线程，不能阻塞别人。所以说sync虽好，但是太死板了。","notifyall唤醒，但是notifi","park()","park(object","parknanos(long","parknanos(object","parkuntil(long","parkuntil(object","public","static","thread)","unpark(thread","void","关于这些api的使用姿势感觉可以直接看aqs源码就好了，里边应该不少的。大雄不看了，用到再说，知道有这么个东西","去aqs里面搜locksupport，能出来一堆。locksupport定义了一组的公共静态方法，这些方法提供了最基本的线程阻塞和唤醒功能，而locksupport也成为构建同步组件的基础工具。","回顾之前的线程的生命周期，我们有能力进block(阻塞)状态的。但是我们会发现他是需要synchronized的，所以不用synchronized想阻塞线程就没招了。我理解locksupport应该就是在这样的复杂背景下荣耀登场的吧。","带时间的阻塞有两种，一种是传一个相对时间，表示要阻塞多久；另一种是一个绝对时间，阻塞到啥时候","要用notifi","还有更狠的，sync","阻塞的姿势比较多，唤醒只有一种姿势。"],"第03章-锁/06-Condition.html":["!=","!compareandsetwaitstatus(p,","&&","(","(!compareandsetwaitstatus(node,","(!isheldexclusively())","(!isonsyncqueue(node))","(!isonsyncqueue(node)),","(!transferforsignal(first)","((interruptmod","(acquirequeued(node,","(first","(firstwait","(interruptmod","(node.nextwait","(thread.interrupted())","(w","*","*/","/**","//","0","0)","0))","06","0;","1.","2.","=","==",">","@param","@return","@throw","``","```java","addconditionwaiter();","await()","await(long","awaituntil(d","await方法里面的whil","boolean","break;","cancel","checkinterruptwhilewaiting(node))","clean","condit","conditionobject","conditionobject();","conditionobject里边有两个重要成员变量firstwaiter，lastwaiter，对比aqs，aqs有head和tail，这个是双向队列的模板，太巧了","condition是lock的附属物，condition定义了等待/通知两种类型的方法，当前线程调用这些方法时，需要提前获取到condition对象关联的锁。","condition的api","deadlin","deadline)","dosignal(first);","dosignal(nod","dosignalall(nod","enq(node);","enq前面分析过，就是同步队列的入队","false;","final","first","first)","first.nextwait","first.nextwaiter)","first.nextwaiter;","firstwait","firstwaiter)","firstwaiter;","fullyrelease(node);","illegalmonitorstateexception();","int","interfac","interruptedexcept","interruptedexception();","interruptedexception;","interruptmod","lastwait","locksupport.park(this);","locksupport.unpark(node.thread);","new","newcondition()","next","next;","node","node)","node.condition,","node.signal))","null)","null);","null;","p","p.waitstatus;","privat","public","reinterrupt;","reportinterruptafterwait(interruptmode);","return","savedst","savedstate)","signal()","signal();","signalall();","signalall就是把等待队列中的所有节点都转移到同步队列，并唤醒","sync.newcondition();","throw","throw_ie)","time","time,","timeunit","transferforsignal(first);","transferforsignal(nod","true;","unit","unit)","unlinkcancelledwaiters();","up","void","ws","ws,","{","||","}","一个锁可以搞多个condit","上边这段描述是我看简单搂了一眼源码写的，发现竟然和书上意思一样，开心~","不是await的地方会立即执行的，需要先抢到锁才会继续执行","会发现里边也和aqs同步队列类似，有一个队列结构，队列节点居然和之前说的同步队列的节点是一样的，世间真奇妙","但是我们发现他是掉的aqs的newcondition方法","做了几个事，等待队列首节点出队，将这个首节点入队到同步队列，唤醒这个首节点的线程，唤醒之后就会去竞争锁（或者叫同步状态）了","其他线程调用interrupt中断了当前线程","其他线程调用了该condition的sign","去看conditionobject，","发现conditionobject是aqs的内部类","可以发现调用了signal","可见conditionobject应该是实现了condition接口，去看一眼","唤醒所有等待在condition上的线程","唤醒等待在condition上的一个线程","因为调用await是获取锁的","在reentrantlock里边搜newcondit","在找到aqs的newcondition，发现这个是自己写的","在第二章第5节已经说了conditon,","基本原理","将会不满足条件了，所以await方法会返回","当前线程调用condition.await()方法，将会以当前线程构造节点，并将节点从尾部加入等待队列。","当时用condition做了一个有界队列。","很关键，唤醒","必须要获取锁","我们拿condition都是通过lock的newcondition接口拿的","我没仔细看，这里大概的意思是会把这个节点从同步队列移除，并且释放锁","或signalal","指定到某个时间还没被通知且没被中断直接返回，提前被通知了返回true，否则fals","接下来就是看signal了，感觉能猜到他是怎么做的了","构建了一个node放到等待队列的队尾","等价上面那个","等待队列","简单理解，await就是根据当前线程信息构建node节点，加入等待队列，同时由于调用await的一定是获取锁的，所以我们要移除当前线程在同步队列的那个节点，其实就是首节点，首节点要变，首节点的线程就要释放锁，其实就是当前线程会释放锁。","让当前线程进入等待状态直到被通知或者被中断，当前线程重新进入运行状态且从await方法返回的情况如下"],"第04章-并发容器/":["java.util包下提供的容器类是非线程安全的，并发共享访问会出现问题。java.util.concurrent包下提供了一些线程安全的容器类。","并发容器","并发容器的代码大雄看的很少，只是简单的把书上的内容提炼一下，有疑问的地方找一些资料作为补充。","第04章"],"第04章-并发容器/01-ConcurrentHashMap.html":["01","concurrenthashmap","concurrenthashmap效率高","concurrenthashmap是由segment数组结构和hashentry数组结构组成","concurrenthashmap是线程安全且高效的hashmap","get(object","hashentry用于存储键值对数据","hashmap线程不安全。","hashtable效率低下","hashtable是util包下边的,去源码搜一个get，一个put，发现他的线程安全使用synchronized实现的，这种就是有一个线程在put时，大家都要等，有一个线程在get时也是这样。因此效率低。","key)","key,","public","put(k","segment是一种可重入锁","synchron","v","value)","一个concurrenthashmap里包含一个segment数组。segment的结构和hashmap类似，是一种数组和链表结构。","一个segment里包含一个hashentry数组","为什么使用","使用分段锁技术提高并发访问效率。","原理","在多线程环境下，使用hashmap进行put操作会引起死循环，导致cpu利用率接近100%，所以在并发情况下不能使用hashmap","当对hashentry数组的数据进行修改时，必须首先获得与它对应的segment锁","感觉concurrenthashmap了解到这里已经够了，搞清楚他高效的原因就时用了分段锁","每个segment守护着一个hashentry数组里的元素","然后就是put和get时都需要先拿到segment,所以涉及如何定位segment的问题，按书上说的是对key做再散列。","结构","这样的一个结构是我们访问时只用锁住一部分而不用锁住整个hashmap了","首先将数据分成一段一段地存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据的时候，其他段的数据也能被其他线程访问。"],"第04章-并发容器/02-ConcurrentLinkedQueue.html":["!=","&&","(node","(p","(p.casnext(null,","(q","(t","//","//【b】","02",":","=","==","?","boolean","castail(t,","cas设置tail.next=加进来的节点","checknotnull(e);","concurrentlinkedqueu","e)","failur","final","head;","new","newnod","newnode))","newnode);","node","node(e);","null","null)","offer(","ok.","ok，所以最后一个节点并不是就是tail指的节点，得验证tail一直往下找才行","p","p.next;","public","p和t都是执行第三个节点的，他们相等，短路操作，后边不走了，三元条件是false，所以p指向q，暂停（假设线程2卡在这里了），梳理一下此时的状态：tail和t都是指向第三个节点，p指向q，q指向新节点1号。","q","q)","q;","return","t","t)","t;;)","tail))","tail,","tail.next","tail的next","true;","{","}","【a】","【c】","【d】","【大else】","【第一个大if】","【第二个大if】","不说了，直接引用书上的话。","与此同时，线程2开始尝试插入节点（新节点2号），进入for，显然，此时的tail,t,p都是指向第三个节点的，注意此时的q，q是第三个节点的next节点，所以q==新节点1号，不满足【第一个大if】，而且p是指向第三个节点的，也不满足【第二个大if】，所以进入到【大else】，所以执行这个三元操作，看一个条件p!=t?","假设队列已经有三个节点了，此时没有任何线程在操作队列。","入队","其实也就是tail就是最后一个节点","出队","原理","又看了下书，说为啥不是每次入队都直接更新tail呢，是为了减少cas操作，因为更新tail是要cas的，cas是耗cpu的。直接去cas更新也是没问题的。","和入队差不多，出队了head指向的不一定是第一个节点","基于链表的并发队列，确实像书上说的那样，要是我去做的话估计一个synchronized完事，但是jdk里边是用cas做。","并不是每次出队时都更新head节点，当head节点里有元素时，直接弹出head节点里的元素，而不会更新head节点。只有当head节点里没有元素时，出队操作才会更新head节点。这种做法也是通过hops变量来减少使用cas更新head节点的消耗，从而提高出队效率。","情况一：","我们会发现，一次入队后，tail并不一定是指向最后一个节点的，注释也说了，改变tail的cas失败了都是ok的，failur","所以，走到了【a】位置，暂停（假设线程1现在就卡在这里了），理一下此时的状态，p和t还有tail都是指向第三个节点的，第三个节点的next节点是指向新节点1号的","本来想着写一个情况二、三、四把所有分支走完，但是感觉没必要了，感觉类似这样梳理就能清楚了，就是两个线程并发执行的一个重现，想不明白就可以画图，还是挺有趣的，要写出这样的代码感觉不太难，但是细节需要抠的很仔细。","构建一个节点","注意一下p、t、q、newnode这些不是线程共享的，只有tail还有队列里的那些东西才是共享的","线程1继续执行，p!=t?发现是相等的，都是指向第三个节点，不进入if，返回true，入队成功，此时tail是指向第三个节点，也就是倒数第二个节点，而不是最后一个节点。","线程1，尝试入队新节点（新节点1号），q是tail的next，肯定==nul,","线程2继续执行，再次进到for循环，q=p.next,","而前面说了p已经指向了新节点1号，新节点1号的next是null,所以q==null,进入【第一个大if】，然后cas设置p的next为新节点2号，也就是新节点1号.next=新节点2号，然后p!=t?发现p是指向新节点1号的，t还是执行3号节点的，所以if成立，cas将tail指向新节点2号，返回true。","这个可以思考下","这段代码感觉很难理解，我是画图来理解的，关键是要明白到底是两个线程怎样的运行次序才会出现代码中的if，我在代码中标注了几个位置，试图用文字来阐述我的理解"],"第04章-并发容器/03-ConcurrentLinkedDeque.html":["03","concurrentlinkeddequ","todo:","基于双向链表实现的双向并发队列，可以分别对头尾进行操作，因此除了先进先出(fifo)，也可以先进后出（filo），当然先进后出的话应该叫它栈了。","补充实现原理","这个我没看，感觉就是不必concurrentlinkedqueue多了两种情况，从队头入队，从队尾出队。有空再看看补充下"],"第04章-并发容器/04-两个基于跳表的容器.html":["04","14个java并发容器，你用过几个？","concurrentskiplistmap","concurrentskiplistset","skiplist即跳表，跳表是一种空间换时间的数据结构，通过冗余数据，将链表一层一层索引，达到类似二分查找的效果。","两个基于跳表的容器","参考资料","基于跳表的并发map","基于跳表的并发set","补充","说实话，我已经忘了跳表了，回头复习下补充。todo:","这里贴一下网上的一些描述"],"第04章-并发容器/05-CopyOnWrite系列.html":["+","05","1);","=",">修改数据",">改引用","add(","add的话先加锁，如果不加锁，可能拷贝几份出来，而且会有线程安全问题。","array;","arrays.copyof(elements,","boolean","copyonwritearraylist","copyonwritearraylist里边核心就是维护这样的一个数组，注意这里加了volatil","copyonwritearrayset","copyonwrite于reentrantreadwritelock的对比","copyonwrite就是写时复制，就是在写操作时，不是直接操作原数据容器，而是先复制一份，在复制的这一份里写，写完再将引用指向复制的这一份。","copyonwrite的好处","copyonwrite的缺点","copyonwrite系列","copyonwrite读数据实时性要比reentrantreadwritelock差。因为当copyonwrite读到一批数据在消费时，恰好有别的线程修改了数据，此时读线程还是使用的老的数据；但是reentrantreadwritelock不一样，只要有人读，你就不能写，只要有人写，你就不能读","e","e)","e;","element","elements.length;","final","get(getarray(),","get(int","getarray();","index)","index);","int","len","lock","lock.lock();","lock.unlock();","newel","newelements[len]","object[]","privat","public","reentrantlock","return","setarray(newelements);","this.lock;","transient","tri","true;","volatil","{","}","什么是copyonwrit","从上边分析可以看出，我们选型的时候应该要优先copyonwrite,","他们写的效率是差不多的，写的时候都是需要获取独占锁的。","他们都适用读多写少的情况","先复制了一个newelements出来，然后改newelements,最后是把容器里维护的array指向newel","先看add","再瞅瞅get","原理","原理和copyonwritearraylist一样，区别就是写的时候会判断存不存在，存在直接返回false，不存在才会复制","参考资料","因为他的效率高，如果对实时性要求特别高，不允许读线程读到老数据，那就用reentrantreadwritelock","基于copyonwrite的容器","实时性不高，读线程可能会用老数据","对读不加锁，可以提高读的效率，适用于读多写少的情况","并发容器之copyonwritearraylist","影响gc。写的时候拷贝一份，老的需要被gc掉。","很简单，不加锁，不cas啥的，直接读。","我们不是加了volatile吗，volatile就能保证内存可见性了，但是为什么要复制一份改变引用呢，请注意volatile并不能保证数组里元素变化的可见性，只能保证引用变化的可见性","浪费内存。因为每次写都会拷贝一份","读的效率copyonwrite会更高。因为reentrantreadwritelock只要有一个线程获得写锁，所有线程都无法获得读锁，也就是读会被阻塞，但是copyonwrite不一样，不管有没有线程在写，他都能读","这样就能保证写的过程中其他线程可以继续读旧的容器里的数据，他们不会变，写完之后再有线程读就可以读到最新的了。"],"第05章-阻塞队列/":["jdk提供的阻塞队列有7个，如下所示。","他们都是实现blockingqueue接口，下面一一介绍。","第05章","阻塞队列","阻塞队列就是当队列满了仍然尝试去入队会被阻塞，当队列为空时尝试去出队取元素也会被阻塞的队列。","阻塞队列常用于生产者消费者模型，生产者往队列丢数据，消费者从里面取数据。"],"第05章-阻塞队列/01-阻塞队列的通用操作.html":["01","add(","api和不可用的处理方式","boolean","e","e)","e,","element()","full\"）","interruptedexcept","long","offer(","peek()","poll()","poll(long","put(","remove()","take()","throw","timeout,","timeunit","unit)","void","一直阻塞","不可用","也是会阻塞，但是达到一定时间还没成功就返回特殊值了","当阻塞队列不可用时（向满的队列插入，从空队列取数据），提供了四种处理方式","抛出异常","插入","方法","查看","满了继续插入会抛出：illegalstateexcept","满了继续插入会返回fals","满了继续插入会阻塞，直到有空位或被中断","移除","空了继续出队会抛出：nosuchelementexcept","空了继续出队会返回null","空了继续出队会阻塞，直到有元素或被中断","超时退出","返回特殊值","阻塞队列的通用操作","阻塞队列都是实现blockingqueue接口的，因此他们方法都是一样的","（\"queue"],"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":["\"","(interruptedexcept","(second","(sequencernumb","(shoudrun)","(原文引用)","+","//","0","0)","0);","02","0;","1;",":","=",">","?","@overrid","arrayblockingqueu","arrayblockingqueue(int","arrayblockingqueue：一个由数组结构组成的有界阻塞队列。","atomicinteg","atomicinteger(0);","boolean","capacity,","catch","class","compareto(delay","date());","delay","delayqueu","delayqueue.put(task);","delayqueue.take();","delayqueue<>();","delayqueue：一个使用优先级队列实现的无界阻塞队列。","e)","e.printstacktrace();","fair)","false;","getdelay(timeunit","gettaskname()","implement","int","linkedblockingdequ","linkedblockingdeque：一个由链表结构组成的双向阻塞队列。","linkedblockingqueu","linkedblockingqueue：一个由链表结构组成的有界阻塞队列。","linkedtransferqueu","linkedtransferqueue：一个由链表结构组成的无界阻塞队列。","long","new","o)","priorityblockingqueu","priorityblockingqueue：一个支持优先级排序的无界阻塞队列。","privat","public","return","schedul","schedule()","second)","sequenc","sequencer.getandincrement();","sequencernumb","settaskname(str","shoudrun","start()","stop()","string","submit(task","synchronousqueu","synchronousqueue：一个不存储元素的阻塞队列。","system.currenttimemillis()","system.out.println(\"我开始处理任务了\"","task","task(str","task)","task.gettaskname()","taskname)","taskname,","taskname;","this.sequencernumb","this.tasknam","this.tim","thread","thread(()","thread.start();","thread;","time;","timeunit.seconds.tomillis(second)","transfer方法","tri","true;","trytransfer方法","trytransfer方法是用来试探生产者传入的元素是否能直接传给消费者。如果没有消费者等待接收元素，则返回false。","unit)","void","{","}","});","一共有7个阻塞队列：","严格来讲并不是一个定时任务","他就是定义排序规则，在delayqueue里边，我们一般喜欢把快要过期的、甚至已经过期的老元素放到前面，其实你也可以用comparator接口，会更灵活","他的特点就是从队首队尾插入都行，从队首队尾出队都行","使用场景","公平性用reentrantlock实现的，公平也会降低并发效率。","内部是用object数组维护的","内部是链表维护","双向","可以实现元素的compareto方法指定排序规则，也可以在构造时传入comparator,","各种阻塞队列的特点与应用","呸呸呸，应该是时间，看秒的部分发现是符合预期的。","和transfer方法的区别是trytransfer方法无论消费者是否接收，方法立即返回，而transfer方法是必须等到消费者消费了才返回。","多了trytransfer和transfer方法","如果当前有消费者正在等待接收元素（消费者使用take()方法或带时间限制的poll()方法时），transfer方法可以把生产者传入的元素立刻transfer（传输）给消费者。","如果没有消费者在等待接收元素，transfer方法会将元素存放在队列的tail节点，并等到该元素被消费者消费了才返回","定时任务调度：使用delayqueue保存当天将会执行的任务和执行时间，一旦从delayqueue中获取到任务就开始执行，比如timerqueue就是使用delayqueue实现的。","对列元素要实现delayed接口，指定多久才能获取元素，只有到期的元素才能出队","总结下使用delayqueue的步骤","我写了一个很垃圾的例子，搞个定时任务,","支持优先级","支持公平与非公平","支持延时获取元素","数组和链表实现的区别跟基础数据结构里边的数组和链表的区别一样，但是对队都是在首尾操作，感觉区别也不大","无界","无界，不存储元素","时间=\"","有界","有界，默认为integer.max_valu","每一个put操作必须等待一个take操作，否则不能继续添加元素，每一个take也必须等待一个put，因为没有元素","然后你会发现我们的compareto用了一个sequencernumber，这个呢是个原子自增的，用于处理两个过期时间一样的任务如何排序的问题，我的规则是谁先创建谁排前面","生产队列元素和消费队列元素，这和使用一个普通队列几乎没两样了","的吞吐量高于linkedblockingqueue和arrayblockingqueu","缓存系统的设计：可以用delayqueue保存缓存元素的有效期，使用一个线程循环查询delayqueue，一旦能从delayqueue中获取元素时，表示缓存有效期到了。","这个玩意儿是comparable接口里面的，因为delayed继承了compar","这个表示，如果返回的值","这和priorityqueue是一样一样的","这样正确的终止线程","这里最重要的点就是【欢迎关注微信公众号“大雄和你一起学编程”】，","链表","非常适合传递性场景","首先就是要定义你的队列元素，这个类需要实现delayed接口，需要实现里边的两个方法","默认最大长度是integer.max_value，可以在构造里面指定","默认非公平，可以在构造指定"],"第05章-阻塞队列/03-阻塞队列实现原理.html":["!=","(++putindex","(++takeindex","(;;)","(capac","(count","(e)","(first","(itr","(q.peek()","//","0)","03","0;",";","=","==","@suppresswarnings(\"unchecked\")","arrayblockingqueue(int","available.await();","available.signal();","boolean","capacity,","checknotnull(e);","count","count++;","delay","delayqueu","delayqueue是有他的特殊之处的,所以看一看","dequeue()","dequeue();","e","e)","enqueue(","enqueue(e);","fair)","final","first","first.getdelay(nanoseconds);","interruptedexcept","item","items.length)","items[putindex]","items[takeindex]","items[takeindex];","itrs.elementdequeued();","leader","lock","lock.lock();","lock.lockinterruptibly();","lock.unlock();","long","new","notempty.await();","notempty.signal();","notfull.await();","notfull.signal();","null)","null;","object[]","offer(","priorityqueu","priorityqueue();","privat","public","put(","putindex","q","q.offer(e);","q.peek();","reentrantlock","return","synchronousqueu","take()","takeindex","this.items;","this.lock;","throw","todo:","tri","true;","void","x","x)","x;","{","}","一句话可以说明白，arrayblockingqueue是基于reentrantlock及其condition实现的。说到这里，你可能已经知道怎么搞了。","似曾相识的感觉，我们在第二章第5节实现的boundlist就是这么搞的","再看出队","可见他的排序是借助优先级队列做的","大雄只看了arrayblockingqueue,","如果入队的元素排在了第一个，就通知等待着的消费者","就是做了一个put相反的操作","待补充","感觉应该是差不多的。如有错误，欢迎指出。","没有元素的话，等待","满了就放到notfull的等待队列","看一下这个构造","看他的入队","看看put","看看take","这个q是他内部维护的一个优先级队列，privat","这个while是必要的","这个初看了下，没太明白，后续再看看吧","这是个循环数组","这里也是用了condit","通知等待的消费者，有元素可以消费了","阻塞队列实现原理"],"第06章-线程池与Executor框架/":["与数据库连接类似，线程也是珍贵资源，线程的创建和销毁都会损失性能，所以和数据库链接池思路类似，我们也可以将线程放到一个池子里，用的时候去取，用完还回去，这个池子就是线程池。","使用线程池能够","提高响应速度","提高线程的可管理性","第06章","线程池与executor框架","降低资源消耗"],"第06章-线程池与Executor框架/01-使用线程池.html":["\"任务被拒绝了哦，欢迎关注微信公众号“大雄和你一起学编程”\"","\"执行完了，欢迎关注大雄和你一起学编程\");","(int","(interruptedexcept","+","//","01","0;","10,","2,","=","@overrid","abortpolicy：直接抛出异常。","arrayblockingqueue<>(3),","atomicinteger.getandincrement());","blockingqueu","call()","callable()","callerrunspolicy：只用调用者所在线程来运行任务。","catch","corepoolsize,","corepoolsize:","cpu密集型：核心线程数=核心数+1","cpu核心数通过runtime.getruntime().availableprocessors()获得","discardoldestpolicy：丢弃队列里最近的一个任务，并执行当前任务。","discardpolicy：不处理，丢弃掉。","e)","e.printstacktrace();","except","execute()方法用于提交不需要返回值的任务，所以无法判断任务是否被线程池执行成功。","executor)","finali","futur","handler)","handler：拒绝策略，当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是abortpolicy，表示无法处理新任务时抛出异常。jdk有几种默认策略，也可以自定义策略，默认策略如下","int","integ","io密集型：核心线程数=2*核心数","j","keepalivetime,","keepalivetime：","long","maximumpoolsize,","maximumpoolsize：最大线程数量，如果队列满了，已有线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是，如果使用了无界的任务队列这个参数就没什么效果。","new","newthread(runn","public","r)","r,","rejectedexecution(runn","rejectedexecutionhandl","rejectedexecutionhandler()","return","shutdown","shutdownnow","shutdownnow首先将线程池的状态设置成stop，然后尝试停止所有的正在执行或暂停任务的线程，并返回等待执行任务的列表","shutdown只是将线程池的状态设置成shutdown状态，然后中断所有没有正在执行任务的线程","submit()方法用于提交需要返回值的任务","sum","system.out.println(\"任务\"","system.out.println(\"任务被拒绝了哦，欢迎关注微信公众号“大雄和你一起学编程”\");","thread","thread(r);","thread.setname(\"欢迎关注微信公众号“大雄和你一起学编程”\"","thread.sleep(1000);","thread;","threadfactori","threadfactory()","threadfactory,","threadfactory：用于设置创建线程的工厂，可以通过线程工厂给每个创建出来的线程设置更有意义的名字。要实现threadfactory接口","threadpoolexecutor","threadpoolexecutor(2,","threadpoolexecutor(int","threadpoolexecutor.submit(new","threadpoolexecutor这个类就好了","throw","timeunit","timeunit.seconds,","tri","unit,","unit）方法则会阻塞当前线程一段时间后立即返回，这时候有可能任务没有执行完","unit：","void","workqueue,","workqueue：","{","}","});","},","“欢迎关注微信公众号“大雄和你一起学编程”数字”，拒绝测试时打印一段非常有意思的一段话","一些原则","任务0执行完了，欢迎关注大雄和你一起学编程","任务1执行完了，欢迎关注大雄和你一起学编程","任务2执行完了，欢迎关注大雄和你一起学编程","任务3执行完了，欢迎关注大雄和你一起学编程","任务4执行完了，欢迎关注大雄和你一起学编程","任务被拒绝了哦，欢迎关注微信公众号“大雄和你一起学编程”","优先级不同的任务可以使用优先级队列priorityblockingqueue来处理。它可以让优先级高的任务先执行。","使用get（longtimeout，timeunit","使用线程池","依赖数据库连接池的任务：线程数可以适当给多一些","保活时间10秒，工作队列长度位3的arrayblokingqueue,","关闭线程池","创建线程池的参数怎么给","创建线程池直接new","前面的例子中是拍脑袋给的参数，说要2个核心线程啥的，但是应该如何正确决策呢","向线程池提交任务","建议使用有界队列","当所有的任务都已关闭后，才表示线程池关闭成功，这时调用isterminaed方法会返回tru","执行时间不同的任务可以交给不同规模线程池处理","按任务类型考虑","按优先级考虑","接着上边的例子","方式1：excut","方式2：submit","既然是由返回值，那么任务就要用callable了","构造方法有几个重载，这个事参数最全的，如下分别介绍这些参数","核心线程的数量，当提交一个任务到线程池时，当线程数量小于corepoolsize时，进来新任务都会创建新的线程。如果调用了线程池的prestartallcorethreads()方法，线程池会提前创建并启动所有核心线程，而不是等到任务进来","混合型的任务：如果可以拆分，将其拆分成一个cpu密集型任务和一个io密集型任务，只要这两个任务执行的时间相差不是太大，那么分解后执行的吞吐量将高于串行执行的吞吐量","用于保存等待执行的任务的阻塞队列。可以选择以下几个阻塞队列。arrayblockingqueue，linkedblockingqueue，synchronousqueue，priorityblockingqueu","线程保活时间单位","线程工厂里给线程起了一个好听的名字","线程池会返回一个future类型的对象，通过这个future对象可以判断任务是否执行成功，并且可以通过future的get()方法来获取返回值，get()方法会阻塞当前线程直到任务完成","线程池的创建","线程池的工作线程空闲后，保持存活的时间。所以，如果任务很多，并且每个任务执行的时间比较短，可以调大时间，提高线程的利用率。","调用任意一个isshutdown方法就会返回tru","调用关闭线程池方法后","运行的结果如下","这一段就是从书上借鉴（抄书不叫抄，叫借鉴）过来的，来个demo可能会更加清楚一些","这个例子里边，核心线程数2，最大线程数2，","遍历线程池中的工作线程，然后逐个调用线程的interrupt方法来中断线程，所以无法响应中断的任务可能永远无法终止"],"第06章-线程池与Executor框架/02-线程池原理.html":["!","!=","!t.isinterrupted())","!wt.isinterrupted())","&&","(!","(!completedabruptly)","((runstateatleast(ctl.get(),","(;;)","(command","(compareandincrementworkercount(c))","(compareandsetstate(0,","(completedabruptly)","(core","(error","(getstate()","(min","(r","(runstatelessthan(c,","(runstateof(c)","(runtimeexcept","(securityexcept","(t","(task","(thread.interrupted()","(throwabl","(wc","(workeradded)","(workercountof(c)","+=","//","0","02","0;","0代表没有加锁","1))","1);","1;","1代表加锁了",":","=","==",">=","?","abrupt,","abstractqueuedsynchron","acquire(1);","addworker(null,","addworker(runn","addworkerfailed(w);","addworker做的核心工作就是，创建worker,","adjust","afterexecute(task,","allow","allowcorethreadtimeout","beforeexecute(wt,","boolean","break","c","capac","catch","class","command)","completedabruptli","completedabruptly)","completedabruptly);","completedtaskcount","completedtasks;","continu","core)","corepools","corepoolsize;","ctl","ctl.get();","decrementworkercount();","error(x);","execute(runn","extend","false);","false;","final","firsttask","firsttask)","firsttask,","firsttask;","getstate()","gettask())","getthreadfactory().newthread(this);","ignore)","implement","inhibit","int","interrupt","interruptifstarted()","isheldexclusively()","isheldexclusively();","islocked()","largestpools","largestpoolsize)","lock()","long","mainlock","mainlock.lock();","mainlock.unlock();","maximumpoolsize))","min","min)","need","new","null","null)","null;","nullpointerexception();","privat","processworkerexit(w,","processworkerexit(work","protect","public","re","read","reentrantlock","release(1);","replac","retry:","retry;","return","return;","rs","rs)","run()","runnabl","runstateatleast(ctl.get(),","runstateof(c);","runstateof(ctl.get());","runwork","runworker(this);","runworker(work","s;","setexclusiveownerthread(null);","setexclusiveownerthread(thread.currentthread());","setstate(","setstate(0);","shutdown","stop)","stop))","stop)))","submit就是首先将callable或者runnable包装成futuretask，然后调用execute,","t","t.interrupt();","t.start();","t;","task","task);","task.run();","task是创建worker带进去的任务，会先执行他，然后从workqueue里边取","this.firsttask","this.mainlock;","this.thread","thread","thread)","thread.currentthread();","thread;","throw","throwabl","thrown","thrown);","tri","true;","tryacquire(1);","tryacquire(int","trylock()","tryrelease(int","tryterminate();","unlock()","until","unused)","void","volatil","w","w)","w,","w.completedtasks++;","w.completedtasks;","w.firsttask","w.firsttask;","w.lock();","w.thread;","w.unlock();","wasn't","wc","woker是如何创建并加入workers的以及worker是如何启动的的问题。","worker","worker(firsttask);","worker(runn","workerad","workercount","workercountof(c);","workercountof方法就是从里边提取","workers)。程序员干不完的需求（runnable/callable)放在需求池（workqueue）里排队。每个研发部都配置有骨干程序员数量（corepoolsize）和最大能容纳的程序员数量（maximumpoolsize）。具体要做的任务就是产品的需求。","workers.remove(w);","workerstart","workerstarted)","workerstarted;","worker实现了runnable接口，所以他是个任务，有run方法；同时有继承了aqs，所以他也是一把锁。","worker就是这么创建的","worker是在这里启动的","worker的数量的","worker被装在一个hashset（workers）里边，","workqueue.isempty())","workqueue.isempty()))","wt","wt.interrupt();","x)","x;","{","||","}","一个线程池相当于创建了一个研发部，创建研发部时需要指定骨干程序员数量，最大能容纳的程序员数量，需求池用哪种（blockingqueue）,如果忙不过来的需求怎么给产品回复（拒绝策略）等等内容。刚开始这个研发部一个程序员也没有。","一些体会","下边是worker源码，移除了非关键的东西","下边是提交任务的过程","中途线程池状态发生变化了","互联网公司与线程池的关系","从while跳出来表明没有任务可以执行了","他们在一个大办公室里（hashset","他是用来执行任务的，他们的职责就是不断的从workqueue里边取任务，然后执行。当workqueue（需求池）里边拿不到任务，或者线程池达到特定状态，worker就会从workers里边移走（被裁）。","他直接调run是要执行任务，线程的start只是把worker里边的那个run跑起来了","以下这些是aqs相关的东西","你可以把线程池看作是一个研发部门，研发部门有很多程序员（worker),","做一些校验，线程池的状态要满足一定条件","做一些状态的校验","加worker是要加全局锁的","原理解析","另一个是现在线程池的状态是啥","可以发现execute方法就是完成了上边说的“线程池处理流程”这个图里描述的过程。","否则不加。","启动worker,","在创建之前还会做一些校验。调用了worker里边线程的start后就要等待cpu调度执行worker的run方法了。","增加worker数量失败就在来","大雄看到这里还有几个疑问，一个是woker是如何创建并加入workers的，一个是worker是如何启动的，再就是worker是如何运行的","如果没有的话跳出去","如果没满，会招聘一个骨干程序员，招聘进来就让他不停的工作（很残酷啊），干完刚派过来的任务他会主动在需求池找下一个需求来做（好员工），如果需求池没有需求了，他就停止工作了，然后研发部会把他裁掉，如果裁掉后发现骨干程序员数量不够了，就会再招聘一个程序员。裁掉后，要是骨干程序员数量还够就不招聘了。","如果骨干程序员数量满了，就看需求池满没满，如果需求池没满，就把需求扔进需求池里；如果需求池满了，就看程序员数量有没有达到上限，如果达到了，就对产品说，这个需求我们做不了，没资源；如果没达到，就招聘一个程序员，招聘进来就让他不停的工作，干完刚派过来的需求他会主动到需求池找下一个任务来做，如果需求池没有任务了，他就停止工作了，然后研发部会把他裁掉，如果裁掉后发现骨干程序员数量不够了，就会再招聘一个程序员。裁掉后，要是骨干程序员数量还够就不招聘了。","完成了几个任务","小于核心线程数就会再加个worker,","当产品给这个研发部提一个需求时（当然肯定不会只提一个，他们会不断的提需求。这里以提一个需求为例）","当然这也不是绝对的（似乎说的矛盾了），一些细节的设计还是非常精妙值得学习的。还是这个位运算，为什么只用一个int表示线程池状态和worker的数量呢。","总之，个人觉得第一遍看是一定不能沉溺于细节的，他会让你迷惘和丧失信心；第二遍、第三遍可以关注一下细节，感受大师级的设计的美妙之处。当然笔者仅仅粗略看了一遍（逃~）","所以核心是分析execut","执行任务前调用一下beforeexecute，","执行完了调一下，里边可以拿到异常","提交任务有submit和execute,","普通看超没超过maximumpools","标识这个任务是在哪个线程运行","核心看超没超过corepoolsize,","比核心线程数多的话，执行完的worker直接移除就好","源码解析","生活还要继续","直接从workers里边移除worker,","直接用你提供的线程工厂搞个线程出来","看你是要创建核心worker还是普通work","看源码一定不要过分纠结细节，就像这个线程池，我看网上很多文章去算那几个位运算的十进制数，感觉是在浪费时间，没有抓住重点。","移除后如果worker数量比核心线程数还少，就再加个worker,","移除掉worker（裁员）","线程池原理","线程池处理流程","而且得提交任务过来，再就是workqueue不能是空的","要多多联想，还是这个位运算，他是不是和读写锁用一个int既表示写状态又表示读状态十分相似。worker继承aqs，是否能让你想起aqs的种种。","让他继续等待接收任务（招人）","调用threadpoolexecutor里边的runworker方法","这个c里边有两个信息，一个是现在有多少worker,","这个也比较容易，就是不断的从workqueue取任务，执行，直到没任务了跳出来。接下来就是worker如何被销毁的问题了","这个跟我们平时理解的runnable还不一样，可以体会下，他这个run就是一个普通的方法","这段代码解决了","这里用一个比喻来描述一下线程池，中间有一些名词你可能不是太清楚，后边源码解析的部分会讲到。","阻止中断，知道runworker执行","首先会看骨干程序员招聘满了没。","首先加锁，如果不加锁，可能几个线程提交的任务同时进来了，会导致一些共享状态出问题","首先是worker（程序员）","默认是空的"],"第06章-线程池与Executor框架/03-Executor.html":["!canrunincurrentrunstate(task.isperiodic())","&&","(!canrunincurrentrunstate(periodic))","(!periodic)","(cancel","(command","(diff","(interruptedexcept","(isshutdown()","(isshutdown())","(new","(other","(p","(period","(scheduledfuturetask)other;","(scheduledfuturetask.super.runandreset())","(sequencenumb","(wc","+=","//","0)","03","08","09:36:50","09:37:00","09:37:10","09:37:20","09:40:18","09:40:29","09:40:40","09:40:51","0;","0l,","1","1,","1;","2020","3,","5开始，把工作单元与执行机制分离开来。工作单元（可执行的任务）包括runnable和callable，而执行机制由executor提供。","60l,",":","=","==",">",">=","?","args)","boolean","cachedthreadpool","cachedthreadpool：创建一个会根据需要创建新线程的线程池","cancel","cancel(boolean","cancel(false);","cancelled;","catch","class","command,","compar","compareto(delay","corepoolsize)","cst","date());","decoratetask(command,","delay,","delayedexecute(runnablescheduledfutur","delayedexecute(t);","delayedworkqueu","delay（schedulewithfixeddelay）方式","demo_06_02_1_exexutor","demo_06_02_2_exexutor","diff","e)","e.printstacktrace();","ensureprestart()","ensureprestart();","executor","executors.newscheduledthreadpool(4);","executorservic","executor框架","executor框架共有三大成员+一工具类","executor框架成员及其体系","final","finalizabledelegatedexecutorservic","fixedthreadpool","fixedthreadpool：用于创建固定线程数量的线程池","getdelay(timeunit","heapindex","heapindex;","initialdelay,","instanceof","int","integer.max_value,","isperiodic();","linkedblockingqueue(),","long","main(string[]","mayinterruptifrunning)","nanoseconds);","new","newcachedthreadpool(threadfactori","newfixedthreadpool(int","newscheduledthreadpool(int","newsinglethreadexecutor()","newsinglethreadexecutor(threadfactori","now(),","nthreads,","null","null)","null,","nullpointerexception();","object","other)","outertask","p","p);","p;","period","period,","period;","privat","public","rate（scheduleatfixedrate）方式，","reexecuteperiodic(outertask);","reject(task);","remove(task))","remove(this);","removeoncancel","return","run()","runandreset()可以理解为就是开始执行任务","runnablescheduledfutur","same","scheduleatfixedrate(runn","scheduleatfixedrate的执行流程","scheduledexecutorservic","scheduledexecutorservice.scheduleatfixedrate(()","scheduledexecutorservice.schedulewithfixeddelay(()","scheduledfutur","scheduledfuturetask","scheduledfuturetask(command,","scheduledfuturetask)","scheduledfuturetask.super.run();","scheduledfuturetask就是runnablescheduledfuture的一个实现类","scheduledthreadpool","scheduledthreadpoolexecutor","scheduledthreadpoolexecutor适用于需要多个后台线程执行周期任务，同时为了满足资源管理的需求而需要限制后台线程的数量的应用场景。","schedulewithfixeddelay(runn","schedulewithfixeddelay和scheduleatfixedrate是类似的，只是他计算下一次执行的时间的方式不同。","sequencenumber;","setnextruntime()","setnextruntime();","sft","sft);","sft.outertask","singlethreadexecutor","singlethreadexecutor：创建只有单个线程的线程池","static","super.cancel(mayinterruptifrunning);","super.getqueue().add(task);","synchronousqueue(),","system.out.println(\"欢迎关注微信公众号'大雄和你一起学编程'\"+new","t","t;","task)","task.cancel(false);","task下一次将要被执行的具体时间","this)","this;","thread.sleep(10000);","threadfactori","threadfactory)","threadfactory));","threadfactory);","threadpoolexecutor","threadpoolexecutor(0,","threadpoolexecutor(1,","threadpoolexecutor(nthreads,","threadpoolexecutor的创建前面已经讲过了，里边涉及到很多的参数，这里不再赘述。这里主要是探讨excutors为我们提供了几种实用threadpoolexecutor","threadpoolexecutor详解","throw","time","time;","timeunit","timeunit.milliseconds,","timeunit.seconds);","timeunit.seconds,","tri","triggertime(","triggertime(initialdelay,","unit","unit)","unit),","unit.convert(tim","unit.tonanos(period));","void","wc","workercountof(ctl.get());","x","x.time;","zero","{","||","}","},","一个表示没有返回结果的任务，一个表示有返回结果的任务，这个我们太熟悉了","一些参数校验","下一次加到队列的任务设置好","下一次执行时间，注意固定频率和固定间隔的区别","不是周期任务，直接run就好,","两个示例","主要包括如下两个实现类","他不管你的任务执行时间，任务执行完了再隔delay时间执行下一次任务","他会每间隔一个固定时间执行一次，如果你的任务执行时间你给的period,","他是一个创建各种threadpoolexecutor的工具","他是一个工具类，就像arrays和collections,","他的成员变量如下：","他的源码如下：","他的特点是","他的特点是：","他负责任务的执行,","以一定的周期执行任务","以上就是executor框架的一个简版uml，生成此图时发现其中还有其他成员，直接参考《java并发编程艺术》移除了。","以固定时间间隔执行的走这里","以固定频率执行的任务走这里","任务","任务执行的间隔时间，正数表示用fix","任务执行结果","优化用的","使用executors可以创建三种threadpoolexecutor,分别如下：","再返回队列","决定两个task的time相同时谁排在前面，是用一个atomiclong搞出来的","准备开始跑了","前面讲的threadpoolexecutor其实是executor框架中的一员。从jdk","加入队列","包括future接口及其实现类futuretask，这个也是我们的老朋友了","包括runnable和callable，","原理","取消","取消任务","取消任务的情况","它主要用来在给定的延迟之后运行任务，或者定期执行任务","它主要用来在给定的延迟之后运行任务，或者定期执行任务。","工作队列也是使用的linkedblockingqueu","工作队列使用synchronousqueue,","工作队列是使用的有界队列linkedblockingqueue，这个队列的界在inter.max_value,","延迟执行","执行具体的任务","执行的futuretask的run，","提交任务主要有两种方式","方法如下：","有四种方式创建","核心线程数和最大线程数是相等的","核心线程数和最大线程数都是1","欢迎关注微信公众号'大雄和你一起学编程'fri","没有核心线程，可以无限的创建线程","用于下一次加入队列","看现在有几个工作线程","确定排序规则，谁先到期谁排前面，同时到期的，看谁先创建，先创建的排在前面","线程保活时间是0，就是说执行完，线程会被立即销毁","线程保活时间是0，就是说执行完，线程会被立即销毁，重新创建","线程的保活时间时60秒，意味着60秒没任务就会被销毁","而是自己封装了一个delayedworkqueue，这两者的区别笔者没有细看，一直从任务队列取到期的任务执行，同时把执行的任务再放回delayqueue。","计算还有多久到执行时间点，这个delayed接口的getdelay方法一样","设置","设置下一次要什么时候执行","负数表示用fix","还有两个是可以指定线程工厂","这两者的区别大家可以体会下","这个定时任务的核心就是使用delayqueue，但是他不是使用的concurrent包的那个delayqueue,","这意味着，提交一个任务必须要等这个任务被消费（可能创建新线程消费，也可能是被老线程消费），下一个任务才进去执行；线程从队列获取任务时，一定要阻塞到有任务提交进去。","这意味这他通常不会因为任务数量过多拒绝任务","这是一个不存储元素的队列，","这段代码会在启动后3秒开始输出，然后每隔10+1秒输出一次","这段代码会在启动后3秒开始输出，然后每隔10秒输出一次","那么任务执行完就开始下一次","里面是用一个runnablescheduledfuture来存放任务的，"],"第07章-并发工具类/01-CountDownLatch.html":["\"执行完了\");","(int","+","01","0;","1,","3;","=","@overrid","args)","await()","class","countdownlatch","countdownlatch(thread_count);","countdownlatch(要等待几个线程)","countdownlatch)","countdownlatch.countdown();","countdownlatch;","countdownlatch允许一个或多个线程等待其他线程完成操作。","countdownlatch其实时根据aqs共享式获取同步状态实现的，要等待的线程的个数就是state，countdown相当于st","implement","int","interruptedexcept","main(string[]","new","public","run()","runnabl","static","system.out.println(thread.currentthread().getname()","testcountdownlatch","testcountdownlatch(countdownlatch","this.countdownlatch","thread_count","throw","void","{","}","下面这个例子要实现的就是同时开三个线程，主线程需要等待这三个线程执行完后继续执行。","他跟join比较类似，但是比join来的灵活，join用于让当前执行线程等待join线程执行结束。","在要等待的地方调用countdownlatch.await()","基本原理","总结一下countdownlatch的用法：","每一个线程执行完都调用countdownlatch.countdown()使得countdownlatch减一","相当于要等到state==0的时候才能获取到锁。","让他等到countdownlatch减到0时继续执行"],"第07章-并发工具类/02-CyclicBarrier.html":["(int","02","0;","=",">","args)","brokenbarrierexception,","class","cyclicbarri","cyclicbarrier(2)","cyclicbarrier(2);","cyclicbarrier.await()","cyclicbarrier可以用于多线程并行计算数据，等到所有线程都计算完再合并。","cyclicbarrier默认的构造方法是cyclicbarrier（int","demo_07_02_1_cylicbarri","interruptedexcept","main(string[]","new","parties），其参数表示屏障拦截的线程数量，每个线程调用await方法告诉cyclicbarrier我已经到达了屏障，然后当前线程被阻塞。","public","static","thread(()","throw","void","{","使用cyclicbarrier步骤如下：","使用demo","使用场景","告知别人自己到达屏障了","就像跑步比赛一样，每个人都从各自的地方到达起跑线，到达后跟裁判说一声，当所有人到奇之后，裁判会发出信号，大家一起跑。","指定期望多少人到达屏障在继续执行","让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续运行。"],"第07章-并发工具类/03-Semaphore.html":["\"执行了\");","(int","(interruptedexcept","+","//","03","0;","=","args)","booleanhasqueuedthreads()：是否有线程正在等待获取许可证。","catch","class","collect","demo_07_03_1_semaphor","e)","e.printstacktrace();","final","getqueuedthreads()：返回所有等待获取许可证的线程集合，是个protected方法。","intavailablepermits()：返回此信号量中当前可用的许可证数。","intgetqueuelength()：返回正在等待获取许可证的线程数。","main(string[]","new","privat","public","reducepermits（int","reduction）：减少reduction个许可证，是个protected方法。","semaphor","semaphore(3);","semaphore.acquire();","semaphore.release();","semaphore（信号量）是用来控制同时访问特定资源的线程数量，它通过协调各个线程，以保证合理的使用公共资源。","static","system.out.println(thread.currentthread().getname()","thread.sleep(1000);","tri","void","{","}","}).start();","他相当于是一个数量有限的共享锁，没有达到限制就能获得锁，否则阻塞，而这个限制是在构造方法里面指定的。","使用示例","其他api","我一定是用aqs的共享式获取同步状态来做。","我们同时启动了30个线程去打印，但是我们会发现一次只会有三个输出，三个之后，一会儿再输出。这就是semaphore带给我们的。","我没看源码，如果让我实现一个semaphore，","相当于获取锁","这个是书上列出来的，为了保持完成性，也简单列一下：","释放锁"],"第07章-并发工具类/04-Exchanger.html":["\"第2个线程里的值\";","(interruptedexcept","//","04","=",">","a:第1个线程里的值","args)","b","b:第2个线程里的值","catch","class","demo_07_04_1_exchang","e)","e.printstacktrace();","exchang","exchanger.exchange(\"第1个线程里的值\");","exchanger.exchange(b);","exchanger<>();","exchanger用于进行线程间的数据交换。它提供一个同步点，在这个同步点，两个线程可以交换彼此的数据。这两个线程通过exchange方法交换数据，如果第一个线程先执行exchange()方法，它会一直等待第二个线程也执行exchange方法，当两个线程都到达同步点时，这两个线程就可以交换数据，将本线程生产出来的数据传递给对方。(原文复制)","fals","main(string[]","new","public","static","string","system.out.println(\"a:\"+a);","system.out.println(\"b:\"+b);","system.out.println(a.equals(b));","thread(()","tri","void","{","}","}).start();","不懂这是个啥玩意儿","使用场景","例如将纸制银行流水通过人工的方式录入成电子银行流水，为了避免错误，采用ab岗两人进行录入，录入到excel之后，系统需要加载这两个excel，并对两个excel数据进行校对，看看是否录入一致。","校对工作","输出：","这样就可以达到一个校对的目的","遗传算法"],"第08章-Java并发机制的底层实现原理/":["java并发机制的底层实现原理","因为笔者也不是特别了解，所以只能提炼一下书中的内容，适当加入一些自己的理解。","笔者是科班出身，所以这一章，还有内存模型真的是看的头疼，本来打算放弃了，又了解了一下，这两章的东西是面试必考的，必须要搞啊。","第08章"],"第08章-Java并发机制的底层实现原理/01-volatile.html":["01","1）lock前缀指令会引起处理器缓存回写到内存","1）将当前处理器缓存行的数据写回到系统内存。","2）一个处理器的缓存回写到内存会导致其他处理器的缓存无效","2）这个写回内存的操作会使在其他cpu里缓存了该内存地址的数据无效。","atom","barri","cach","cpu高速缓存中可以分配最小的存储单位。处理器填写缓存行时会加载整个缓存行","fill","hit","java7以下","line","lock指令可以实现如下功能：","memori","miss","oper","volatil","volatile使用优化","volatile原理","volatile声明的变量，转变为汇编会有一个lock指令","volatile是轻量级的synchronized，不会引起线程上下文切换和调度","volatile的两条实现原则：","write","。","一个有效的缓存行被写入到不存在的内存区域","一些cpu术语","不可中断的一个或者一系列操作","不适用的场景：","保证了多线程环境下共享变量的“可见性”","共享变量不会被频繁地写","内存屏障","写命中","写缺失","原子操作","原理是部分处理器缓存行是64字节宽，不支持部分填充缓存行。如果队头和队尾节点都不足64字节的话，他们会进到同一个缓存行，当一个处理器试图修改头节点时，会将整个缓存行锁定，那么在缓存一致性机制的作用下，会导致其他处理器不能访问自己高速缓存中的尾节。而首尾巴节点的访问时频繁的，放到同一个缓存行会频繁锁定，造成出队和入队效率低。因此可以采用追加字节的方式避免头节点和尾节点被放到同一个缓存行。","可见性的意思是当一个线程修改一个共享变量时，另外一个线程能读到这个修改的值","含义","如果进行高速缓存行填充操作的内存位置任然是下次处理器访问的地址时，处理器从缓存中读取操作数，而不是从内存中读取。","实现原理","当处理器将操作数写回到一个内存缓存的区域时，它首先会检查这个缓存的内存地址是否存在缓存行中，如果存在一个有效的缓存行，则处理器将这个操作数写回到缓存，而不是写回到内存，这个操作被称作写命中。","当处理器识别到从内存中读取操作是可缓存的。处理器读取整个高速缓存行到适当的缓存（l1","是一组处理器命令，用于实现内存操作的顺序限制。","术语","缓冲行","缓存命中","缓存行填充","缓存行非64字节宽的处理器","英文","追加字节能优化性能","，l2","，l3的或所有）"],"第08章-Java并发机制的底层实现原理/02-synchronized.html":["(32","(64","(96","02","32位情况下对象头的结构",">偏向锁状态",">轻量级锁状态",">重量级锁状态","age:4","array","biased(偏向锁)","biased_lock:1","bits)","epoch:2","gc","header","heavyweight","identity_hashcode:25","jvm基于进入和退出monitor对象来实现方法同步和代码块同步，但两者的实现细节不一样。代码块同步是使用monitorenter和monitorexit指令实现的，同步方法不知道","klass","length(32bits)","lightweight","lock","lock:2","mark","markword。然后线程尝试使用cas将对象头中的mark","monitorenter指令是在编译后插入到同步代码块的开始位置，而monitorexit是插入到方法结束处和异常处。当一个monitor被持有后他就被锁定了。","normal","object","ptr_to_heavyweight_monitor:30","ptr_to_lock_record:30","state","synchron","synchronized实现同步的基础：java中的每一个对象都可以作为锁。","synchronized用的锁是存在java对象头里的。","thread:23","usebiasedlocking=fals","word","word(32bits)","word:","word中偏向锁的标识是否设置成1（表示当前是偏向锁）：如果没有设置，则使用cas竞争锁；如果设置了，则尝试使用cas将对象头的偏向锁指向当前线程。","word复制到锁记录中，官方称为displac","word替换为指向锁记录的指针。如果成功，当前线程获得锁，如果失败，表示其他线程竞争锁，当前线程便尝试使用自旋来获取锁。","word替换回到对象头，如果成功，则表示没有竞争发生。如果失败，表示当前锁存在竞争，锁就会膨胀成重量级锁。","word要么重新偏向于其他线程，要么恢复到无锁或者标记对象不适合作为偏向锁，最后唤醒暂停的线程。","word里是否存储着指向当前线程的偏向锁。如果测试成功，表示线程已经获得了锁。如果测试失败，则需要再测试一下mark","xx:","xx:biasedlockingstartupdelay=0","|","三种形式：","优点","偏向锁","偏向锁的撤销","偏向锁的撤销，需要等待全局安全点（在这个时间点上没有正在执行的字节码）。它会首先暂停拥有偏向锁的线程，然后检查持有偏向锁的线程是否活着，如果线程不处于活动状态，则将对象头设置成无锁状态；如果线程仍然活着，拥有偏向锁的栈会被执行，遍历偏向对象的锁记录，栈中的锁记录和对象头的mark","偏向锁相关jvm参数","关闭延迟：","加锁","加锁和解锁不需要额外的消耗，和执行非同步方法比仅存在纳秒级的差距。","原理","只有锁升级，没有锁降级","因为自旋会消耗cpu，为了避免无用的自旋（比如获得锁的线程被阻塞住了），一旦锁升级成重量级锁，就不会再恢复到轻量级锁状态。当锁处于这个状态下，其他线程试图获取锁时，都会被阻塞住，当持有锁的线程释放锁之后会唤醒这些线程，被唤醒的线程就会进行新一轮的夺锁之争。","大多数情况下，锁不仅不存在多线程竞争，而且总是由同一线程多次获得，为了让线程获得锁的代价更低而引入了偏向锁。","如果始终得不到锁竞争的线程使用自旋会消耗cpu。","如果线程间存在锁竞争，会带来额外的锁撤销的消耗。","对于同步方法块，锁是synchonized括号里配置的对象。","对于普通同步方法，锁是当前实例对象。","对于静态同步方法，锁是当前类的class对象。","对象头","当一个线程访问同步块并获取锁时，会在对象头和栈帧中的锁记录里存储锁偏向的线程id，以后该线程在进入和退出同步块时不需要进行cas操作来加锁和解锁，只需简单地测试一下对象头的mark","当一个线程试图访问同步代码块时，它首先必须得到锁","当执行到monitorenter指令时会尝试获得对象对用的monitor的所有权，即获取锁","数组：","普通对象：","禁用：","竞争的线程不会阻塞，提高了程序的响应速度。","线程在执行同步块之前，jvm会先在当前线程的栈桢中创建用于存储锁记录的空间，并将对象头中的mark","线程竞争不使用自旋，不会消耗cpu。","线程阻塞，响应时间缓慢。","缺点","轻量级解锁时，会使用原子的cas操作将displac","轻量级锁","追求吞吐量。同步块执行速度较长。","追求响应时间。同步块执行速度非常快。","适用于只有一个线程访问同步块场景。","适用场景","释放锁","重量级锁","锁","锁升级","锁对比","锁级别低到高：无锁状态"],"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":["#信号，当一个处理器在总线上输出此信号时，其他处理器的请求将被阻塞住，那么该处理器可以独占共享内存。","#信号，而是修改内部的内存地址，并允许它的缓存一致性机制来保证操作的原子性，因为缓存一致性机制会阻止同时修改由两个以上处理器缓存的内存区域数据，当其他处理器回写已被锁定的缓存行的数据时，会使缓存行无效","03","aba问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加1，jdk1.5的atomic包里提供了一个类atomicstampedreference来解决aba问题。这个类的compareandset方法的作用是首先检查当前引用是否等于预期引用，并且检查当前标志是否等于预期标志，如果全部相等，则以原子方式将该引用和该标志的值设置为给定的更新值。","cas三大问题：","java原子操作的实现","jvm中的cas操作正是利用了处理器提供的cmpxchg指令实现的。自旋cas实现的基本思路就是循环进行cas操作直到成功为止。","jvm内部实现了很多种锁机制，有偏向锁、轻量级锁和互斥锁。","一是：就是把多个共享变量合并成一个共享变量来操作","两个方案：","二是：实用jdk的atomicreference类来保证引用对象之间的原子性，把多个变量放在一个对象里来进行cas操作","使用循环cas实现原子操作","使用缓存锁保证原子性","使用锁机制实现原子操作","原子操作的实现原理","处理器对原子操作的实现","如果一个值原来是a，变成了b，又变成了a，那么使用cas进行检查时会发现它的值没有发生变化，但是实际上却变化了。","对多个共享变量操作时，循环cas就无法保证操作的原子性，这个时候就可以用锁。","总线锁就是使用处理器提供的一个lock","指内存区域如果被缓存在处理器的缓存行中，并且在lock操作期间被锁定，那么当它执行锁操作回写到内存时，处理器不在总线上声言lock","自旋cas如果长时间不成功，会给cpu带来非常大的执行开销。","通过总线锁保证原子性","锁机制保证了只有获得锁的线程才能够操作锁定的内存区域。","除了偏向锁，jvm实现锁的方式都用了循环cas，即当一个线程想进入同步块的时候使用循环cas的方式来获取锁，当它退出同步块的时候使用循环cas释放锁。","（1）aba问题","（2）循环时间长开销大","（3）只能保证一个共享变量的原子操作"],"第09章-java内存模型/":["java内存模型","java的并发采用的是共享内存模型","一是共享内存：线程之间共享程序的公共状态，通过写","一是线程之间如何通信","二是消息传递：线程之间没有公共状态，线程之间必须通过发送消息来显式进行通信","二是线程之间如何同步","共享内存方式同步时显式的，需要手动指定方法或代码块在线程之间互斥","同步是指程序中用于控制不同线程间操作发生相对顺序的机制","并发编程存在两个关键性问题：","消息传递方式同步时隐式的，天然同步，消息的发送必须在消息的接收之前","第09章","线程之间的通信方式有两种：","读内存中的公共状态进行隐式通信","通信是指线程之间以何种机制来交换信息"],"第09章-java内存模型/01-java内存模型基础.html":["01","133使用happen","133内存模型","5开始，java使用新的jsr","barrier","barriers是一个“全能型”的屏障，它同时具有其他3个屏障的效果。现代的多处理器大多支持该屏障","barriers）","barriers，intel称之为memori","befor","before于任意后续对这个volatile域的读","before于该线程中的任意后续操作","before于随后对这个锁的加锁","before关系","before的概念来阐述操作之间的内存可见性。在jmm中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须要存在happen","before简介","before规则：","b，且b","c","c，那么ahappen","fence）指令，通过内存屏障指令来禁止特定类型的处理器重排序","happen","java内存模型基础","java内存模型的抽象结构","jmm决定一个线程对共享变量的写入何时对另一个线程可见","jmm的处理器重排序规则会要求java编译器在生成指令序列时，插入特定类型的内存屏障（memori","jmm的编译器重排序规则会禁止特定类型的编译器重排序","jmm通过控制主内存与每个线程的本地内存之间的交互，来为java程序员提供内存可见性保证。","jsr","load1","load1;","load2","loadload","loadload;","loadstor","loadstore;","memory）中，每个线程都有一个私有的本地内存（loc","memory），本地内存中存储了该线程以读/写共享变量的副本。本地内存是jmm的一个抽象概念，并不真实存在。它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。","store1","store1;","store2","storeload","storeload;","storestor","storestore;","volatile变量规则：对一个volatile域的写，happen","与程序员密切相关的happen","为了保证内存可见性，java编译器在生成指令序列的适当位置会插入内存屏障指令来禁止特定类型的处理器重排序","从jdk","从源代码到指令序列的重排序","会使该屏障之前的所有内存访问指令（存储和装载指令）完成之后，才执行该屏障之后的内存访问指令","传递性：如果a","内存屏障（memori","内存系统的重排序：由于处理器使用缓存和读/写缓冲区，这使得加载和存储操作看上去可能是在乱序执行","及所有后续存储指令的存储。","及所有后续的存储指令刷新到内存","及所有后续装载指令的装载","及所有后续装载指令的装载。storeloadbarri","处理器重排序","屏障类型","指令示例","指令级并行的重排序：如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序","数据对其他处理器变得可见（指刷新到内存），之前于","数据对其他处理器可见（刷新到内存），之前于","数据的装载，之前于","数据装载，之前于","监视器锁规则：对一个锁的解锁，happen","确保","程序顺序规则：一个线程中的每个操作，happen","线程与主内存之间的抽象关系：","线程之间的共享变量存储在主内存（main","编译器重排序：在不改变单线程程序语义的情况下，重新安排指令执行顺序","说明","重排序的分类"],"第09章-java内存模型/02-重排序.html":["02","befor","b，jmm并不要求a一定要在b之前执行。jmm仅仅要求前一个操作（执行的结果）对后一个操作可见，且前一个操作按顺序排在第二个操作之前。jmm允许这种重排序。","happen","jmm不保证对64位的long型和double型变量的写操作具有原子性，而顺序一致性模型保证对所有的内存读/写操作都具有原子性","jmm不保证未同步程序的执行结果与该程序在顺序一致性模型中的执行结果一致","jmm会在退出临界区和进入临界区这两个关键时间点做一些特别处理，使得线程在这两个时间点具有与顺序一致性模型相同的内存视图）。临界区内的这种重排序既提高了执行效率，又没有改变程序的执行结果。","jmm对正确同步的多线程程序的内存一致性做了如下保证：","memory）分配对象时，域的默认初始化已经完成了","serial语义","serial语义。","serial语义允许对存在数据依赖的操作做重排序的原因）；但在多线程程序中，对存在数据依赖的操作重排序，可能会改变程序的执行结果。","zero","一个线程中的所有操作必须按照程序的顺序来执行","不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不能被改变。编译器、runtime和处理器都必须遵守a","两大特性：","为了实现最小安全性，jvm在堆上分配对象时，首先会对内存空间进行清零，然后才会在上面分配对象（jvm内部会同步这两个操作）。因此，在已清零的内存空间（pre","同步程序的顺序一致性效果","在单线程中，只要重排序两个操作的执行顺序，程序的执行结果就会被改变，称这两个操作具有数据依赖性。","在单线程程序中，对存在数据依赖的操作重排序，不会改变执行结果（这也是a","如果a","如果程序是正确同步的，程序的执行将具有顺序一致性（sequentiallyconsistent）——即程序的执行结果与该程序在顺序一致性内存模型中的执行结果相同。这对于程序员来说是一个极强的保证。","对于未同步或未正确同步的多线程程序，jmm只提供最小安全性：线程执行时读取到的值，要么是之前某个线程写入的值，要么是默认值","当程序未正确同步时，就可能会存在数据竞争。","数据依赖性","数据依赖性仅针对单个处理器中执行的指令序列和单个线程中执行的操作，不同处理器之间和不同线程之间的数据依赖性不被编译器和处理器考虑","数据竞争与顺序一致性","未同步程序的执行特性","程序顺序规则","而在jmm中，临界区内的代码可以重排序。","这里的同步是指广义上的同步，包括对常用同步原语（synchronized、volatile和final）的正确使用。","重排序","重排序对多线程的影响","重排序是指编译器和处理器为了优化程序性能而对指令序列进行重新排序的一种手段。","顺序一致性","顺序一致性内存模型","顺序一致性内存模型是一个理论参考模型，在设计的时候，处理器的内存模型和编程语言的内存模型都会以顺序一致性内存模型作为参照。","顺序一致性模型中，所有操作完全按程序的顺序串行执行。","（不管程序是否同步）所有线程都只能看到一个单一的操作执行顺序。在顺序一致性内存模型中，每个操作都必须原子执行且立刻对所有线程可见"],"第09章-java内存模型/03-volatile内存语义.html":["03","133专家组决定增强volatile的内存语义","133为什么要增强volatile的内存语义","133之前的旧java内存模型中，虽然不允许volatile变量之间重排序，但旧的java内存模型允许volatile变量与普通变量重排序.","before关系","jsr","volatile内存语义","volatile内存语义的实现","volatile写","为了实现volatile的内存语义，编译器在生成字节码时，会在指令序列中插入内存屏障来禁止特定类型的处理器重排序","从内存语义的角度来说，volatile的写","即使是64位的long型和double型变量，只要它是volatile变量，对该变量的读/写就具有原子性。如果是多个volatile操作或类似于volatile++这种复合操作，这些操作整体上不具有原子","在jsr","在旧的内存模型中，volatile的写","对一个volatile变量的读，总是能看到（任意线程）对这个volatile变量最后的写入。","特性","理解volatile特性的一个好方法是把对volatile变量的单个读/写，看成是使用同一个锁对这些单个读/写操作做了同步","由于volatile仅仅保证对单个volatile变量的读/写具有原子性，而锁的互斥执行的特性可以确保对整个临界区代码的执行具有原子性。在功能上，锁比volatile更强大；在可伸缩性和执行性能上，volatile更有优势","线程a写一个volatile变量，实质上是线程a向接下来将要读这个volatile变量的某个线程发出了（其对共享变量所做修改的）消息","线程a写一个volatile变量，随后线程b读这个volatile变量，这个过程实质上是线程a通过主内存向线程b发送消息","线程b读一个volatile变量，实质上是线程b接收了之前某个线程发出的（在写这个volatile变量之前对共享变量所做修改的）消息","获取所具有的内存语义。为了提供一种比锁更轻量级的线程之间通信的机制，jsr","获取有相同的内存效果：volatile写和锁的释放有相同的内存语义；volatile读与锁的获取有相同的内存语义。","读与锁的释放","读建立的happen","读没有锁的释放","读的内存语义"],"第09章-java内存模型/04-锁内存语义的实现.html":["04","ca","公平锁和非公平锁释放时，最后都要写一个volatile变量state。","公平锁获取时，首先会去读volatile变量。","内存语义总结","如果当前状态值等于预期值，则以原子方式将同步状态设置为给定的更新值。此操作具有volatile读和写的内存语义。","编译器不会对volatile读与volatile读后面的任意内存操作重排序；编译器不会对volatile写与volatile写前面的任意内存操作重排序。组合这两个条件，意味着为了同时实现volatile读和volatile写的内存语义，编译器不能对cas与cas前面和后面的任意内存操作重排序","这个state式实现锁内存语义的关键","锁一般式基于aqs实现的，aqs维护了一个volatile的state，","锁内存语义的实现","非公平锁获取时，首先会用cas更新volatile变量，这个操作同时具有volatile读和volatile写的内存语义。"],"第09章-java内存模型/05-concurrent包的实现.html":["05","concurrent包的实现","concurrent实现的基石","concurrent的模式","java的cas会使用现代处理器上提供的高效机器级别的原子指令，这些原子指令以原子方式对内存执行读","volatile变量的读/写和cas可以实现线程之间的通信","使用cas的原子条件更新来实现线程之间的同步","写操作，这是在多处理器中实现同步的关键","声明共享变量为volatile。","改","配合以volatile的读/写和cas所具有的volatile读和写的内存语义来实现线程之间的通信"],"第09章-java内存模型/06-final域的内存语义.html":["06","final域为引用类型","final域写重排序规则可以保证：","final域的内存语义","final域的重排序规则","jmm禁止编译器把final域的写重排序到构造函数之外","写final域的重排序规则","写final域的重排序规则对编译器和处理器增加了如下约束：在构造函数内对一个final引用的对象的成员域的写入，与随后在构造函数外把这个被构造对象的引用赋值给一个引用变量，这两个操作之间不能重排序","初次读一个包含final域的对象的引用，与随后初次读这个final域，这两个操作之间不能重排序","在一个线程中，初次读对象引用与初次读该对象包含的final域，jmm禁止处理器重排序这两个操作","在对象引用为任意线程可见之前，对象的final域已经被正确初始化过了，而普通域不具有这个保障","在构造函数内对一个final域的写入，与随后把这个被构造对象的引用赋值给一个引用变量，这两个操作之间不能重排序","在读一个对象的final域之前，一定会先读包含这个final域的对象的引用。读到了引用，则这个final域一定被初始化了","编译器会在final域的写之后，构造函数return之前，插入一个storestore屏障。这个屏障禁止处理器把final域的写重排序到构造函数之外","读final域的重排序规则","读final域的重排序规则可以确保："],"第09章-java内存模型/07-happens-before.html":["07","befor","before于任意后续对这个volatile域的读。","before于线程a从threadb.","before于线程b中的任意操作。","before于该线程中的任意后续操作。","before于随后对这个锁的加锁。","before关系指定的顺序来执行。如果重排序之后的执行结果，与按happen","before关系来执行的结果一致，那么这种重排序并不非法","before关系，并不意味着java平台的具体实现必须要按照happen","before另一个操作，那么第一个操作的执行结果将对第二个操作可见，而且第一个操作的执行顺序排在第二个操作之前","before规则","b，且b","c。","c，那么ahappen","happen","join()并成功返回，那么线程b中的任意操作happen","join()操作成功返回。","join()规则：如果线程a执行操作threadb.","start()规则：如果线程a执行操作threadb.start()（启动线程b），那么a线程的threadb.start()操作happen","volatile变量规则：对一个volatile域的写，happen","两个操作之间存在happen","传递性：如果a","如果一个操作happen","定义","监视器锁规则：对一个锁的解锁，happen","程序顺序规则：一个线程中的每个操作，happen"]},"length":50},"tokenStore":{"root":{"0":{"1":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":5},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":5},"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":5},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":5},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":5},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":5},"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":5},"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":5}}},"2":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":5},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":5},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":5},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":5},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":5},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":5},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":5},"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":5}}},"3":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":5},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":5},"第04章-并发容器/03-ConcurrentLinkedDeque.html":{"ref":"第04章-并发容器/03-ConcurrentLinkedDeque.html","tf":5},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":5},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":5},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":5},"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":5},"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":5}}},"4":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":5},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":5},"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":5},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":5},"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":5}}},"5":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":5},"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":5},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":5},"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":5}}},"6":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":5},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":5},"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":5}}},"7":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":5},"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":3.333333333333333}}},"8":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":5},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.015444015444015444}}},"9":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":5}},":":{"3":{"6":{"docs":{},":":{"5":{"0":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}}},"7":{"docs":{},":":{"0":{"0":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"docs":{}},"1":{"0":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"docs":{}},"2":{"0":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}}},"docs":{}},"4":{"0":{"docs":{},":":{"1":{"8":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"docs":{}},"2":{"9":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"docs":{}},"4":{"0":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"docs":{}},"5":{"1":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676}},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.026845637583892617},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.032},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.03333333333333333},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.006134969325153374},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.022598870056497175},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.007722007722007722}},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}},";":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}},"代":{"docs":{},"表":{"docs":{},"没":{"docs":{},"有":{"docs":{},"加":{"docs":{},"锁":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}},"l":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}},"1":{"0":{"docs":{"第02章-并发编程基础/10-章小结.html":{"ref":"第02章-并发编程基础/10-章小结.html","tf":5}},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"和":{"docs":{},"创":{"docs":{},"建":{"docs":{},"他":{"docs":{},"的":{"docs":{},"父":{"docs":{},"线":{"docs":{},"程":{"docs":{},"相":{"docs":{},"同":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}},")":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}},"3":{"3":{"docs":{},"使":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}},"专":{"docs":{},"家":{"docs":{},"组":{"docs":{},"决":{"docs":{},"定":{"docs":{},"增":{"docs":{},"强":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"增":{"docs":{},"强":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"旧":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"之":{"docs":{},"间":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"但":{"docs":{},"旧":{"docs":{},"的":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"允":{"docs":{},"许":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"与":{"docs":{},"普":{"docs":{},"通":{"docs":{},"变":{"docs":{},"量":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},".":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"4":{"docs":{},"个":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"并":{"docs":{},"发":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"你":{"docs":{},"用":{"docs":{},"过":{"docs":{},"几":{"docs":{},"个":{"docs":{},"？":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}},"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},".":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0375},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.006818181818181818},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.00909090909090909},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}},"，":{"docs":{},"减":{"docs":{},"到":{"0":{"docs":{},"就":{"docs":{},"是":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"释":{"docs":{},"放":{"docs":{},"了":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}},"docs":{}}},"当":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"0":{"docs":{},"时":{"docs":{},"表":{"docs":{},"示":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"已":{"docs":{},"被":{"docs":{},"释":{"docs":{},"放":{"docs":{},"，":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"前":{"docs":{},"次":{"docs":{},"写":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"对":{"docs":{},"后":{"docs":{},"续":{"docs":{},"读":{"docs":{},"写":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"见":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"代":{"docs":{},"表":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"）":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"指":{"docs":{},"令":{"docs":{},"会":{"docs":{},"引":{"docs":{},"起":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"回":{"docs":{},"写":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"写":{"docs":{},"回":{"docs":{},"到":{"docs":{},"系":{"docs":{},"统":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}},"2":{"0":{"2":{"0":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.015444015444015444}}},"docs":{}},"docs":{}},"docs":{},".":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0375},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"）":{"docs":{},"一":{"docs":{},"个":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"回":{"docs":{},"写":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"其":{"docs":{},"他":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"无":{"docs":{},"效":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"写":{"docs":{},"回":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"会":{"docs":{},"使":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"里":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"了":{"docs":{},"该":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"无":{"docs":{},"效":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"2":{"docs":{},"位":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}},"docs":{},".":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.025}}},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"就":{"docs":{},"是":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}},"，":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}},"4":{"docs":{},".":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}},"5":{"1":{"7":{"9":{"5":{"2":{"3":{"7":{"6":{"2":{"0":{"3":{"4":{"0":{"2":{"5":{"8":{"6":{"0":{"docs":{},"l":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"把":{"docs":{},"工":{"docs":{},"作":{"docs":{},"单":{"docs":{},"元":{"docs":{},"与":{"docs":{},"执":{"docs":{},"行":{"docs":{},"机":{"docs":{},"制":{"docs":{},"分":{"docs":{},"离":{"docs":{},"开":{"docs":{},"来":{"docs":{},"。":{"docs":{},"工":{"docs":{},"作":{"docs":{},"单":{"docs":{},"元":{"docs":{},"（":{"docs":{},"可":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"）":{"docs":{},"包":{"docs":{},"括":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"和":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"而":{"docs":{},"执":{"docs":{},"行":{"docs":{},"机":{"docs":{},"制":{"docs":{},"由":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"提":{"docs":{},"供":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"使":{"docs":{},"用":{"docs":{},"新":{"docs":{},"的":{"docs":{},"j":{"docs":{},"s":{"docs":{},"r":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}},"6":{"0":{"docs":{},"l":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}},"docs":{}},"7":{"3":{"7":{"3":{"9":{"8":{"4":{"8":{"7":{"2":{"5":{"7":{"2":{"4":{"1":{"4":{"6":{"9":{"9":{"docs":{},"l":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"种":{"docs":{},"状":{"docs":{},"态":{"docs":{},"！":{"docs":{},"！":{"docs":{},"！":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}},"9":{"docs":{},"一":{"docs":{},"下":{"docs":{},"都":{"docs":{},"启":{"docs":{},"动":{"docs":{},"了":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"每":{"docs":{},"一":{"docs":{},"批":{"docs":{},"都":{"docs":{},"只":{"docs":{},"有":{"docs":{},"三":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"只":{"docs":{},"有":{"docs":{},"三":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"锁":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.047619047619047616},"第02章-并发编程基础/10-章小结.html":{"ref":"第02章-并发编程基础/10-章小结.html","tf":0.14285714285714285}}},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.011247443762781187}},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},":":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}},"：":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}},"共":{"docs":{},"享":{"docs":{},"式":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"没":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"同":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{},"表":{"docs":{},"示":{"docs":{},"获":{"docs":{},"取":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"获":{"docs":{},"取":{"docs":{},"失":{"docs":{},"败":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"释":{"docs":{},"放":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"释":{"docs":{},"放":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"释":{"docs":{},"放":{"docs":{},"后":{"docs":{},"会":{"docs":{},"将":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"唤":{"docs":{},"醒":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"能":{"docs":{},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"抛":{"docs":{},"异":{"docs":{},"常":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}},";":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"由":{"docs":{},"数":{"docs":{},"组":{"docs":{},"结":{"docs":{},"构":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"有":{"docs":{},"界":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"3":{"docs":{},")":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}},"我":{"docs":{},"是":{"docs":{},"等":{"docs":{},"待":{"docs":{},"者":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.016129032258064516},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}},"(":{"1":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}},"docs":{}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}},"e":{"docs":{},"g":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"无":{"docs":{},"条":{"docs":{},"件":{"docs":{},"传":{"docs":{},"播":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}},"和":{"docs":{},"不":{"docs":{},"可":{"docs":{},"用":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"方":{"docs":{},"式":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.022222222222222223},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"e":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}},"docs":{}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.008583690987124463}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"直":{"docs":{},"接":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"a":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"思":{"docs":{},"路":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"。":{"docs":{},"在":{"docs":{},"变":{"docs":{},"量":{"docs":{},"前":{"docs":{},"面":{"docs":{},"追":{"docs":{},"加":{"docs":{},"上":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"变":{"docs":{},"量":{"docs":{},"更":{"docs":{},"新":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"把":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{},"加":{"1":{"docs":{},"，":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"1":{"docs":{},".":{"5":{"docs":{},"的":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"包":{"docs":{},"里":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"首":{"docs":{},"先":{"docs":{},"检":{"docs":{},"查":{"docs":{},"当":{"docs":{},"前":{"docs":{},"引":{"docs":{},"用":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"于":{"docs":{},"预":{"docs":{},"期":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"检":{"docs":{},"查":{"docs":{},"当":{"docs":{},"前":{"docs":{},"标":{"docs":{},"志":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"于":{"docs":{},"预":{"docs":{},"期":{"docs":{},"标":{"docs":{},"志":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"全":{"docs":{},"部":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"则":{"docs":{},"以":{"docs":{},"原":{"docs":{},"子":{"docs":{},"方":{"docs":{},"式":{"docs":{},"将":{"docs":{},"该":{"docs":{},"引":{"docs":{},"用":{"docs":{},"和":{"docs":{},"该":{"docs":{},"标":{"docs":{},"志":{"docs":{},"的":{"docs":{},"值":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"值":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}},"前":{"docs":{},"面":{"docs":{},"说":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"对":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"看":{"docs":{},"看":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"w":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}},"做":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"工":{"docs":{},"作":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"创":{"docs":{},"建":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}},"(":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}},"的":{"docs":{},"话":{"docs":{},"先":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"几":{"docs":{},"份":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"会":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"q":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":5.0010224948875255}},"s":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"管":{"docs":{},"理":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"，":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"会":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"以":{"docs":{},"及":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"等":{"docs":{},"信":{"docs":{},"息":{"docs":{},"构":{"docs":{},"造":{"docs":{},"成":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"）":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"加":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"当":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"释":{"docs":{},"放":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"把":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"，":{"docs":{},"使":{"docs":{},"其":{"docs":{},"再":{"docs":{},"次":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"太":{"docs":{},"多":{"docs":{},"了":{"docs":{},"，":{"docs":{},"贴":{"docs":{},"了":{"docs":{},"不":{"docs":{},"少":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"回":{"docs":{},"头":{"docs":{},"看":{"docs":{},"，":{"docs":{},"几":{"docs":{},"句":{"docs":{},"话":{"docs":{},"就":{"docs":{},"能":{"docs":{},"概":{"docs":{},"括":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"。":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"这":{"docs":{},"么":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"继":{"docs":{},"承":{"docs":{},"他":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"根":{"docs":{},"据":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"写":{"docs":{},"他":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"方":{"docs":{},"法":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"管":{"docs":{},"理":{"docs":{},"的":{"docs":{},"工":{"docs":{},"具":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},"原":{"docs":{},"理":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"第":{"1":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"里":{"docs":{},"的":{"docs":{},"值":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}},"docs":{}}},"g":{"docs":{},"e":{"docs":{},":":{"4":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.010362694300518135}}},"docs":{}}}}},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.008583690987124463},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.006825938566552901},"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.047619047619047616},"第02章-并发编程基础/10-章小结.html":{"ref":"第02章-并发编程基础/10-章小结.html","tf":0.14285714285714285}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":5.029411764705882}},"效":{"docs":{},"率":{"docs":{},"高":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}},"是":{"docs":{},"由":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"结":{"docs":{},"构":{"docs":{},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"结":{"docs":{},"构":{"docs":{},"组":{"docs":{},"成":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"且":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":5.008196721311475}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"第04章-并发容器/03-ConcurrentLinkedDeque.html":{"ref":"第04章-并发容器/03-ConcurrentLinkedDeque.html","tf":5.2}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091}}}}}}}}}}}}},"包":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":5.1}}}}}},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"基":{"docs":{},"石":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":0.1}}}}}}},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":0.1}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.010273972602739725},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.005112474437627812},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":5.010344827586207}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}},"与":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}},"接":{"docs":{},"口":{"docs":{},"也":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"类":{"docs":{},"似":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"的":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"与":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"配":{"docs":{},"合":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"等":{"docs":{},"待":{"docs":{},"/":{"docs":{},"通":{"docs":{},"知":{"docs":{},"模":{"docs":{},"式":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}},"里":{"docs":{},"边":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"重":{"docs":{},"要":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"对":{"docs":{},"比":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"，":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"有":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"和":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"是":{"docs":{},"双":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"太":{"docs":{},"巧":{"docs":{},"了":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695}}},"是":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"的":{"docs":{},"附":{"docs":{},"属":{"docs":{},"物":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"等":{"docs":{},"待":{"docs":{},"/":{"docs":{},"通":{"docs":{},"知":{"docs":{},"两":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"提":{"docs":{},"前":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"对":{"docs":{},"象":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.13793103448275862}}}},"a":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}},"或":{"docs":{},"者":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"失":{"docs":{},"败":{"docs":{},"就":{"docs":{},"自":{"docs":{},"旋":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"b":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}},"y":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"s":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},"e":{"docs":{},"r":{"2":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.03333333333333333}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}},"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.03333333333333333}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}}},")":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.020202020202020204}},";":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}},";":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":5.065573770491803}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"几":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},")":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}},")":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}},";":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.03278688524590164}}},"允":{"docs":{},"许":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"完":{"docs":{},"成":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"实":{"docs":{},"时":{"docs":{},"根":{"docs":{},"据":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"共":{"docs":{},"享":{"docs":{},"式":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.02247191011235955}},"里":{"docs":{},"边":{"docs":{},"核":{"docs":{},"心":{"docs":{},"就":{"docs":{},"是":{"docs":{},"维":{"docs":{},"护":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"这":{"docs":{},"里":{"docs":{},"加":{"docs":{},"了":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.02247191011235955}}}}}}}}}},"于":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"的":{"docs":{},"对":{"docs":{},"比":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"写":{"docs":{},"时":{"docs":{},"复":{"docs":{},"制":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"不":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"操":{"docs":{},"作":{"docs":{},"原":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"先":{"docs":{},"复":{"docs":{},"制":{"docs":{},"一":{"docs":{},"份":{"docs":{},"，":{"docs":{},"在":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"这":{"docs":{},"一":{"docs":{},"份":{"docs":{},"里":{"docs":{},"写":{"docs":{},"，":{"docs":{},"写":{"docs":{},"完":{"docs":{},"再":{"docs":{},"将":{"docs":{},"引":{"docs":{},"用":{"docs":{},"指":{"docs":{},"向":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"这":{"docs":{},"一":{"docs":{},"份":{"docs":{},"。":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}},"缺":{"docs":{},"点":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}},"系":{"docs":{},"列":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":5.01123595505618}}}},"读":{"docs":{},"数":{"docs":{},"据":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"要":{"docs":{},"比":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"差":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"当":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"读":{"docs":{},"到":{"docs":{},"一":{"docs":{},"批":{"docs":{},"数":{"docs":{},"据":{"docs":{},"在":{"docs":{},"消":{"docs":{},"费":{"docs":{},"时":{"docs":{},"，":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"有":{"docs":{},"别":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"读":{"docs":{},"线":{"docs":{},"程":{"docs":{},"还":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"老":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"；":{"docs":{},"但":{"docs":{},"是":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"人":{"docs":{},"读":{"docs":{},"，":{"docs":{},"你":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"写":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"人":{"docs":{},"写":{"docs":{},"，":{"docs":{},"你":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"读":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},":":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}},"p":{"docs":{},"u":{"docs":{},"处":{"docs":{},"理":{"docs":{},"速":{"docs":{},"度":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}},"通":{"docs":{},"过":{"docs":{},"时":{"docs":{},"间":{"docs":{},"分":{"docs":{},"片":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"争":{"docs":{},"抢":{"docs":{},"时":{"docs":{},"间":{"docs":{},"片":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"切":{"docs":{},"换":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"存":{"docs":{},"一":{"docs":{},"些":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"再":{"docs":{},"次":{"docs":{},"切":{"docs":{},"换":{"docs":{},"回":{"docs":{},"去":{"docs":{},"需":{"docs":{},"要":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"此":{"docs":{},"为":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"成":{"docs":{},"本":{"docs":{},"。":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"密":{"docs":{},"集":{"docs":{},"型":{"docs":{},"：":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"=":{"docs":{},"核":{"docs":{},"心":{"docs":{},"数":{"docs":{},"+":{"1":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"docs":{}}}}}}}}}}}}}}},"核":{"docs":{},"心":{"docs":{},"数":{"docs":{},"通":{"docs":{},"过":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"获":{"docs":{},"得":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"高":{"docs":{},"速":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"配":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"单":{"docs":{},"位":{"docs":{},"。":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"填":{"docs":{},"写":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"时":{"docs":{},"会":{"docs":{},"加":{"docs":{},"载":{"docs":{},"整":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":0.1}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}},"e":{"docs":{},"也":{"docs":{},"是":{"docs":{},"函":{"docs":{},"数":{"docs":{},"式":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"也":{"docs":{},"能":{"docs":{},"用":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"a":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"只":{"docs":{},"用":{"docs":{},"调":{"docs":{},"用":{"docs":{},"者":{"docs":{},"所":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"运":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.006825938566552901},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}},"s":{"docs":{},"底":{"docs":{},"层":{"docs":{},"是":{"docs":{},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"里":{"docs":{},"边":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"些":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"=":{"docs":{},"加":{"docs":{},"进":{"docs":{},"来":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"大":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}},"c":{"docs":{},"h":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.05454545454545454}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"：":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"会":{"docs":{},"根":{"docs":{},"据":{"docs":{},"需":{"docs":{},"要":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.020134228187919462},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.010752688172043012},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.010273972602739725},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.032},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.015909090909090907},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.03333333333333333},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.007157464212678937},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.008583690987124463},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}},".":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676}},"s":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}}}}}}}}}},"与":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"求":{"docs":{},"与":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"！":{"docs":{},"=":{"0":{"docs":{},"但":{"docs":{},"是":{"docs":{},"低":{"1":{"6":{"docs":{},"位":{"docs":{},"为":{"0":{"docs":{},"表":{"docs":{},"示":{"docs":{},"有":{"docs":{},"人":{"docs":{},"拿":{"docs":{},"了":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"有":{"docs":{},"人":{"docs":{},"拿":{"docs":{},"了":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"的":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}},"docs":{}}}}},"docs":{}}},"t":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.006825938566552901}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.015444015444015444}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":5.076923076923077}},"e":{"docs":{},"r":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}},";":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}},"docs":{}},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"行":{"docs":{},"计":{"docs":{},"算":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"等":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"计":{"docs":{},"算":{"docs":{},"完":{"docs":{},"再":{"docs":{},"合":{"docs":{},"并":{"docs":{},"。":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"a":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012},"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}},"。":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"地":{"docs":{},"址":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.022222222222222223}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}},":":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"所":{"docs":{},"有":{"docs":{},"等":{"docs":{},"待":{"docs":{},"获":{"docs":{},"取":{"docs":{},"许":{"docs":{},"可":{"docs":{},"证":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"是":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}},"：":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{},"获":{"docs":{},"取":{"docs":{},"当":{"docs":{},"前":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"被":{"docs":{},"获":{"docs":{},"取":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"当":{"docs":{},"前":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"被":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"与":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"无":{"docs":{},"关":{"docs":{},"，":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"n":{"docs":{},"次":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}},"c":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}},"j":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.022222222222222223},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.011299435028248588}},"a":{"docs":{},"v":{"docs":{},"a":{"7":{"docs":{},"以":{"docs":{},"下":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}},"8":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}},"docs":{"./":{"ref":"./","tf":0.023809523809523808},"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.06896551724137931},"第02章-并发编程基础/10-章小结.html":{"ref":"第02章-并发编程基础/10-章小结.html","tf":0.14285714285714285}},"程":{"docs":{},"序":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"线":{"docs":{},"程":{"docs":{},"由":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"创":{"docs":{},"建":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"断":{"docs":{},"机":{"docs":{},"制":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"协":{"docs":{},"作":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"通":{"docs":{},"过":{"docs":{},"中":{"docs":{},"断":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"终":{"docs":{},"止":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"而":{"docs":{},"需":{"docs":{},"要":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"自":{"docs":{},"己":{"docs":{},"处":{"docs":{},"理":{"docs":{},"中":{"docs":{},"断":{"docs":{},"。":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"包":{"docs":{},"下":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"容":{"docs":{},"器":{"docs":{},"类":{"docs":{},"是":{"docs":{},"非":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"发":{"docs":{},"共":{"docs":{},"享":{"docs":{},"访":{"docs":{},"问":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"包":{"docs":{},"下":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"容":{"docs":{},"器":{"docs":{},"类":{"docs":{},"。":{"docs":{"第04章-并发容器/":{"ref":"第04章-并发容器/","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"发":{"docs":{},"机":{"docs":{},"制":{"docs":{},"的":{"docs":{},"底":{"docs":{},"层":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{"第08章-Java并发机制的底层实现原理/":{"ref":"第08章-Java并发机制的底层实现原理/","tf":5.333333333333333}}}}}}}}}}}}},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":5.076923076923077}},"基":{"docs":{},"础":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":5.010752688172043}}}},"的":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"结":{"docs":{},"构":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"采":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"共":{"docs":{},"享":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"现":{"docs":{},"代":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"上":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"高":{"docs":{},"效":{"docs":{},"机":{"docs":{},"器":{"docs":{},"级":{"docs":{},"别":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"指":{"docs":{},"令":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"原":{"docs":{},"子":{"docs":{},"指":{"docs":{},"令":{"docs":{},"以":{"docs":{},"原":{"docs":{},"子":{"docs":{},"方":{"docs":{},"式":{"docs":{},"对":{"docs":{},"内":{"docs":{},"存":{"docs":{},"执":{"docs":{},"行":{"docs":{},"读":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}},"并":{"docs":{},"成":{"docs":{},"功":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"线":{"docs":{},"程":{"docs":{},"b":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"操":{"docs":{},"作":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"成":{"docs":{},"功":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"执":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},".":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016}}}}}}},"如":{"docs":{},"果":{"docs":{},"带":{"docs":{},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"如":{"docs":{},"果":{"docs":{},"超":{"docs":{},"时":{"docs":{},"的":{"docs":{},"话":{"docs":{},"主":{"docs":{},"线":{"docs":{},"程":{"docs":{},"也":{"docs":{},"会":{"docs":{},"不":{"docs":{},"再":{"docs":{},"等":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"进":{"docs":{},"去":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"而":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},".":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"际":{"docs":{},"就":{"docs":{},"是":{"docs":{},"判":{"docs":{},"断":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"进":{"docs":{},"来":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"存":{"docs":{},"活":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"活":{"docs":{},"着":{"docs":{},"就":{"docs":{},"调":{"docs":{},"用":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},",":{"docs":{},"如":{"docs":{},"果":{"docs":{},"带":{"docs":{},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"了":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"会":{"docs":{},"算":{"docs":{},"出":{"docs":{},"来":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"k":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"有":{"7":{"docs":{},"个":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"。":{"docs":{"第05章-阻塞队列/":{"ref":"第05章-阻塞队列/","tf":0.2}}}}}}}}}},"docs":{}}}}}}}}}}},"v":{"docs":{},"m":{"docs":{},"基":{"docs":{},"于":{"docs":{},"进":{"docs":{},"入":{"docs":{},"和":{"docs":{},"退":{"docs":{},"出":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"对":{"docs":{},"象":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"法":{"docs":{},"同":{"docs":{},"步":{"docs":{},"和":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"但":{"docs":{},"两":{"docs":{},"者":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"细":{"docs":{},"节":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"同":{"docs":{},"步":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"和":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"指":{"docs":{},"令":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"正":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"了":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"g":{"docs":{},"指":{"docs":{},"令":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"路":{"docs":{},"就":{"docs":{},"是":{"docs":{},"循":{"docs":{},"环":{"docs":{},"进":{"docs":{},"行":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"直":{"docs":{},"到":{"docs":{},"成":{"docs":{},"功":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"种":{"docs":{},"锁":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"有":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"、":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"决":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"写":{"docs":{},"入":{"docs":{},"何":{"docs":{},"时":{"docs":{},"对":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"见":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"会":{"docs":{},"要":{"docs":{},"求":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"在":{"docs":{},"生":{"docs":{},"成":{"docs":{},"指":{"docs":{},"令":{"docs":{},"序":{"docs":{},"列":{"docs":{},"时":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"特":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"会":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"特":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"控":{"docs":{},"制":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"与":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"内":{"docs":{},"存":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"交":{"docs":{},"互":{"docs":{},"，":{"docs":{},"来":{"docs":{},"为":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"提":{"docs":{},"供":{"docs":{},"内":{"docs":{},"存":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"保":{"docs":{},"证":{"docs":{},"。":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"保":{"docs":{},"证":{"docs":{},"对":{"6":{"4":{"docs":{},"位":{"docs":{},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"型":{"docs":{},"和":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"型":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"具":{"docs":{},"有":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"而":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"模":{"docs":{},"型":{"docs":{},"保":{"docs":{},"证":{"docs":{},"对":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"具":{"docs":{},"有":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"未":{"docs":{},"同":{"docs":{},"步":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"与":{"docs":{},"该":{"docs":{},"程":{"docs":{},"序":{"docs":{},"在":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"一":{"docs":{},"致":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"在":{"docs":{},"退":{"docs":{},"出":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},"和":{"docs":{},"进":{"docs":{},"入":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"时":{"docs":{},"间":{"docs":{},"点":{"docs":{},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"特":{"docs":{},"别":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"时":{"docs":{},"间":{"docs":{},"点":{"docs":{},"具":{"docs":{},"有":{"docs":{},"与":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"模":{"docs":{},"型":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"视":{"docs":{},"图":{"docs":{},"）":{"docs":{},"。":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},"内":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"既":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"执":{"docs":{},"行":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"又":{"docs":{},"没":{"docs":{},"有":{"docs":{},"改":{"docs":{},"变":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"正":{"docs":{},"确":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"做":{"docs":{},"了":{"docs":{},"如":{"docs":{},"下":{"docs":{},"保":{"docs":{},"证":{"docs":{},"：":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}},"禁":{"docs":{},"止":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"把":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"的":{"docs":{},"写":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"到":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"之":{"docs":{},"外":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012},"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},"i":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}},"上":{"docs":{},"边":{"docs":{},"提":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}},"对":{"docs":{},"应":{"docs":{},"章":{"docs":{},"下":{"docs":{},"面":{"docs":{},"找":{"docs":{},"到":{"docs":{"第02章-并发编程基础/10-章小结.html":{"ref":"第02章-并发编程基础/10-章小结.html","tf":0.14285714285714285}}}}}}}}}},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016}}},",":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016}}}}}}},"s":{"docs":{},"s":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}},"b":{"docs":{},"y":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.020134228187919462}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}},"p":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.00909090909090909}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.031088082901554404}},"e":{"docs":{},"r":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"线":{"docs":{},"程":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"中":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}},"是":{"0":{"docs":{},"x":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},",":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}},"docs":{}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"：":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"了":{"docs":{},"，":{"docs":{},"已":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"小":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"会":{"docs":{},"再":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"值":{"docs":{},"得":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"无":{"docs":{},"界":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"队":{"docs":{},"列":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"就":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}},")":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.03225806451612903},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.016129032258064516},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.020202020202020204}}}}},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"指":{"docs":{},"令":{"docs":{},"是":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"后":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"而":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"是":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"方":{"docs":{},"法":{"docs":{},"结":{"docs":{},"束":{"docs":{},"处":{"docs":{},"和":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"。":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"被":{"docs":{},"持":{"docs":{},"有":{"docs":{},"后":{"docs":{},"他":{"docs":{},"就":{"docs":{},"被":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"了":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}},"y":{"docs":{},"）":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"本":{"docs":{},"地":{"docs":{},"内":{"docs":{},"存":{"docs":{},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"本":{"docs":{},"地":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"以":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"。":{"docs":{},"本":{"docs":{},"地":{"docs":{},"内":{"docs":{},"存":{"docs":{},"是":{"docs":{},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"概":{"docs":{},"念":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"真":{"docs":{},"实":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{},"它":{"docs":{},"涵":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"、":{"docs":{},"写":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"、":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"以":{"docs":{},"及":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"和":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"配":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"域":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"已":{"docs":{},"经":{"docs":{},"完":{"docs":{},"成":{"docs":{},"了":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.02459016393442623},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.047619047619047616},"第02章-并发编程基础/10-章小结.html":{"ref":"第02章-并发编程基础/10-章小结.html","tf":0.14285714285714285}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.015337423312883436},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"w":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.017123287671232876},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.011363636363636364},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.022222222222222223},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.020202020202020204},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0081799591002045},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.02617801047120419},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.03056768558951965},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.009652509652509652},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"e":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"支":{"docs":{},"持":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"无":{"docs":{},"界":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"v":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.020134228187919462},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.043010752688172046},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.02054794520547945},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.088},"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.02727272727272727},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.06666666666666667},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.020202020202020204},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.028629856850715747},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.02145922746781116},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.14},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.013793103448275862},"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.058823529411764705},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.02247191011235955},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.043668122270742356},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0228310502283105},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.022598870056497175},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.011945392491467578},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.03088803088803089},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.06557377049180328},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.05128205128205128},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}},"t":{"docs":{},"(":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},"k":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"父":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"）":{"docs":{},"，":{"docs":{},"其":{"docs":{},"参":{"docs":{},"数":{"docs":{},"表":{"docs":{},"示":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"拦":{"docs":{},"截":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"告":{"docs":{},"诉":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"我":{"docs":{},"已":{"docs":{},"经":{"docs":{},"到":{"docs":{},"达":{"docs":{},"了":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"。":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},";":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"和":{"docs":{},"t":{"docs":{},"都":{"docs":{},"是":{"docs":{},"执":{"docs":{},"行":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"短":{"docs":{},"路":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"后":{"docs":{},"边":{"docs":{},"不":{"docs":{},"走":{"docs":{},"了":{"docs":{},"，":{"docs":{},"三":{"docs":{},"元":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"p":{"docs":{},"指":{"docs":{},"向":{"docs":{},"q":{"docs":{},"，":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"（":{"docs":{},"假":{"docs":{},"设":{"docs":{},"线":{"docs":{},"程":{"2":{"docs":{},"卡":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"了":{"docs":{},"）":{"docs":{},"，":{"docs":{},"梳":{"docs":{},"理":{"docs":{},"一":{"docs":{},"下":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"：":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"和":{"docs":{},"t":{"docs":{},"都":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"p":{"docs":{},"指":{"docs":{},"向":{"docs":{},"q":{"docs":{},"，":{"docs":{},"q":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{},"号":{"docs":{},"。":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"y":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"3":{"0":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},":":{"3":{"0":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"x":{"docs":{},"x":{"docs":{},"表":{"docs":{},"示":{"docs":{},"所":{"docs":{},"转":{"docs":{},"载":{"docs":{},"文":{"docs":{},"章":{"docs":{},"的":{"docs":{},"链":{"docs":{},"接":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}},":":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"0":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676}}},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.008532423208191127}}},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}},"“":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"”":{"docs":{},"或":{"docs":{},"者":{"docs":{},"打":{"docs":{},"赏":{"docs":{},"或":{"docs":{},"者":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"点":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"“":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"”":{"docs":{},"数":{"docs":{},"字":{"docs":{},"”":{"docs":{},"，":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"测":{"docs":{},"试":{"docs":{},"时":{"docs":{},"打":{"docs":{},"印":{"docs":{},"一":{"docs":{},"段":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"意":{"docs":{},"思":{"docs":{},"的":{"docs":{},"一":{"docs":{},"段":{"docs":{},"话":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"些":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"说":{"docs":{},"明":{"docs":{},"，":{"docs":{},"不":{"docs":{},"单":{"docs":{},"独":{"docs":{},"说":{"docs":{},"明":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"点":{"docs":{},"：":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"：":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"原":{"docs":{},"则":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}},"体":{"docs":{},"会":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}},"参":{"docs":{},"数":{"docs":{},"校":{"docs":{},"验":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"术":{"docs":{},"语":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}},"个":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"。":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"是":{"docs":{},"也":{"docs":{},"是":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"i":{"docs":{},"+":{"docs":{},"+":{"docs":{},"操":{"docs":{},"作":{"docs":{},",":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}}}}}}},"例":{"docs":{},"子":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}},"共":{"docs":{},"享":{"docs":{},"式":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},"锁":{"docs":{},"可":{"docs":{},"以":{"docs":{},"搞":{"docs":{},"多":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"里":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"里":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"研":{"docs":{},"发":{"docs":{},"部":{"docs":{},"，":{"docs":{},"创":{"docs":{},"建":{"docs":{},"研":{"docs":{},"发":{"docs":{},"部":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"定":{"docs":{},"骨":{"docs":{},"干":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{},"能":{"docs":{},"容":{"docs":{},"纳":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"（":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"）":{"docs":{},",":{"docs":{},"如":{"docs":{},"果":{"docs":{},"忙":{"docs":{},"不":{"docs":{},"过":{"docs":{},"来":{"docs":{},"的":{"docs":{},"需":{"docs":{},"求":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"给":{"docs":{},"产":{"docs":{},"品":{"docs":{},"回":{"docs":{},"复":{"docs":{},"（":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"策":{"docs":{},"略":{"docs":{},"）":{"docs":{},"等":{"docs":{},"等":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{},"刚":{"docs":{},"开":{"docs":{},"始":{"docs":{},"这":{"docs":{},"个":{"docs":{},"研":{"docs":{},"发":{"docs":{},"部":{"docs":{},"一":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"必":{"docs":{},"须":{"docs":{},"按":{"docs":{},"照":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"没":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"表":{"docs":{},"示":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"我":{"docs":{},"们":{"docs":{},"太":{"docs":{},"熟":{"docs":{},"悉":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"被":{"docs":{},"写":{"docs":{},"入":{"docs":{},"到":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"区":{"docs":{},"域":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}},"般":{"docs":{},"都":{"docs":{},"会":{"docs":{},"将":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"当":{"docs":{},"调":{"docs":{},"用":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"后":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"并":{"docs":{},"在":{"docs":{},"此":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"而":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"通":{"docs":{},"知":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"后":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"从":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"返":{"docs":{},"回":{"docs":{},"前":{"docs":{},"已":{"docs":{},"经":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744}}}}},"共":{"docs":{},"有":{"7":{"docs":{},"个":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"：":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}},"docs":{}}},"句":{"docs":{},"话":{"docs":{},"可":{"docs":{},"以":{"docs":{},"说":{"docs":{},"明":{"docs":{},"白":{"docs":{},"，":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"及":{"docs":{},"其":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"说":{"docs":{},"到":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"能":{"docs":{},"已":{"docs":{},"经":{"docs":{},"知":{"docs":{},"道":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"搞":{"docs":{},"了":{"docs":{},"。":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"：":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"多":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"合":{"docs":{},"并":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"操":{"docs":{},"作":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}},"共":{"docs":{},"享":{"docs":{},"内":{"docs":{},"存":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"共":{"docs":{},"享":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"公":{"docs":{},"共":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"写":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"如":{"docs":{},"何":{"docs":{},"通":{"docs":{},"信":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}},"三":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"总":{"docs":{},"有":{"docs":{},"一":{"docs":{},"款":{"docs":{},"适":{"docs":{},"合":{"docs":{},"你":{"docs":{},"，":{"docs":{},"三":{"docs":{},"种":{"docs":{},"都":{"docs":{},"搞":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"要":{"docs":{},"送":{"docs":{},"你":{"docs":{},"哆":{"docs":{},"啦":{"docs":{},"a":{"docs":{},"梦":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}},"个":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"后":{"docs":{},"边":{"docs":{},"的":{"docs":{},"才":{"docs":{},"能":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"锁":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"点":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}},"特":{"docs":{},"别":{"docs":{},"追":{"docs":{},"求":{"docs":{},"底":{"docs":{},"层":{"docs":{},"细":{"docs":{},"节":{"docs":{},"的":{"docs":{},"同":{"docs":{},"学":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}},"能":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.040268456375838924}}},"支":{"docs":{},"持":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315}}}},"得":{"docs":{},"不":{"docs":{},"说":{"docs":{},"，":{"docs":{},"牛":{"docs":{},"逼":{"docs":{},"啊":{"docs":{},"！":{"docs":{},"~":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"是":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"抢":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"才":{"docs":{},"会":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"周":{"docs":{},"期":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"就":{"docs":{},"好":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}},"说":{"docs":{},"了":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"引":{"docs":{},"用":{"docs":{},"书":{"docs":{},"上":{"docs":{},"的":{"docs":{},"话":{"docs":{},"。":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}},"可":{"docs":{},"用":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744}}},"中":{"docs":{},"断":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"操":{"docs":{},"作":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}},"懂":{"docs":{},"这":{"docs":{},"是":{"docs":{},"个":{"docs":{},"啥":{"docs":{},"玩":{"docs":{},"意":{"docs":{},"儿":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}},"适":{"docs":{},"用":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"：":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}},"管":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"为":{"docs":{},"了":{"docs":{},"提":{"docs":{},"高":{"docs":{},"并":{"docs":{},"行":{"docs":{},"度":{"docs":{},"）":{"docs":{},"，":{"docs":{},"（":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"）":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"、":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"a":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"醍":{"docs":{},"醐":{"docs":{},"灌":{"docs":{},"顶":{"docs":{},"的":{"docs":{},"感":{"docs":{},"觉":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}},"被":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"到":{"docs":{},"子":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}},"发":{"docs":{},"现":{"docs":{},"里":{"docs":{},"边":{"docs":{},"也":{"docs":{},"和":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"节":{"docs":{},"点":{"docs":{},"居":{"docs":{},"然":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"说":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"世":{"docs":{},"间":{"docs":{},"真":{"docs":{},"奇":{"docs":{},"妙":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"该":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"内":{"docs":{},"存":{"docs":{},"访":{"docs":{},"问":{"docs":{},"指":{"docs":{},"令":{"docs":{},"（":{"docs":{},"存":{"docs":{},"储":{"docs":{},"和":{"docs":{},"装":{"docs":{},"载":{"docs":{},"指":{"docs":{},"令":{"docs":{},"）":{"docs":{},"完":{"docs":{},"成":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"才":{"docs":{},"执":{"docs":{},"行":{"docs":{},"该":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"访":{"docs":{},"问":{"docs":{},"指":{"docs":{},"令":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"二":{"docs":{},"维":{"docs":{},"码":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}},"平":{"docs":{},"与":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}},"就":{"docs":{},"是":{"docs":{},"先":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"先":{"docs":{},"得":{"docs":{},"到":{"docs":{},"多":{"docs":{},"，":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"则":{"docs":{},"是":{"docs":{},"去":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"是":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"的":{"docs":{},"锁":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"相":{"docs":{},"比":{"docs":{},"于":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"的":{"docs":{},"会":{"docs":{},"多":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}},"锁":{"docs":{},"多":{"docs":{},"一":{"docs":{},"次":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"性":{"docs":{},"能":{"docs":{},"损":{"docs":{},"失":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"饥":{"docs":{},"饿":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}},"性":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"公":{"docs":{},"平":{"docs":{},"也":{"docs":{},"会":{"docs":{},"降":{"docs":{},"低":{"docs":{},"并":{"docs":{},"发":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"和":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"释":{"docs":{},"放":{"docs":{},"时":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"都":{"docs":{},"要":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"。":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"会":{"docs":{},"去":{"docs":{},"读":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"晦":{"docs":{},"涩":{"docs":{},"难":{"docs":{},"懂":{"docs":{},"，":{"docs":{},"且":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"认":{"docs":{},"为":{"docs":{},"在":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"不":{"docs":{},"是":{"docs":{},"那":{"docs":{},"么":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"言":{"docs":{"./":{"ref":"./","tf":10.023809523809524}}},"置":{"docs":{},"条":{"docs":{},"件":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}},"面":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"声":{"docs":{},"明":{"docs":{},"了":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"“":{"docs":{},"独":{"docs":{},"占":{"docs":{},"不":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"”":{"docs":{},"演":{"docs":{},"示":{"docs":{},"了":{"docs":{},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"演":{"docs":{},"示":{"docs":{},"共":{"docs":{},"享":{"docs":{},"式":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"是":{"docs":{},"拍":{"docs":{},"脑":{"docs":{},"袋":{"docs":{},"给":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"说":{"docs":{},"要":{"2":{"docs":{},"个":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"啥":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"应":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"正":{"docs":{},"确":{"docs":{},"决":{"docs":{},"策":{"docs":{},"呢":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"讲":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"框":{"docs":{},"架":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"员":{"docs":{},"。":{"docs":{},"从":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}},"“":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"”":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"留":{"docs":{},"言":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"调":{"docs":{},"试":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"源":{"docs":{},"码":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":5.0344827586206895}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"跑":{"docs":{},"测":{"docs":{},"试":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"先":{"docs":{},"把":{"docs":{},"文":{"docs":{},"章":{"docs":{},"中":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"解":{"docs":{},"决":{"docs":{},"好":{"docs":{},"了":{"docs":{},"再":{"docs":{},"跑":{"docs":{},"，":{"docs":{},"争":{"docs":{},"取":{"docs":{},"一":{"docs":{},"次":{"docs":{},"搞":{"docs":{},"定":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"一":{"docs":{},"次":{"docs":{},"非":{"docs":{},"常":{"docs":{},"慢":{"docs":{},"非":{"docs":{},"常":{"docs":{},"耗":{"docs":{},"费":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"出":{"docs":{},"现":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"及":{"docs":{},"时":{"docs":{},"杀":{"docs":{},"死":{"docs":{},"进":{"docs":{},"程":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"报":{"docs":{},"错":{"docs":{},"就":{"docs":{},"跑":{"docs":{},"不":{"docs":{},"起":{"docs":{},"来":{"docs":{},"了":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"章":{"docs":{},"第":{"5":{"docs":{},"节":{"docs":{},"已":{"docs":{},"经":{"docs":{},"说":{"docs":{},"了":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}},"docs":{}}}}},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"重":{"docs":{},"新":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}},"docs":{}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"或":{"docs":{},"者":{"docs":{},"获":{"docs":{},"取":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}},"读":{"docs":{},"多":{"docs":{},"于":{"docs":{},"写":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"能":{"docs":{},"够":{"docs":{},"提":{"docs":{},"供":{"docs":{},"比":{"docs":{},"排":{"docs":{},"它":{"docs":{},"锁":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"性":{"docs":{},"和":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"会":{"docs":{},"先":{"docs":{},"读":{"docs":{},"包":{"docs":{},"含":{"docs":{},"这":{"docs":{},"个":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"读":{"docs":{},"到":{"docs":{},"了":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"个":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"一":{"docs":{},"定":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"了":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"里":{"docs":{},"边":{"docs":{},"搜":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"这":{"docs":{},"个":{"docs":{},"是":{"docs":{},"自":{"docs":{},"己":{"docs":{},"写":{"docs":{},"的":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"进":{"docs":{},"行":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"操":{"docs":{},"作":{"docs":{},"会":{"docs":{},"引":{"docs":{},"起":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"利":{"docs":{},"用":{"docs":{},"率":{"docs":{},"接":{"docs":{},"近":{"1":{"0":{"0":{"docs":{},"%":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"并":{"docs":{},"发":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"之":{"docs":{},"前":{"docs":{},"还":{"docs":{},"会":{"docs":{},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"校":{"docs":{},"验":{"docs":{},"。":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"里":{"docs":{},"边":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"后":{"docs":{},"就":{"docs":{},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"调":{"docs":{},"度":{"docs":{},"执":{"docs":{},"行":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"了":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"调":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"称":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"具":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"性":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"，":{"docs":{},"对":{"docs":{},"存":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"（":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"a":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"r":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}},"旧":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"，":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"写":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"初":{"docs":{},"次":{"docs":{},"读":{"docs":{},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"与":{"docs":{},"初":{"docs":{},"次":{"docs":{},"读":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"，":{"docs":{},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"引":{"docs":{},"用":{"docs":{},"为":{"docs":{},"任":{"docs":{},"意":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"见":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"正":{"docs":{},"确":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"而":{"docs":{},"普":{"docs":{},"通":{"docs":{},"域":{"docs":{},"不":{"docs":{},"具":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"保":{"docs":{},"障":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"内":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"的":{"docs":{},"写":{"docs":{},"入":{"docs":{},"，":{"docs":{},"与":{"docs":{},"随":{"docs":{},"后":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"被":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"一":{"docs":{},"个":{"docs":{},"引":{"docs":{},"用":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"此":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"参":{"docs":{},"考":{"docs":{},"这":{"docs":{},"本":{"docs":{},"书":{"docs":{},"，":{"docs":{},"结":{"docs":{},"合":{"docs":{},"网":{"docs":{},"上":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"资":{"docs":{},"料":{"docs":{},"和":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"写":{"docs":{},"了":{"docs":{},"此":{"docs":{},"笔":{"docs":{},"记":{"docs":{},"。":{"docs":{},"本":{"docs":{},"笔":{"docs":{},"记":{"docs":{},"是":{"docs":{},"《":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"艺":{"docs":{},"术":{"docs":{},"》":{"docs":{},"的":{"docs":{},"读":{"docs":{},"书":{"docs":{},"笔":{"docs":{},"记":{"docs":{},"，":{"docs":{},"绝":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"内":{"docs":{},"容":{"docs":{},"来":{"docs":{},"自":{"docs":{},"这":{"docs":{},"本":{"docs":{},"书":{"docs":{},"。":{"docs":{},"希":{"docs":{},"望":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"同":{"docs":{},"学":{"docs":{},"们":{"docs":{},"快":{"docs":{},"速":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"的":{"docs":{},"门":{"docs":{},"道":{"docs":{},"，":{"docs":{},"也":{"docs":{},"希":{"docs":{},"望":{"docs":{},"借":{"docs":{},"对":{"docs":{},"此":{"docs":{},"笔":{"docs":{},"记":{"docs":{},"的":{"docs":{},"整":{"docs":{},"理":{"docs":{},"提":{"docs":{},"高":{"docs":{},"笔":{"docs":{},"者":{"docs":{},"自":{"docs":{},"身":{"docs":{},"对":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"、":{"docs":{},"巩":{"docs":{},"固":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"知":{"docs":{},"识":{"docs":{},"点":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"组":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"通":{"docs":{},"信":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"通":{"docs":{},"信":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"的":{"docs":{},"容":{"docs":{},"器":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"通":{"docs":{},"知":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"通":{"docs":{},"信":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"独":{"docs":{},"占":{"docs":{},"不":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"不":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"他":{"docs":{},"又":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"确":{"docs":{},"实":{"docs":{},"像":{"docs":{},"书":{"docs":{},"上":{"docs":{},"说":{"docs":{},"的":{"docs":{},"那":{"docs":{},"样":{"docs":{},"，":{"docs":{},"要":{"docs":{},"是":{"docs":{},"我":{"docs":{},"去":{"docs":{},"做":{"docs":{},"的":{"docs":{},"话":{"docs":{},"估":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"完":{"docs":{},"事":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"里":{"docs":{},"边":{"docs":{},"是":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"做":{"docs":{},"。":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"并":{"docs":{},"发":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"别":{"docs":{},"对":{"docs":{},"头":{"docs":{},"尾":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"除":{"docs":{},"了":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},")":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"进":{"docs":{},"后":{"docs":{},"出":{"docs":{},"（":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"）":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"先":{"docs":{},"进":{"docs":{},"后":{"docs":{},"出":{"docs":{},"的":{"docs":{},"话":{"docs":{},"应":{"docs":{},"该":{"docs":{},"叫":{"docs":{},"它":{"docs":{},"栈":{"docs":{},"了":{"docs":{},"。":{"docs":{"第04章-并发容器/03-ConcurrentLinkedDeque.html":{"ref":"第04章-并发容器/03-ConcurrentLinkedDeque.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"跳":{"docs":{},"表":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091}}}}}}}}}}},"本":{"docs":{},"原":{"docs":{},"理":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}},"大":{"docs":{},"雄":{"docs":{},"本":{"docs":{},"身":{"docs":{},"也":{"docs":{},"在":{"docs":{},"学":{"docs":{},"习":{"docs":{},"中":{"docs":{},"，":{"docs":{},"基":{"docs":{},"础":{"docs":{},"不":{"docs":{},"是":{"docs":{},"太":{"docs":{},"好":{"docs":{},"，":{"docs":{},"各":{"docs":{},"位":{"docs":{},"同":{"docs":{},"学":{"docs":{},"如":{"docs":{},"果":{"docs":{},"发":{"docs":{},"现":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"错":{"docs":{},"漏":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"请":{"docs":{},"不":{"docs":{},"吝":{"docs":{},"啬":{"docs":{},"指":{"docs":{},"出":{"docs":{},"，":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"疑":{"docs":{},"问":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"也":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"交":{"docs":{},"流":{"docs":{},"。":{"docs":{},"方":{"docs":{},"式":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"搭":{"docs":{},"建":{"docs":{},"时":{"docs":{},"还":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}},"不":{"docs":{},"去":{"docs":{},"具":{"docs":{},"体":{"docs":{},"研":{"docs":{},"究":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"流":{"docs":{},"转":{"docs":{},"了":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"参":{"docs":{},"考":{"docs":{},"一":{"docs":{},"些":{"docs":{},"资":{"docs":{},"料":{"docs":{},"及":{"docs":{},"上":{"docs":{},"述":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"，":{"docs":{},"搞":{"docs":{},"一":{"docs":{},"个":{"docs":{},"前":{"docs":{},"无":{"docs":{},"古":{"docs":{},"人":{"docs":{},"、":{"docs":{},"后":{"docs":{},"有":{"docs":{},"来":{"docs":{},"者":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"图":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"懵":{"docs":{},"了":{"docs":{},"，":{"docs":{},"遂":{"docs":{},"在":{"docs":{},"源":{"docs":{},"码":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"如":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"枚":{"docs":{},"举":{"docs":{},",":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}},"只":{"docs":{},"看":{"docs":{},"了":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"到":{"docs":{},"这":{"docs":{},"里":{"docs":{},"还":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"疑":{"docs":{},"问":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"w":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"创":{"docs":{},"建":{"docs":{},"并":{"docs":{},"加":{"docs":{},"入":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"的":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"启":{"docs":{},"动":{"docs":{},"的":{"docs":{},"，":{"docs":{},"再":{"docs":{},"就":{"docs":{},"是":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"家":{"docs":{},"如":{"docs":{},"果":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{},"下":{"docs":{},"变":{"docs":{},"这":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"排":{"docs":{},"查":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"总":{"docs":{},"是":{"docs":{},"由":{"docs":{},"同":{"docs":{},"一":{"docs":{},"线":{"docs":{},"程":{"docs":{},"多":{"docs":{},"次":{"docs":{},"获":{"docs":{},"得":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"让":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"更":{"docs":{},"低":{"docs":{},"而":{"docs":{},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"此":{"docs":{},"书":{"docs":{},"有":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"到":{"docs":{},"你":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"的":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"的":{"docs":{},"话":{"docs":{},"就":{"docs":{},"要":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"了":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}},"失":{"docs":{},"败":{"docs":{},"就":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"变":{"docs":{},"为":{"docs":{},"了":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"且":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"了":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"正":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"接":{"docs":{},"收":{"docs":{},"元":{"docs":{},"素":{"docs":{},"（":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"带":{"docs":{},"时":{"docs":{},"间":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"）":{"docs":{},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"立":{"docs":{},"刻":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"（":{"docs":{},"传":{"docs":{},"输":{"docs":{},"）":{"docs":{},"给":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"值":{"docs":{},"等":{"docs":{},"于":{"docs":{},"预":{"docs":{},"期":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"以":{"docs":{},"原":{"docs":{},"子":{"docs":{},"方":{"docs":{},"式":{"docs":{},"将":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"值":{"docs":{},"。":{"docs":{},"此":{"docs":{},"操":{"docs":{},"作":{"docs":{},"具":{"docs":{},"有":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"读":{"docs":{},"和":{"docs":{},"写":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"。":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"减":{"docs":{},"到":{"docs":{},"了":{"0":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"释":{"docs":{},"放":{"docs":{},"成":{"docs":{},"功":{"docs":{},"了":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"没":{"docs":{},"有":{"docs":{},"释":{"docs":{},"放":{"docs":{},"成":{"docs":{},"功":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"没":{"docs":{},"有":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"接":{"docs":{},"收":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"等":{"docs":{},"到":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"被":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"消":{"docs":{},"费":{"docs":{},"了":{"docs":{},"才":{"docs":{},"返":{"docs":{},"回":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"话":{"docs":{},"跳":{"docs":{},"出":{"docs":{},"去":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}},"满":{"docs":{},"，":{"docs":{},"会":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"一":{"docs":{},"个":{"docs":{},"骨":{"docs":{},"干":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"，":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"进":{"docs":{},"来":{"docs":{},"就":{"docs":{},"让":{"docs":{},"他":{"docs":{},"不":{"docs":{},"停":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"（":{"docs":{},"很":{"docs":{},"残":{"docs":{},"酷":{"docs":{},"啊":{"docs":{},"）":{"docs":{},"，":{"docs":{},"干":{"docs":{},"完":{"docs":{},"刚":{"docs":{},"派":{"docs":{},"过":{"docs":{},"来":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"他":{"docs":{},"会":{"docs":{},"主":{"docs":{},"动":{"docs":{},"在":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"找":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"求":{"docs":{},"来":{"docs":{},"做":{"docs":{},"（":{"docs":{},"好":{"docs":{},"员":{"docs":{},"工":{"docs":{},"）":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"没":{"docs":{},"有":{"docs":{},"需":{"docs":{},"求":{"docs":{},"了":{"docs":{},"，":{"docs":{},"他":{"docs":{},"就":{"docs":{},"停":{"docs":{},"止":{"docs":{},"工":{"docs":{},"作":{"docs":{},"了":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"研":{"docs":{},"发":{"docs":{},"部":{"docs":{},"会":{"docs":{},"把":{"docs":{},"他":{"docs":{},"裁":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"裁":{"docs":{},"掉":{"docs":{},"后":{"docs":{},"发":{"docs":{},"现":{"docs":{},"骨":{"docs":{},"干":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"不":{"docs":{},"够":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"再":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"一":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"。":{"docs":{},"裁":{"docs":{},"掉":{"docs":{},"后":{"docs":{},"，":{"docs":{},"要":{"docs":{},"是":{"docs":{},"骨":{"docs":{},"干":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"还":{"docs":{},"够":{"docs":{},"就":{"docs":{},"不":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"了":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{},"队":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"排":{"docs":{},"在":{"docs":{},"了":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"就":{"docs":{},"通":{"docs":{},"知":{"docs":{},"等":{"docs":{},"待":{"docs":{},"着":{"docs":{},"的":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}},"骨":{"docs":{},"干":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"满":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"看":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"满":{"docs":{},"没":{"docs":{},"满":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"没":{"docs":{},"满":{"docs":{},"，":{"docs":{},"就":{"docs":{},"把":{"docs":{},"需":{"docs":{},"求":{"docs":{},"扔":{"docs":{},"进":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"里":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"满":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"看":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"达":{"docs":{},"到":{"docs":{},"上":{"docs":{},"限":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"达":{"docs":{},"到":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"对":{"docs":{},"产":{"docs":{},"品":{"docs":{},"说":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"需":{"docs":{},"求":{"docs":{},"我":{"docs":{},"们":{"docs":{},"做":{"docs":{},"不":{"docs":{},"了":{"docs":{},"，":{"docs":{},"没":{"docs":{},"资":{"docs":{},"源":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"达":{"docs":{},"到":{"docs":{},"，":{"docs":{},"就":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"一":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"，":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"进":{"docs":{},"来":{"docs":{},"就":{"docs":{},"让":{"docs":{},"他":{"docs":{},"不":{"docs":{},"停":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"干":{"docs":{},"完":{"docs":{},"刚":{"docs":{},"派":{"docs":{},"过":{"docs":{},"来":{"docs":{},"的":{"docs":{},"需":{"docs":{},"求":{"docs":{},"他":{"docs":{},"会":{"docs":{},"主":{"docs":{},"动":{"docs":{},"到":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"找":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"来":{"docs":{},"做":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"了":{"docs":{},"，":{"docs":{},"他":{"docs":{},"就":{"docs":{},"停":{"docs":{},"止":{"docs":{},"工":{"docs":{},"作":{"docs":{},"了":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"研":{"docs":{},"发":{"docs":{},"部":{"docs":{},"会":{"docs":{},"把":{"docs":{},"他":{"docs":{},"裁":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"裁":{"docs":{},"掉":{"docs":{},"后":{"docs":{},"发":{"docs":{},"现":{"docs":{},"骨":{"docs":{},"干":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"不":{"docs":{},"够":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"再":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"一":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"。":{"docs":{},"裁":{"docs":{},"掉":{"docs":{},"后":{"docs":{},"，":{"docs":{},"要":{"docs":{},"是":{"docs":{},"骨":{"docs":{},"干":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"还":{"docs":{},"够":{"docs":{},"就":{"docs":{},"不":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"了":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"高":{"docs":{},"速":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"填":{"docs":{},"充":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"位":{"docs":{},"置":{"docs":{},"任":{"docs":{},"然":{"docs":{},"是":{"docs":{},"下":{"docs":{},"次":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"时":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"从":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"从":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"始":{"docs":{},"终":{"docs":{},"得":{"docs":{},"不":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"会":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"存":{"docs":{},"在":{"docs":{},"锁":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"，":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"撤":{"docs":{},"销":{"docs":{},"的":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"原":{"docs":{},"来":{"docs":{},"是":{"docs":{},"a":{"docs":{},"，":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"b":{"docs":{},"，":{"docs":{},"又":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"a":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"查":{"docs":{},"时":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"它":{"docs":{},"的":{"docs":{},"值":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"却":{"docs":{},"变":{"docs":{},"化":{"docs":{},"了":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}},"a":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}},"程":{"docs":{},"序":{"docs":{},"是":{"docs":{},"正":{"docs":{},"确":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"将":{"docs":{},"具":{"docs":{},"有":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{},"—":{"docs":{},"—":{"docs":{},"即":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"与":{"docs":{},"该":{"docs":{},"程":{"docs":{},"序":{"docs":{},"在":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{},"这":{"docs":{},"对":{"docs":{},"于":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"来":{"docs":{},"说":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"极":{"docs":{},"强":{"docs":{},"的":{"docs":{},"保":{"docs":{},"证":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"人":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"方":{"docs":{},"腾":{"docs":{},"飞":{"docs":{},"老":{"docs":{},"师":{"docs":{},"的":{"docs":{},"《":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"艺":{"docs":{},"术":{"docs":{},"》":{"docs":{},"，":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"（":{"docs":{},"笔":{"docs":{},"者":{"docs":{},"名":{"docs":{},"号":{"docs":{},"）":{"docs":{},"自":{"docs":{},"感":{"docs":{},"太":{"docs":{},"菜":{"docs":{},"，":{"docs":{},"也":{"docs":{},"花":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"时":{"docs":{},"间":{"docs":{},"去":{"docs":{},"学":{"docs":{},"习":{"docs":{},"。":{"docs":{},"发":{"docs":{},"现":{"docs":{},"其":{"docs":{},"中":{"docs":{},"有":{"docs":{},"些":{"docs":{},"知":{"docs":{},"识":{"docs":{},"点":{"docs":{},"太":{"docs":{},"难":{"docs":{},"了":{"docs":{},"，":{"docs":{},"而":{"docs":{},"对":{"docs":{},"开":{"docs":{},"发":{"docs":{},"人":{"docs":{},"员":{"docs":{},"来":{"docs":{},"讲":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"太":{"docs":{},"大":{"docs":{},"意":{"docs":{},"义":{"docs":{},"。":{"docs":{},"一":{"docs":{},"些":{"docs":{},"内":{"docs":{},"容":{"docs":{},"也":{"docs":{},"讲":{"docs":{},"的":{"docs":{},"不":{"docs":{},"是":{"docs":{},"特":{"docs":{},"别":{"docs":{},"好":{"docs":{},"懂":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"你":{"docs":{},"本":{"docs":{},"地":{"docs":{},"安":{"docs":{},"装":{"docs":{},"的":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"里":{"docs":{},"边":{"docs":{},"改":{"docs":{},"源":{"docs":{},"码":{"docs":{},"，":{"docs":{},"加":{"docs":{},"注":{"docs":{},"释":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"源":{"docs":{},"码":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"到":{"docs":{},"项":{"docs":{},"目":{"docs":{},"中":{"docs":{},"，":{"docs":{},"配":{"docs":{},"置":{"docs":{},"项":{"docs":{},"目":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"为":{"docs":{},"我":{"docs":{},"们":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"的":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"能":{"docs":{},"愉":{"docs":{},"快":{"docs":{},"的":{"docs":{},"加":{"docs":{},"注":{"docs":{},"释":{"docs":{},"、":{"docs":{},"打":{"docs":{},"断":{"docs":{},"点":{"docs":{},"了":{"docs":{},"。":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"容":{"docs":{},"易":{"docs":{},"想":{"docs":{},"到":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"东":{"docs":{},"西":{"docs":{},"是":{"docs":{},"跟":{"docs":{},"着":{"docs":{},"线":{"docs":{},"程":{"docs":{},"走":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"也":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"都":{"docs":{},"是":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"。":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"严":{"docs":{},"谨":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}},"关":{"docs":{},"键":{"docs":{},"，":{"docs":{},"唤":{"docs":{},"醒":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"不":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"啥":{"docs":{},"的":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"读":{"docs":{},"。":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}},"微":{"docs":{},"信":{"docs":{},"赞":{"docs":{},"赏":{"docs":{},"码":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}},"支":{"docs":{},"付":{"docs":{},"宝":{"docs":{},"收":{"docs":{},"款":{"docs":{},"码":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}},"持":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.023972602739726026}},"大":{"docs":{},"雄":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{},"与":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}},"与":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}},"锁":{"docs":{},"降":{"docs":{},"级":{"docs":{},"：":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"获":{"docs":{},"取":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"、":{"docs":{},"获":{"docs":{},"取":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"再":{"docs":{},"释":{"docs":{},"放":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"次":{"docs":{},"序":{"docs":{},"，":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"能":{"docs":{},"够":{"docs":{},"降":{"docs":{},"级":{"docs":{},"为":{"docs":{},"读":{"docs":{},"锁":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}},"延":{"docs":{},"时":{"docs":{},"获":{"docs":{},"取":{"docs":{},"元":{"docs":{},"素":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}},"期":{"docs":{},"望":{"docs":{},"快":{"docs":{},"速":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"核":{"docs":{},"心":{"docs":{},"内":{"docs":{},"容":{"docs":{},"的":{"docs":{},"同":{"docs":{},"学":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}},"更":{"docs":{},"加":{"docs":{},"深":{"docs":{},"入":{"docs":{},"了":{"docs":{},"解":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"的":{"docs":{},"同":{"docs":{},"学":{"docs":{},"建":{"docs":{},"议":{"docs":{},"还":{"docs":{},"是":{"docs":{},"看":{"docs":{},"看":{"docs":{},"原":{"docs":{},"书":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"文":{"docs":{},"转":{"docs":{},"自":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"“":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"些":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"”":{"docs":{},",":{"docs":{},"共":{"docs":{},"同":{"docs":{},"学":{"docs":{},"习":{"docs":{},"探":{"docs":{},"讨":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"章":{"docs":{},"就":{"docs":{},"是":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"一":{"docs":{},"些":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"编":{"docs":{},"程":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"知":{"docs":{},"识":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"用":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"启":{"docs":{},"动":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"通":{"docs":{},"信":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"是":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"的":{"docs":{},"等":{"docs":{},"等":{"docs":{},"，":{"docs":{},"期":{"docs":{},"望":{"docs":{},"能":{"docs":{},"够":{"docs":{},"快":{"docs":{},"速":{"docs":{},"的":{"docs":{},"把":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"跑":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{"第02章-并发编程基础/":{"ref":"第02章-并发编程基础/","tf":0.25}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"源":{"docs":{},"文":{"docs":{},"件":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"第02章-并发编程基础/10-章小结.html":{"ref":"第02章-并发编程基础/10-章小结.html","tf":0.14285714285714285}}}}}}}}}}}}}}},"来":{"docs":{},"想":{"docs":{},"着":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"情":{"docs":{},"况":{"docs":{},"二":{"docs":{},"、":{"docs":{},"三":{"docs":{},"、":{"docs":{},"四":{"docs":{},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"分":{"docs":{},"支":{"docs":{},"走":{"docs":{},"完":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"没":{"docs":{},"必":{"docs":{},"要":{"docs":{},"了":{"docs":{},"，":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"类":{"docs":{},"似":{"docs":{},"这":{"docs":{},"样":{"docs":{},"梳":{"docs":{},"理":{"docs":{},"就":{"docs":{},"能":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"发":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"现":{"docs":{},"，":{"docs":{},"想":{"docs":{},"不":{"docs":{},"明":{"docs":{},"白":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"画":{"docs":{},"图":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"挺":{"docs":{},"有":{"docs":{},"趣":{"docs":{},"的":{"docs":{},"，":{"docs":{},"要":{"docs":{},"写":{"docs":{},"出":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"不":{"docs":{},"太":{"docs":{},"难":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"细":{"docs":{},"节":{"docs":{},"需":{"docs":{},"要":{"docs":{},"抠":{"docs":{},"的":{"docs":{},"很":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"。":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"在":{"docs":{},"做":{"docs":{},"面":{"docs":{},"试":{"docs":{},"准":{"docs":{},"备":{"docs":{},"，":{"docs":{},"期":{"docs":{},"望":{"docs":{},"快":{"docs":{},"速":{"docs":{},"复":{"docs":{},"习":{"docs":{},"的":{"docs":{},"同":{"docs":{},"学":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"一":{"docs":{},"章":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"总":{"docs":{},"结":{"docs":{},"思":{"docs":{},"维":{"docs":{},"导":{"docs":{},"图":{"docs":{},"，":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"回":{"docs":{},"顾":{"docs":{},"和":{"docs":{},"记":{"docs":{},"忆":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"操":{"docs":{},"作":{"docs":{},"必":{"docs":{},"须":{"docs":{},"等":{"docs":{},"待":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"不":{"docs":{},"能":{"docs":{},"继":{"docs":{},"续":{"docs":{},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"也":{"docs":{},"必":{"docs":{},"须":{"docs":{},"等":{"docs":{},"待":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"没":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"都":{"docs":{},"调":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"使":{"docs":{},"得":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"减":{"docs":{},"一":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"守":{"docs":{},"护":{"docs":{},"着":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"不":{"docs":{},"太":{"docs":{},"容":{"docs":{},"易":{"docs":{},"理":{"docs":{},"解":{"docs":{},"内":{"docs":{},"容":{"docs":{},"的":{"docs":{},"个":{"docs":{},"人":{"docs":{},"理":{"docs":{},"解":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}},"版":{"docs":{},"权":{"docs":{},"声":{"docs":{},"明":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}},"特":{"docs":{},"别":{"docs":{},"说":{"docs":{},"明":{"docs":{},"：":{"docs":{},"第":{"8":{"docs":{},"章":{"docs":{},"和":{"docs":{},"第":{"9":{"docs":{},"章":{"docs":{},"完":{"docs":{},"全":{"docs":{},"是":{"docs":{},"从":{"docs":{},"书":{"docs":{},"上":{"docs":{},"抄":{"docs":{},"过":{"docs":{},"来":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"不":{"docs":{},"太":{"docs":{},"熟":{"docs":{},"悉":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"将":{"docs":{},"一":{"docs":{},"些":{"docs":{},"自":{"docs":{},"己":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"很":{"docs":{},"中":{"docs":{},"要":{"docs":{},"的":{"docs":{},"东":{"docs":{},"西":{"docs":{},"抄":{"docs":{},"下":{"docs":{},"来":{"docs":{},"了":{"docs":{},"，":{"docs":{},"背":{"docs":{},"一":{"docs":{},"背":{"docs":{},"，":{"docs":{},"哈":{"docs":{},"哈":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}},"性":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}},"相":{"docs":{},"比":{"docs":{},"《":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"艺":{"docs":{},"术":{"docs":{},"》":{"docs":{},"，":{"docs":{},"本":{"docs":{},"书":{"docs":{},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"不":{"docs":{},"同":{"docs":{},"点":{"docs":{},"：":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}},"当":{"docs":{},"于":{"docs":{},"要":{"docs":{},"等":{"docs":{},"到":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"才":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}},"说":{"docs":{},"明":{"docs":{"./":{"ref":"./","tf":0.023809523809523808},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}},"实":{"docs":{},"话":{"docs":{},"，":{"docs":{},"我":{"docs":{},"已":{"docs":{},"经":{"docs":{},"忘":{"docs":{},"了":{"docs":{},"跳":{"docs":{},"表":{"docs":{},"了":{"docs":{},"，":{"docs":{},"回":{"docs":{},"头":{"docs":{},"复":{"docs":{},"习":{"docs":{},"下":{"docs":{},"补":{"docs":{},"充":{"docs":{},"。":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},":":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}},"谁":{"docs":{},"适":{"docs":{},"合":{"docs":{},"读":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}},"调":{"docs":{},"整":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"内":{"docs":{},"容":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"于":{"docs":{},"更":{"docs":{},"加":{"docs":{},"容":{"docs":{},"易":{"docs":{},"理":{"docs":{},"解":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"调":{"docs":{},"这":{"docs":{},"一":{"docs":{},"句":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"父":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"能":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"值":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"后":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"状":{"docs":{},"态":{"docs":{},"由":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"变":{"docs":{},"为":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"放":{"docs":{},"置":{"docs":{},"到":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"式":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"的":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"指":{"docs":{},"定":{"docs":{},"线":{"docs":{},"程":{"docs":{},"结":{"docs":{},"束":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"的":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"或":{"docs":{},"者":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"下":{"docs":{},"方":{"docs":{},"法":{"docs":{},"之":{"docs":{},"一":{"docs":{},"会":{"docs":{},"进":{"docs":{},"入":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"闭":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"方":{"docs":{},"法":{"docs":{},"后":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"载":{"docs":{},"请":{"docs":{},"在":{"docs":{},"醒":{"docs":{},"目":{"docs":{},"位":{"docs":{},"置":{"docs":{},"注":{"docs":{},"明":{"docs":{},"如":{"docs":{},"下":{"docs":{},"信":{"docs":{},"息":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.023809523809523808}}}}}}}}}}}}}}}}},"e":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0228310502283105}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.06896551724137931}},":":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.06896551724137931}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}},")":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.047619047619047616},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0136986301369863},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},")":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":5.041095890410959}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"第":{"1":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"里":{"docs":{},"的":{"docs":{},"值":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}}}},"docs":{}}},"b":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}},"用":{"docs":{},"于":{"docs":{},"进":{"docs":{},"行":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{},"它":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"同":{"docs":{},"步":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"同":{"docs":{},"步":{"docs":{},"点":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"交":{"docs":{},"换":{"docs":{},"彼":{"docs":{},"此":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"通":{"docs":{},"过":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"交":{"docs":{},"换":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"一":{"docs":{},"直":{"docs":{},"等":{"docs":{},"待":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"也":{"docs":{},"执":{"docs":{},"行":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"到":{"docs":{},"达":{"docs":{},"同":{"docs":{},"步":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"交":{"docs":{},"换":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"将":{"docs":{},"本":{"docs":{},"线":{"docs":{},"程":{"docs":{},"生":{"docs":{},"产":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"对":{"docs":{},"方":{"docs":{},"。":{"docs":{},"(":{"docs":{},"原":{"docs":{},"文":{"docs":{},"复":{"docs":{},"制":{"docs":{},")":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.024},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"用":{"docs":{},"于":{"docs":{},"提":{"docs":{},"交":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"无":{"docs":{},"法":{"docs":{},"判":{"docs":{},"断":{"docs":{},"任":{"docs":{},"务":{"docs":{},"是":{"docs":{},"否":{"docs":{},"被":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"执":{"docs":{},"行":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}},"o":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":5.003861003861004}},")":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.007722007722007722}}}}}}}},"框":{"docs":{},"架":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"共":{"docs":{},"有":{"docs":{},"三":{"docs":{},"大":{"docs":{},"成":{"docs":{},"员":{"docs":{},"+":{"docs":{},"一":{"docs":{},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"及":{"docs":{},"其":{"docs":{},"体":{"docs":{},"系":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.00909090909090909}}},"y":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}}}}}},"[":{"docs":{},"]":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}},"q":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},"前":{"docs":{},"面":{"docs":{},"分":{"docs":{},"析":{"docs":{},"过":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"入":{"docs":{},"队":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}},",":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},":":{"2":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}},"docs":{}}}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.06896551724137931}}}}},"u":{"docs":{},"r":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}},"r":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}},"l":{"docs":{},"s":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}},"e":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.005112474437627812},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.015706806282722512},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.010238907849829351}}},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"s":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}},"\"":{"docs":{},"）":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.024},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.032719836400818},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.02575107296137339},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.013793103448275862},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.02247191011235955},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.045662100456621},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.020477815699658702},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}},"i":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"域":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}},"写":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"：":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":5.066666666666666}}}}}},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"：":{"docs":{},"用":{"docs":{},"于":{"docs":{},"创":{"docs":{},"建":{"docs":{},"固":{"docs":{},"定":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"）":{"docs":{},"指":{"docs":{},"令":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"指":{"docs":{},"令":{"docs":{},"来":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"特":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"查":{"docs":{},"看":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"源":{"docs":{},"码":{"docs":{},"并":{"docs":{},"在":{"docs":{},"源":{"docs":{},"码":{"docs":{},"中":{"docs":{},"写":{"docs":{},"注":{"docs":{},"释":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"2":{"5":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.011363636363636364},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.05555555555555555},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.017382413087934562},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.031413612565445025},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.010344827586206896},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.011299435028248588},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.011945392491467578},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.06896551724137931}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.032},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.020202020202020204},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.013793103448275862},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.06349206349206349},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0136986301369863},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.010344827586206896}}}}}}}}}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.010344827586206896}}}}},"i":{"docs":{},"f":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}},"g":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}},")":{"docs":{},":":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"此":{"docs":{},"信":{"docs":{},"号":{"docs":{},"量":{"docs":{},"中":{"docs":{},"当":{"docs":{},"前":{"docs":{},"可":{"docs":{},"用":{"docs":{},"的":{"docs":{},"许":{"docs":{},"可":{"docs":{},"证":{"docs":{},"数":{"docs":{},"。":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"正":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"获":{"docs":{},"取":{"docs":{},"许":{"docs":{},"可":{"docs":{},"证":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"。":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.015909090909090907}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"父":{"docs":{},"线":{"docs":{},"程":{"docs":{},"有":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.022222222222222223}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}},";":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"：":{"docs":{},"当":{"docs":{},"前":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"独":{"docs":{},"占":{"docs":{},"模":{"docs":{},"式":{"docs":{},"下":{"docs":{},"被":{"docs":{},"线":{"docs":{},"程":{"docs":{},"占":{"docs":{},"用":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{},"判":{"docs":{},"断":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"否":{"docs":{},"被":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0136986301369863}}}}}}}}}},"[":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"密":{"docs":{},"集":{"docs":{},"型":{"docs":{},"：":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"=":{"2":{"docs":{},"*":{"docs":{},"核":{"docs":{},"心":{"docs":{},"数":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}},"docs":{}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}},"从":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"找":{"docs":{},"的":{"docs":{},"那":{"docs":{},"两":{"docs":{},"个":{"docs":{},"类":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"下":{"docs":{},"来":{"docs":{},"在":{"docs":{},"你":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"工":{"docs":{},"程":{"docs":{},"里":{"docs":{},"边":{"docs":{},"手":{"docs":{},"动":{"docs":{},"创":{"docs":{},"建":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"下":{"docs":{},"载":{"docs":{},",":{"docs":{},"免":{"docs":{},"得":{"docs":{},"找":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"是":{"docs":{},"获":{"docs":{},"得":{"docs":{},"了":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"跳":{"docs":{},"出":{"docs":{},"来":{"docs":{},"表":{"docs":{},"明":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"可":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"往":{"docs":{},"前":{"docs":{},"找":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"取":{"docs":{},"消":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"边":{"docs":{},"分":{"docs":{},"析":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"选":{"docs":{},"型":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"应":{"docs":{},"该":{"docs":{},"要":{"docs":{},"优":{"docs":{},"先":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"到":{"docs":{},"指":{"docs":{},"令":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"写":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}},"工":{"docs":{},"欲":{"docs":{},"善":{"docs":{},"其":{"docs":{},"事":{"docs":{},"，":{"docs":{},"必":{"docs":{},"先":{"docs":{},"利":{"docs":{},"其":{"docs":{},"器":{"docs":{},"。":{"docs":{},"研":{"docs":{},"究":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"相":{"docs":{},"关":{"docs":{},"原":{"docs":{},"理":{"docs":{},"会":{"docs":{},"经":{"docs":{},"常":{"docs":{},"看":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"源":{"docs":{},"码":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"在":{"docs":{},"开":{"docs":{},"发":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"调":{"docs":{},"试":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"源":{"docs":{},"码":{"docs":{},"。":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"作":{"docs":{},"队":{"docs":{},"列":{"docs":{},"也":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"有":{"docs":{},"界":{"docs":{},"队":{"docs":{},"列":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"界":{"docs":{},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"本":{"docs":{},"来":{"docs":{},"想":{"docs":{},"着":{"docs":{},"把":{"docs":{},"我":{"docs":{},"搞":{"docs":{},"好":{"docs":{},"的":{"docs":{},"项":{"docs":{},"目":{"docs":{},"放":{"docs":{},"到":{"docs":{},"到":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"上":{"docs":{},"边":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"不":{"docs":{},"现":{"docs":{},"实":{"docs":{},"，":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"代":{"docs":{},"码":{"docs":{},"太":{"docs":{},"多":{"docs":{},"了":{"docs":{},"，":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"时":{"docs":{},"太":{"docs":{},"费":{"docs":{},"时":{"docs":{},"间":{"docs":{},"和":{"docs":{},"性":{"docs":{},"能":{"docs":{},"了":{"docs":{},"。":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"们":{"docs":{},"发":{"docs":{},"现":{"docs":{},"，":{"docs":{},"入":{"docs":{},"队":{"docs":{},"其":{"docs":{},"实":{"docs":{},"挺":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"，":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"了":{"docs":{},"。":{"docs":{},"c":{"docs":{},"a":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}},"规":{"docs":{},"定":{"docs":{},"，":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"0":{"docs":{},"表":{"docs":{},"示":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"占":{"docs":{},"用":{"docs":{},"，":{"docs":{},"非":{"0":{"docs":{},"表":{"docs":{},"示":{"docs":{},"被":{"docs":{},"占":{"docs":{},"用":{"docs":{},"了":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}},"拿":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"都":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"接":{"docs":{},"口":{"docs":{},"拿":{"docs":{},"的":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"入":{"docs":{},"队":{"docs":{},"后":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"并":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"，":{"docs":{},"注":{"docs":{},"释":{"docs":{},"也":{"docs":{},"说":{"docs":{},"了":{"docs":{},"，":{"docs":{},"改":{"docs":{},"变":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"失":{"docs":{},"败":{"docs":{},"了":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"k":{"docs":{},"的":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"是":{"docs":{},"加":{"docs":{},"了":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"吗":{"docs":{},"，":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"就":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"内":{"docs":{},"存":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"了":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"复":{"docs":{},"制":{"docs":{},"一":{"docs":{},"份":{"docs":{},"改":{"docs":{},"变":{"docs":{},"引":{"docs":{},"用":{"docs":{},"呢":{"docs":{},"，":{"docs":{},"请":{"docs":{},"注":{"docs":{},"意":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"元":{"docs":{},"素":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"引":{"docs":{},"用":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"启":{"docs":{},"动":{"docs":{},"了":{"3":{"0":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"只":{"docs":{},"会":{"docs":{},"有":{"docs":{},"三":{"docs":{},"个":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"三":{"docs":{},"个":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"一":{"docs":{},"会":{"docs":{},"儿":{"docs":{},"再":{"docs":{},"输":{"docs":{},"出":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"带":{"docs":{},"给":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"。":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"特":{"docs":{},"么":{"docs":{},"才":{"docs":{},"知":{"docs":{},"道":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"有":{"docs":{},"个":{"docs":{},"快":{"docs":{},"捷":{"docs":{},"键":{"docs":{},"叫":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"+":{"docs":{},"f":{"1":{"2":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"看":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"大":{"docs":{},"概":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"是":{"docs":{},"会":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"从":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"移":{"docs":{},"除":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"源":{"docs":{},"码":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"让":{"docs":{},"我":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"，":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"，":{"docs":{},"搞":{"docs":{},"个":{"docs":{},"定":{"docs":{},"时":{"docs":{},"任":{"docs":{},"务":{"docs":{},",":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"用":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"式":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"来":{"docs":{},"做":{"docs":{},"。":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}},"第":{"0":{"1":{"docs":{},"章":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":5.0344827586206895}}}},"2":{"docs":{},"章":{"docs":{"第02章-并发编程基础/":{"ref":"第02章-并发编程基础/","tf":5.25}}}},"3":{"docs":{},"章":{"docs":{"第03章-锁/":{"ref":"第03章-锁/","tf":5}}}},"4":{"docs":{},"章":{"docs":{"第04章-并发容器/":{"ref":"第04章-并发容器/","tf":5}}}},"5":{"docs":{},"章":{"docs":{"第05章-阻塞队列/":{"ref":"第05章-阻塞队列/","tf":5}}}},"6":{"docs":{},"章":{"docs":{"第06章-线程池与Executor框架/":{"ref":"第06章-线程池与Executor框架/","tf":5}}}},"8":{"docs":{},"章":{"docs":{"第08章-Java并发机制的底层实现原理/":{"ref":"第08章-Java并发机制的底层实现原理/","tf":5}}}},"9":{"docs":{},"章":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":5}}}},"docs":{}},"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"标":{"docs":{},"识":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},"三":{"docs":{},"个":{"docs":{},"，":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"与":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"则":{"docs":{},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"是":{"docs":{},"个":{"docs":{},"偏":{"docs":{},"移":{"docs":{},"量":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"是":{"docs":{},"你":{"docs":{},"期":{"docs":{},"望":{"docs":{},"他":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"值":{"docs":{},"才":{"docs":{},"改":{"docs":{},"，":{"docs":{},"第":{"docs":{},"四":{"docs":{},"个":{"docs":{},"是":{"docs":{},"你":{"docs":{},"想":{"docs":{},"改":{"docs":{},"成":{"docs":{},"什":{"docs":{},"么":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"坑":{"docs":{},"，":{"docs":{},"大":{"docs":{},"家":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"搞":{"docs":{},"好":{"docs":{},"了":{"docs":{},"就":{"docs":{},"不":{"docs":{},"要":{"docs":{},"随":{"docs":{},"便":{"docs":{},"修":{"docs":{},"改":{"docs":{},"m":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"了":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"整":{"docs":{},"个":{"docs":{},"又":{"docs":{},"要":{"docs":{},"重":{"docs":{},"新":{"docs":{},"编":{"docs":{},"译":{"docs":{},"，":{"docs":{},"非":{"docs":{},"常":{"docs":{},"慢":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},"更":{"docs":{},"狠":{"docs":{},"的":{"docs":{},"，":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"指":{"docs":{},"定":{"docs":{},"线":{"docs":{},"程":{"docs":{},"工":{"docs":{},"厂":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}},"是":{"docs":{},"上":{"docs":{},"面":{"docs":{},"那":{"docs":{},"个":{"docs":{},"m":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"y":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"说":{"docs":{},"两":{"docs":{},"嘴":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"的":{"docs":{},"图":{"docs":{},"我":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"不":{"docs":{},"少":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"图":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"也":{"docs":{},"有":{"docs":{},"些":{"docs":{},"出":{"docs":{},"入":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"多":{"docs":{},"半":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"和":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"版":{"docs":{},"本":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"导":{"docs":{},"致":{"docs":{},"的":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"八":{"docs":{},"成":{"docs":{},"、":{"docs":{},"没":{"docs":{},"准":{"docs":{},"、":{"docs":{},"大":{"docs":{},"概":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"太":{"docs":{},"大":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"。":{"docs":{},"此":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"原":{"docs":{},"谅":{"docs":{},"色":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"紫":{"docs":{},"色":{"docs":{},"是":{"docs":{},"引":{"docs":{},"起":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"。":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"就":{"docs":{},"是":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}},"也":{"docs":{},"很":{"docs":{},"有":{"docs":{},"趣":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"在":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"他":{"docs":{},"是":{"docs":{},"在":{"docs":{},"你":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"去":{"docs":{},"调":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"他":{"docs":{},"会":{"docs":{},"调":{"docs":{},"你":{"docs":{},"重":{"docs":{},"写":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"进":{"docs":{},"去":{"docs":{},"并":{"docs":{},"且":{"docs":{},"返":{"docs":{},"回":{"docs":{},"给":{"docs":{},"你":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{},"容":{"docs":{},"易":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"断":{"docs":{},"的":{"docs":{},"从":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"取":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"没":{"docs":{},"任":{"docs":{},"务":{"docs":{},"了":{"docs":{},"跳":{"docs":{},"出":{"docs":{},"来":{"docs":{},"。":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"就":{"docs":{},"是":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"如":{"docs":{},"何":{"docs":{},"被":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"讲":{"docs":{},"的":{"docs":{},"出":{"docs":{},"队":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"他":{"docs":{},"会":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"是":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"说":{"docs":{},"中":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"了":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"用":{"docs":{},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}}}},"用":{"docs":{},"了":{"docs":{},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}}},"测":{"docs":{},"试":{"docs":{},"例":{"docs":{},"子":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"0":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},"docs":{}}}}}}}},"是":{"docs":{},"公":{"docs":{},"平":{"docs":{},"性":{"docs":{},"的":{"docs":{},"保":{"docs":{},"证":{"docs":{},"，":{"docs":{},"他":{"docs":{},"记":{"docs":{},"录":{"docs":{},"了":{"docs":{},"谁":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}},"书":{"docs":{},"上":{"docs":{},"列":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"保":{"docs":{},"持":{"docs":{},"完":{"docs":{},"成":{"docs":{},"性":{"docs":{},"，":{"docs":{},"也":{"docs":{},"简":{"docs":{},"单":{"docs":{},"列":{"docs":{},"一":{"docs":{},"下":{"docs":{},"：":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"思":{"docs":{},"考":{"docs":{},"下":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}},"我":{"docs":{},"没":{"docs":{},"看":{"docs":{},"，":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"必":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"多":{"docs":{},"了":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"从":{"docs":{},"队":{"docs":{},"头":{"docs":{},"入":{"docs":{},"队":{"docs":{},"，":{"docs":{},"从":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"出":{"docs":{},"队":{"docs":{},"。":{"docs":{},"有":{"docs":{},"空":{"docs":{},"再":{"docs":{},"看":{"docs":{},"看":{"docs":{},"补":{"docs":{},"充":{"docs":{},"下":{"docs":{"第04章-并发容器/03-ConcurrentLinkedDeque.html":{"ref":"第04章-并发容器/03-ConcurrentLinkedDeque.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"玩":{"docs":{},"意":{"docs":{},"儿":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"继":{"docs":{},"承":{"docs":{},"了":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"值":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}},"q":{"docs":{},"是":{"docs":{},"他":{"docs":{},"内":{"docs":{},"部":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"是":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}},"初":{"docs":{},"看":{"docs":{},"了":{"docs":{},"下":{"docs":{},"，":{"docs":{},"没":{"docs":{},"太":{"docs":{},"明":{"docs":{},"白":{"docs":{},"，":{"docs":{},"后":{"docs":{},"续":{"docs":{},"再":{"docs":{},"看":{"docs":{},"看":{"docs":{},"吧":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}},"例":{"docs":{},"子":{"docs":{},"里":{"docs":{},"边":{"docs":{},"，":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"2":{"docs":{},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"2":{"docs":{},"，":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}},"c":{"docs":{},"里":{"docs":{},"边":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"现":{"docs":{},"在":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}},"跟":{"docs":{},"我":{"docs":{},"们":{"docs":{},"平":{"docs":{},"时":{"docs":{},"理":{"docs":{},"解":{"docs":{},"的":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"还":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"体":{"docs":{},"会":{"docs":{},"下":{"docs":{},"，":{"docs":{},"他":{"docs":{},"这":{"docs":{},"个":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"时":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"他":{"docs":{},"不":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"包":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"锁":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"写":{"docs":{},"了":{"docs":{},"非":{"docs":{},"常":{"docs":{},"详":{"docs":{},"细":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"的":{"docs":{},"截":{"docs":{},"图":{"docs":{},"以":{"docs":{},"及":{"docs":{},"对":{"docs":{},"一":{"docs":{},"些":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第01章-在idea怎么调试jdk源码/":{"ref":"第01章-在idea怎么调试jdk源码/","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"非":{"docs":{},"常":{"docs":{},"好":{"docs":{},"，":{"docs":{},"建":{"docs":{},"议":{"docs":{},"看":{"docs":{},"一":{"docs":{},"下":{"docs":{},"。":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}},"是":{"docs":{},"最":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"他":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"归":{"docs":{},"纳":{"docs":{},"一":{"docs":{},"下":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"数":{"docs":{},"组":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"存":{"docs":{},"储":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}},"里":{"docs":{},"说":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"任":{"docs":{},"务":{"docs":{},"代":{"docs":{},"码":{"docs":{},"举":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}},"列":{"docs":{},"个":{"docs":{},"标":{"docs":{},"题":{"docs":{},"，":{"docs":{},"后":{"docs":{},"边":{"docs":{},"说":{"docs":{},"到":{"docs":{},"了":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"就":{"docs":{},"明":{"docs":{},"白":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"了":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"完":{"docs":{},"后":{"docs":{},"边":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"再":{"docs":{},"回":{"docs":{},"过":{"docs":{},"头":{"docs":{},"看":{"docs":{},"看":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"只":{"docs":{},"想":{"docs":{},"把":{"docs":{},"这":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"里":{"docs":{},"一":{"docs":{},"个":{"docs":{},"图":{"docs":{},"改":{"docs":{},"一":{"docs":{},"下":{"docs":{},"贴":{"docs":{},"到":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"细":{"docs":{},"节":{"docs":{},"部":{"docs":{},"分":{"docs":{},"大":{"docs":{},"家":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{},"上":{"docs":{},"述":{"docs":{},"这":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"。":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"了":{"docs":{},"很":{"docs":{},"久":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"引":{"docs":{},"用":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"没":{"docs":{},"找":{"docs":{},"到":{"docs":{},"，":{"docs":{},"奇":{"docs":{},"怪":{"docs":{},"（":{"docs":{},"在":{"docs":{},"后":{"docs":{},"边":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"进":{"docs":{},"入":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"后":{"docs":{},"就":{"docs":{},"会":{"docs":{},"开":{"docs":{},"始":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"了":{"docs":{},"就":{"docs":{},"会":{"docs":{},"改":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"自":{"docs":{},"己":{"docs":{},"）":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"毫":{"docs":{},"无":{"docs":{},"难":{"docs":{},"度":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"了":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}},"你":{"docs":{},"加":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"一":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}},"先":{"docs":{},"直":{"docs":{},"接":{"docs":{},"这":{"docs":{},"么":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"一":{"docs":{},"把":{"docs":{},"，":{"docs":{},"不":{"docs":{},"行":{"docs":{},"再":{"docs":{},"e":{"docs":{},"n":{"docs":{},"q":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"加":{"docs":{},"速":{"docs":{},"吧":{"docs":{},"，":{"docs":{},"本":{"docs":{},"来":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"e":{"docs":{},"n":{"docs":{},"q":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"e":{"docs":{},"n":{"docs":{},"q":{"docs":{},"里":{"docs":{},"边":{"docs":{},"有":{"docs":{},"自":{"docs":{},"旋":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"贴":{"docs":{},"一":{"docs":{},"下":{"docs":{},"网":{"docs":{},"上":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"描":{"docs":{},"述":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091}}}}}}}}}}}},"最":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"【":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"“":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"”":{"docs":{},"】":{"docs":{},"，":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"是":{"docs":{},"用":{"docs":{},"了":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"喻":{"docs":{},"来":{"docs":{},"描":{"docs":{},"述":{"docs":{},"一":{"docs":{},"下":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"中":{"docs":{},"间":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"名":{"docs":{},"词":{"docs":{},"你":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"是":{"docs":{},"太":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"，":{"docs":{},"后":{"docs":{},"边":{"docs":{},"源":{"docs":{},"码":{"docs":{},"解":{"docs":{},"析":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"会":{"docs":{},"讲":{"docs":{},"到":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"是":{"docs":{},"指":{"docs":{},"广":{"docs":{},"义":{"docs":{},"上":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"对":{"docs":{},"常":{"docs":{},"用":{"docs":{},"同":{"docs":{},"步":{"docs":{},"原":{"docs":{},"语":{"docs":{},"（":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"、":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"和":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"）":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"意":{"docs":{},"味":{"docs":{},"者":{"docs":{},"他":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"中":{"docs":{},"断":{"docs":{},"后":{"docs":{},"把":{"docs":{},"异":{"docs":{},"常":{"docs":{},"抛":{"docs":{},"给":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"，":{"docs":{},"让":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"自":{"docs":{},"己":{"docs":{},"处":{"docs":{},"理":{"docs":{},".":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"着":{"docs":{},"，":{"docs":{},"提":{"docs":{},"交":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"等":{"docs":{},"这":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"被":{"docs":{},"消":{"docs":{},"费":{"docs":{},"（":{"docs":{},"可":{"docs":{},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"线":{"docs":{},"程":{"docs":{},"消":{"docs":{},"费":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"被":{"docs":{},"老":{"docs":{},"线":{"docs":{},"程":{"docs":{},"消":{"docs":{},"费":{"docs":{},"）":{"docs":{},"，":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"才":{"docs":{},"进":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"；":{"docs":{},"线":{"docs":{},"程":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"获":{"docs":{},"取":{"docs":{},"任":{"docs":{},"务":{"docs":{},"时":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"到":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"提":{"docs":{},"交":{"docs":{},"进":{"docs":{},"去":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"他":{"docs":{},"通":{"docs":{},"常":{"docs":{},"不":{"docs":{},"会":{"docs":{},"因":{"docs":{},"为":{"docs":{},"任":{"docs":{},"务":{"docs":{},"数":{"docs":{},"量":{"docs":{},"过":{"docs":{},"多":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"父":{"docs":{},"线":{"docs":{},"程":{"docs":{},"传":{"docs":{},"到":{"docs":{},"子":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"子":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"父":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"段":{"docs":{},"对":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"代":{"docs":{},"码":{"docs":{},"少":{"docs":{},"，":{"docs":{},"注":{"docs":{},"释":{"docs":{},"贼":{"docs":{},"多":{"docs":{},"，":{"docs":{},"看":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"惊":{"docs":{},"奇":{"docs":{},"的":{"docs":{},"发":{"docs":{},"现":{"docs":{},"，":{"docs":{},"《":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"艺":{"docs":{},"术":{"docs":{},"》":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"跟":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"注":{"docs":{},"释":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"从":{"docs":{},"书":{"docs":{},"上":{"docs":{},"借":{"docs":{},"鉴":{"docs":{},"（":{"docs":{},"抄":{"docs":{},"书":{"docs":{},"不":{"docs":{},"叫":{"docs":{},"抄":{"docs":{},"，":{"docs":{},"叫":{"docs":{},"借":{"docs":{},"鉴":{"docs":{},"）":{"docs":{},"过":{"docs":{},"来":{"docs":{},"的":{"docs":{},"，":{"docs":{},"来":{"docs":{},"个":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"更":{"docs":{},"加":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"一":{"docs":{},"些":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"执":{"docs":{},"行":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"找":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}},"者":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"大":{"docs":{},"家":{"docs":{},"可":{"docs":{},"以":{"docs":{},"体":{"docs":{},"会":{"docs":{},"下":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}},"没":{"docs":{},"啥":{"docs":{},"好":{"docs":{},"说":{"docs":{},"的":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}},"样":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"构":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"访":{"docs":{},"问":{"docs":{},"时":{"docs":{},"只":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"住":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"而":{"docs":{},"不":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"住":{"docs":{},"整":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"了":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"写":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"继":{"docs":{},"续":{"docs":{},"读":{"docs":{},"旧":{"docs":{},"的":{"docs":{},"容":{"docs":{},"器":{"docs":{},"里":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"不":{"docs":{},"会":{"docs":{},"变":{"docs":{},"，":{"docs":{},"写":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"读":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"读":{"docs":{},"到":{"docs":{},"最":{"docs":{},"新":{"docs":{},"的":{"docs":{},"了":{"docs":{},"。":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"达":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"校":{"docs":{},"对":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}}}}}},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"终":{"docs":{},"止":{"docs":{},"线":{"docs":{},"程":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"很":{"docs":{},"难":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"我":{"docs":{},"是":{"docs":{},"画":{"docs":{},"图":{"docs":{},"来":{"docs":{},"理":{"docs":{},"解":{"docs":{},"的":{"docs":{},"，":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"要":{"docs":{},"明":{"docs":{},"白":{"docs":{},"到":{"docs":{},"底":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"次":{"docs":{},"序":{"docs":{},"才":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"的":{"docs":{},"i":{"docs":{},"f":{"docs":{},"，":{"docs":{},"我":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"标":{"docs":{},"注":{"docs":{},"了":{"docs":{},"几":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"试":{"docs":{},"图":{"docs":{},"用":{"docs":{},"文":{"docs":{},"字":{"docs":{},"来":{"docs":{},"阐":{"docs":{},"述":{"docs":{},"我":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},"会":{"docs":{},"在":{"docs":{},"启":{"docs":{},"动":{"docs":{},"后":{"3":{"docs":{},"秒":{"docs":{},"开":{"docs":{},"始":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"每":{"docs":{},"隔":{"1":{"0":{"docs":{},"+":{"1":{"docs":{},"秒":{"docs":{},"输":{"docs":{},"出":{"docs":{},"一":{"docs":{},"次":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}},"docs":{}},"秒":{"docs":{},"输":{"docs":{},"出":{"docs":{},"一":{"docs":{},"次":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}},"和":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"基":{"docs":{},"础":{"docs":{"第02章-并发编程基础/":{"ref":"第02章-并发编程基础/","tf":5.25}}}},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"性":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}}}},"容":{"docs":{},"器":{"docs":{"第04章-并发容器/":{"ref":"第04章-并发容器/","tf":5.333333333333333}},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"看":{"docs":{},"的":{"docs":{},"很":{"docs":{},"少":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"把":{"docs":{},"书":{"docs":{},"上":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"提":{"docs":{},"炼":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"有":{"docs":{},"疑":{"docs":{},"问":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"找":{"docs":{},"一":{"docs":{},"些":{"docs":{},"资":{"docs":{},"料":{"docs":{},"作":{"docs":{},"为":{"docs":{},"补":{"docs":{},"充":{"docs":{},"。":{"docs":{"第04章-并发容器/":{"ref":"第04章-并发容器/","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"是":{"docs":{},"每":{"docs":{},"次":{"docs":{},"出":{"docs":{},"队":{"docs":{},"时":{"docs":{},"都":{"docs":{},"更":{"docs":{},"新":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"当":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"里":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"里":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"会":{"docs":{},"更":{"docs":{},"新":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"里":{"docs":{},"没":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"出":{"docs":{},"队":{"docs":{},"操":{"docs":{},"作":{"docs":{},"才":{"docs":{},"会":{"docs":{},"更":{"docs":{},"新":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"做":{"docs":{},"法":{"docs":{},"也":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"h":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"减":{"docs":{},"少":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"更":{"docs":{},"新":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"提":{"docs":{},"高":{"docs":{},"出":{"docs":{},"队":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"能":{"docs":{},"够":{"docs":{},"把":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"程":{"docs":{},"序":{"docs":{},"跑":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"成":{"docs":{},"就":{"docs":{},"感":{"docs":{},"，":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"些":{"docs":{},"信":{"docs":{},"心":{"docs":{},"吧":{"docs":{},"。":{"docs":{"第02章-并发编程基础/":{"ref":"第02章-并发编程基础/","tf":0.25}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"他":{"docs":{},"是":{"docs":{},"双":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},",":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"分":{"docs":{},"成":{"docs":{},"一":{"docs":{},"段":{"docs":{},"一":{"docs":{},"段":{"docs":{},"地":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"给":{"docs":{},"每":{"docs":{},"一":{"docs":{},"段":{"docs":{},"数":{"docs":{},"据":{"docs":{},"配":{"docs":{},"一":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"占":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"访":{"docs":{},"问":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"段":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"段":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"也":{"docs":{},"能":{"docs":{},"被":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"要":{"docs":{},"定":{"docs":{},"义":{"docs":{},"你":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"看":{"docs":{},"骨":{"docs":{},"干":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"满":{"docs":{},"了":{"docs":{},"没":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"几":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"同":{"docs":{},"时":{"docs":{},"进":{"docs":{},"来":{"docs":{},"了":{"docs":{},"，":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"一":{"docs":{},"些":{"docs":{},"共":{"docs":{},"享":{"docs":{},"状":{"docs":{},"态":{"docs":{},"出":{"docs":{},"问":{"docs":{},"题":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"（":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"）":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}},"s":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"连":{"docs":{},"接":{"docs":{},"数":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"用":{"docs":{},"于":{"docs":{},"提":{"docs":{},"交":{"docs":{},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"首":{"docs":{},"先":{"docs":{},"将":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"或":{"docs":{},"者":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"包":{"docs":{},"装":{"docs":{},"成":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"调":{"docs":{},"用":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"是":{"docs":{},"函":{"docs":{},"数":{"docs":{},"式":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"号":{"docs":{},"'":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"'":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}},"众":{"docs":{},"号":{"docs":{},"'":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"'":{"docs":{},"\"":{"docs":{},"+":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"走":{"docs":{},"\"":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}},"钱":{"docs":{},"不":{"docs":{},"够":{"docs":{},"了":{"docs":{},"，":{"docs":{},"去":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"号":{"docs":{},"‘":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"’":{"docs":{},"吧":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"开":{"docs":{},"始":{"docs":{},"处":{"docs":{},"理":{"docs":{},"任":{"docs":{},"务":{"docs":{},"了":{"docs":{},"\"":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}},"任":{"docs":{},"务":{"docs":{},"\"":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"被":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"了":{"docs":{},"哦":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"“":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"”":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},":":{"docs":{},"\"":{"docs":{},"+":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}},"b":{"docs":{},":":{"docs":{},"\"":{"docs":{},"+":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"1":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.03225806451612903},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}},"+":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}},"\"":{"docs":{},":":{"docs":{},"发":{"docs":{},"出":{"docs":{},"通":{"docs":{},"知":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}},"：":{"docs":{},"等":{"docs":{},"待":{"docs":{},"通":{"docs":{},"知":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"加":{"docs":{},"在":{"docs":{},"普":{"docs":{},"通":{"docs":{},"方":{"docs":{},"法":{"docs":{},"上":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.00408997955010225},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.008583690987124463}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.016129032258064516},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.0136986301369863},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016},"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.058823529411764705},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":5.005181347150259}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"为":{"docs":{},"(":{"docs":{},")":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"做":{"docs":{},"到":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}},"是":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"获":{"docs":{},"取":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"和":{"docs":{},"固":{"docs":{},"定":{"docs":{},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"手":{"docs":{},"动":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"释":{"docs":{},"放":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"灵":{"docs":{},"活":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"：":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"存":{"docs":{},"在":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"里":{"docs":{},"的":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},"e":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"存":{"docs":{},"储":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"docs":{}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"docs":{}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"docs":{}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"docs":{}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}},"e":{"docs":{},"t":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.03571428571428571},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"(":{"docs":{},"t":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.008583690987124463}}}}}}}}}}}},"语":{"docs":{},"义":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}},"允":{"docs":{},"许":{"docs":{},"对":{"docs":{},"存":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"做":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"）":{"docs":{},"；":{"docs":{},"但":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"，":{"docs":{},"对":{"docs":{},"存":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":5.041095890410959}},"e":{"docs":{},"(":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}},"docs":{}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}},"（":{"docs":{},"信":{"docs":{},"号":{"docs":{},"量":{"docs":{},"）":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"特":{"docs":{},"定":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"它":{"docs":{},"通":{"docs":{},"过":{"docs":{},"协":{"docs":{},"调":{"docs":{},"各":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"公":{"docs":{},"共":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.024},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.025},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.03333333333333333},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.012269938650306749},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695},"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.14},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.013513513513513514},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}}}},"e":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"执":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"（":{"docs":{},"启":{"docs":{},"动":{"docs":{},"线":{"docs":{},"程":{"docs":{},"b":{"docs":{},"）":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"a":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"操":{"docs":{},"作":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}},"r":{"docs":{},"e":{"1":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.021505376344086023}},";":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.021505376344086023}}}},"2":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.043010752688172046}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.021505376344086023}},";":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}},"e":{"docs":{},";":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"a":{"docs":{},"l":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"转":{"docs":{},"移":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"并":{"docs":{},"唤":{"docs":{},"醒":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315}}},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"：":{"docs":{},"创":{"docs":{},"建":{"docs":{},"只":{"docs":{},"有":{"docs":{},"单":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}},"d":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},"o":{"docs":{},"u":{"docs":{},"d":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471}}}}}}}},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}},"首":{"docs":{},"先":{"docs":{},"将":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"设":{"docs":{},"置":{"docs":{},"成":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"停":{"docs":{},"止":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"或":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"是":{"docs":{},"将":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"设":{"docs":{},"置":{"docs":{},"成":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"中":{"docs":{},"断":{"docs":{},"所":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"即":{"docs":{},"跳":{"docs":{},"表":{"docs":{},"，":{"docs":{},"跳":{"docs":{},"表":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"空":{"docs":{},"间":{"docs":{},"换":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"将":{"docs":{},"链":{"docs":{},"表":{"docs":{},"一":{"docs":{},"层":{"docs":{},"一":{"docs":{},"层":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"达":{"docs":{},"到":{"docs":{},"类":{"docs":{},"似":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"流":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.009652509652509652}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"需":{"docs":{},"要":{"docs":{},"多":{"docs":{},"个":{"docs":{},"后":{"docs":{},"台":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"周":{"docs":{},"期":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"为":{"docs":{},"了":{"docs":{},"满":{"docs":{},"足":{"docs":{},"资":{"docs":{},"源":{"docs":{},"管":{"docs":{},"理":{"docs":{},"的":{"docs":{},"需":{"docs":{},"求":{"docs":{},"而":{"docs":{},"需":{"docs":{},"要":{"docs":{},"限":{"docs":{},"制":{"docs":{},"后":{"docs":{},"台":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}},"和":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"是":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"他":{"docs":{},"计":{"docs":{},"算":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}},"述":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"等":{"docs":{},"待":{"docs":{},"通":{"docs":{},"知":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"的":{"docs":{},"那":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"，":{"docs":{},"文":{"docs":{},"字":{"docs":{},"描":{"docs":{},"述":{"docs":{},"有":{"7":{"docs":{},"中":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"图":{"docs":{},"里":{"docs":{},"边":{"docs":{},"只":{"docs":{},"有":{"6":{"docs":{},"种":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"就":{"docs":{},"是":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"两":{"docs":{},"个":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"段":{"docs":{},"描":{"docs":{},"述":{"docs":{},"是":{"docs":{},"我":{"docs":{},"看":{"docs":{},"简":{"docs":{},"单":{"docs":{},"搂":{"docs":{},"了":{"docs":{},"一":{"docs":{},"眼":{"docs":{},"源":{"docs":{},"码":{"docs":{},"写":{"docs":{},"的":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"竟":{"docs":{},"然":{"docs":{},"和":{"docs":{},"书":{"docs":{},"上":{"docs":{},"意":{"docs":{},"思":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"开":{"docs":{},"心":{"docs":{},"~":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"有":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"？":{"docs":{},"因":{"docs":{},"为":{"docs":{},"释":{"docs":{},"放":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"说":{"docs":{},"明":{"docs":{},"那":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"占":{"docs":{},"用":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"，":{"docs":{},"而":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"只":{"docs":{},"会":{"docs":{},"被":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"占":{"docs":{},"用":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}},"啥":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"构":{"docs":{},"造":{"docs":{},"里":{"docs":{},"边":{"docs":{},"能":{"docs":{},"方":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"也":{"docs":{},"能":{"docs":{},"放":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"?":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"服":{"docs":{},"务":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"前":{"docs":{},"台":{"docs":{},"线":{"docs":{},"程":{"docs":{},"死":{"docs":{},"亡":{"docs":{},"，":{"docs":{},"则":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"自":{"docs":{},"动":{"docs":{},"死":{"docs":{},"亡":{"docs":{},"。":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"这":{"docs":{},"个":{"docs":{},"包":{"docs":{},"下":{"docs":{},"边":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"类":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"种":{"docs":{},"用":{"docs":{},"法":{"docs":{},"简":{"docs":{},"单":{"docs":{},"、":{"docs":{},"性":{"docs":{},"能":{"docs":{},"高":{"docs":{},"效":{"docs":{},"、":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"地":{"docs":{},"更":{"docs":{},"新":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"，":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"必":{"docs":{},"须":{"docs":{},"首":{"docs":{},"先":{"docs":{},"标":{"docs":{},"识":{"docs":{},"他":{"docs":{},"需":{"docs":{},"要":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"表":{"docs":{},"示":{"docs":{},"两":{"docs":{},"种":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"状":{"docs":{},"态":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"是":{"3":{"2":{"docs":{},"位":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"拆":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"高":{"1":{"6":{"docs":{},"位":{"docs":{},"标":{"docs":{},"识":{"docs":{},"读":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"低":{"1":{"6":{"docs":{},"位":{"docs":{},"标":{"docs":{},"识":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"内":{"docs":{},"存":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"在":{"docs":{},"生":{"docs":{},"成":{"docs":{},"指":{"docs":{},"令":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"适":{"docs":{},"当":{"docs":{},"位":{"docs":{},"置":{"docs":{},"会":{"docs":{},"插":{"docs":{},"入":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"指":{"docs":{},"令":{"docs":{},"来":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"特":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"最":{"docs":{},"小":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"，":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"分":{"docs":{},"配":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"会":{"docs":{},"对":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"清":{"docs":{},"零":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"才":{"docs":{},"会":{"docs":{},"在":{"docs":{},"上":{"docs":{},"面":{"docs":{},"分":{"docs":{},"配":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"内":{"docs":{},"部":{"docs":{},"会":{"docs":{},"同":{"docs":{},"步":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"）":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"在":{"docs":{},"已":{"docs":{},"清":{"docs":{},"零":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"在":{"docs":{},"生":{"docs":{},"成":{"docs":{},"字":{"docs":{},"节":{"docs":{},"码":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"在":{"docs":{},"指":{"docs":{},"令":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"来":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"特":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{},"用":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"不":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"可":{"docs":{},"以":{"docs":{},"减":{"docs":{},"少":{"docs":{},"线":{"docs":{},"程":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"切":{"docs":{},"换":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"更":{"docs":{},"加":{"docs":{},"耗":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"条":{"docs":{},"件":{"docs":{},"更":{"docs":{},"新":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}},"e":{"docs":{},"和":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}},"时":{"docs":{},"最":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"是":{"docs":{},"最":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"的":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}},"协":{"docs":{},"程":{"docs":{},"：":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"里":{"docs":{},"执":{"docs":{},"行":{"docs":{},"多":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}},"最":{"docs":{},"少":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}},"简":{"docs":{},"易":{"docs":{},"程":{"docs":{},"度":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"进":{"docs":{},"方":{"docs":{},"法":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"释":{"docs":{},"放":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"会":{"docs":{},"专":{"docs":{},"门":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"、":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"对":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"示":{"docs":{},"例":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"技":{"docs":{},"术":{"docs":{},"提":{"docs":{},"高":{"docs":{},"并":{"docs":{},"发":{"docs":{},"访":{"docs":{},"问":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}},"场":{"docs":{},"景":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":5.005649717514125}},"能":{"docs":{},"够":{"docs":{"第06章-线程池与Executor框架/":{"ref":"第06章-线程池与Executor框架/","tf":0.16666666666666666}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"，":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"可":{"docs":{},"以":{"docs":{},"创":{"docs":{},"建":{"docs":{},"三":{"docs":{},"种":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{},"分":{"docs":{},"别":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}},"循":{"docs":{},"环":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"锁":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}},"锁":{"docs":{},"机":{"docs":{},"制":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"入":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"（":{"docs":{},"后":{"docs":{},"面":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"讲":{"docs":{},"）":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"等":{"docs":{},"待":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"通":{"docs":{},"知":{"docs":{},"或":{"docs":{},"者":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"才":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"后":{"docs":{},"需":{"docs":{},"要":{"docs":{},"释":{"docs":{},"放":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"减":{"docs":{},"少":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.040268456375838924}},"充":{"docs":{},"分":{"docs":{},"利":{"docs":{},"用":{"docs":{},"多":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"核":{"docs":{},"心":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}},"把":{"docs":{},"线":{"docs":{},"程":{"docs":{},"放":{"docs":{},"到":{"docs":{},"组":{"docs":{},"里":{"docs":{},"，":{"docs":{},"一":{"docs":{},"起":{"docs":{},"管":{"docs":{},"理":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"理":{"docs":{},"解":{"docs":{},"为":{"docs":{},"管":{"docs":{},"理":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"东":{"docs":{},"西":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"重":{"docs":{},"写":{"docs":{},"他":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"定":{"docs":{},"义":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"看":{"docs":{},"第":{"0":{"5":{"docs":{},"章":{"docs":{},"的":{"docs":{},"相":{"docs":{},"关":{"docs":{},"内":{"docs":{},"容":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}},"docs":{}},"docs":{}}}},"多":{"docs":{},"个":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}},"看":{"docs":{},"到":{"docs":{},"和":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"相":{"docs":{},"比":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"要":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"和":{"docs":{},"强":{"docs":{},"大":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"会":{"docs":{},"稍":{"docs":{},"微":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"一":{"docs":{},"点":{"docs":{},"：":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"重":{"docs":{},"写":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}},"通":{"docs":{},"过":{"docs":{},"重":{"docs":{},"写":{"docs":{},"他":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"制":{"docs":{},"定":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"考":{"docs":{},"下":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"有":{"docs":{},"人":{"docs":{},"拿":{"docs":{},"了":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"不":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"写":{"docs":{},"锁":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}},"发":{"docs":{},"现":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"完":{"docs":{},"成":{"docs":{},"了":{"docs":{},"上":{"docs":{},"边":{"docs":{},"说":{"docs":{},"的":{"docs":{},"“":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"理":{"docs":{},"流":{"docs":{},"程":{"docs":{},"”":{"docs":{},"这":{"docs":{},"个":{"docs":{},"图":{"docs":{},"里":{"docs":{},"描":{"docs":{},"述":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"方":{"docs":{},"法":{"docs":{},"指":{"docs":{},"定":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"时":{"docs":{},"传":{"docs":{},"入":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"断":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"在":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"后":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"返":{"docs":{},"回":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"入":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}},"原":{"docs":{},"理":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}},"见":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"去":{"docs":{},"看":{"docs":{},"一":{"docs":{},"眼":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"他":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"是":{"docs":{},"借":{"docs":{},"助":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"队":{"docs":{},"列":{"docs":{},"做":{"docs":{},"的":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}},"性":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"是":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"修":{"docs":{},"改":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"时":{"docs":{},"，":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"读":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"值":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"一":{"docs":{},"进":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"多":{"docs":{},"条":{"docs":{},"线":{"docs":{},"程":{"docs":{},"将":{"docs":{},"共":{"docs":{},"享":{"docs":{},"该":{"docs":{},"进":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"全":{"docs":{},"部":{"docs":{},"系":{"docs":{},"统":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"如":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"地":{"docs":{},"址":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"文":{"docs":{},"件":{"docs":{},"描":{"docs":{},"述":{"docs":{},"符":{"docs":{},"和":{"docs":{},"信":{"docs":{},"号":{"docs":{},"处":{"docs":{},"理":{"docs":{},"等":{"docs":{},"等":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}},"方":{"docs":{},"法":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}},"队":{"docs":{},"列":{"docs":{},"（":{"docs":{},"锁":{"docs":{},"池":{"docs":{},"）":{"docs":{},"：":{"docs":{},"假":{"docs":{},"设":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"已":{"docs":{},"经":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"了":{"docs":{},"某":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"注":{"docs":{},"意":{"docs":{},":":{"docs":{},"不":{"docs":{},"是":{"docs":{},"类":{"docs":{},"）":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"而":{"docs":{},"其":{"docs":{},"它":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"想":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{},"(":{"docs":{},"或":{"docs":{},"者":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"块":{"docs":{},")":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{},"之":{"docs":{},"前":{"docs":{},"必":{"docs":{},"须":{"docs":{},"先":{"docs":{},"获":{"docs":{},"得":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"权":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"目":{"docs":{},"前":{"docs":{},"正":{"docs":{},"被":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"进":{"docs":{},"入":{"docs":{},"了":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"（":{"docs":{},"锁":{"docs":{},"池":{"docs":{},"）":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"用":{"docs":{},"于":{"docs":{},"控":{"docs":{},"制":{"docs":{},"不":{"docs":{},"同":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"操":{"docs":{},"作":{"docs":{},"发":{"docs":{},"生":{"docs":{},"相":{"docs":{},"对":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"效":{"docs":{},"果":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}},"上":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}},"因":{"docs":{},"此":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"越":{"docs":{},"多":{"docs":{},"越":{"docs":{},"快":{"docs":{},"，":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"切":{"docs":{},"换":{"docs":{},"会":{"docs":{},"损":{"docs":{},"失":{"docs":{},"性":{"docs":{},"能":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}},"为":{"0":{"docs":{},"才":{"docs":{},"是":{"docs":{},"没":{"docs":{},"被":{"docs":{},"占":{"docs":{},"用":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"期":{"docs":{},"望":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"获":{"docs":{},"取":{"docs":{},"之":{"docs":{},"后":{"docs":{},"要":{"docs":{},"改":{"docs":{},"为":{"docs":{},"非":{"0":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"1":{"6":{"docs":{},"位":{"docs":{},"的":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}},"docs":{}},"docs":{}}}}}}},"调":{"docs":{},"用":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"是":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}},"他":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"高":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"对":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"要":{"docs":{},"求":{"docs":{},"特":{"docs":{},"别":{"docs":{},"高":{"docs":{},"，":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"读":{"docs":{},"线":{"docs":{},"程":{"docs":{},"读":{"docs":{},"到":{"docs":{},"老":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"笔":{"docs":{},"者":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"特":{"docs":{},"别":{"docs":{},"了":{"docs":{},"解":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"只":{"docs":{},"能":{"docs":{},"提":{"docs":{},"炼":{"docs":{},"一":{"docs":{},"下":{"docs":{},"书":{"docs":{},"中":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"适":{"docs":{},"当":{"docs":{},"加":{"docs":{},"入":{"docs":{},"一":{"docs":{},"些":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/":{"ref":"第08章-Java并发机制的底层实现原理/","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"旋":{"docs":{},"会":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"无":{"docs":{},"用":{"docs":{},"的":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"（":{"docs":{},"比":{"docs":{},"如":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"住":{"docs":{},"了":{"docs":{},"）":{"docs":{},"，":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"锁":{"docs":{},"升":{"docs":{},"级":{"docs":{},"成":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"到":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"当":{"docs":{},"锁":{"docs":{},"处":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"下":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"试":{"docs":{},"图":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"住":{"docs":{},"，":{"docs":{},"当":{"docs":{},"持":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"之":{"docs":{},"后":{"docs":{},"会":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"被":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"新":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"的":{"docs":{},"夺":{"docs":{},"锁":{"docs":{},"之":{"docs":{},"争":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"里":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"拥":{"docs":{},"有":{"8":{"docs":{},"级":{"docs":{},"英":{"docs":{},"语":{"docs":{},"水":{"docs":{},"品":{"docs":{},"的":{"6":{"docs":{},"级":{"docs":{},"没":{"docs":{},"过":{"docs":{},"的":{"docs":{},"人":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"这":{"docs":{},"段":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"太":{"docs":{},"难":{"docs":{},"了":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"出":{"docs":{},"来":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"很":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"了":{"docs":{},"。":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"块":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"括":{"docs":{},"号":{"docs":{},"里":{"docs":{},"配":{"docs":{},"置":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"普":{"docs":{},"通":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"类":{"docs":{},"的":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}},"未":{"docs":{},"同":{"docs":{},"步":{"docs":{},"或":{"docs":{},"未":{"docs":{},"正":{"docs":{},"确":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"程":{"docs":{},"序":{"docs":{},"，":{"docs":{},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{},"只":{"docs":{},"提":{"docs":{},"供":{"docs":{},"最":{"docs":{},"小":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"读":{"docs":{},"取":{"docs":{},"到":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"是":{"docs":{},"之":{"docs":{},"前":{"docs":{},"某":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"写":{"docs":{},"入":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"是":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"象":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}},"头":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}},"读":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"高":{"docs":{},"读":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"读":{"docs":{},"多":{"docs":{},"写":{"docs":{},"少":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}},"列":{"docs":{},"元":{"docs":{},"素":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"指":{"docs":{},"定":{"docs":{},"多":{"docs":{},"久":{"docs":{},"才":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"到":{"docs":{},"期":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"才":{"docs":{},"能":{"docs":{},"出":{"docs":{},"队":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"读":{"docs":{},"，":{"docs":{},"总":{"docs":{},"是":{"docs":{},"能":{"docs":{},"看":{"docs":{},"到":{"docs":{},"（":{"docs":{},"任":{"docs":{},"意":{"docs":{},"线":{"docs":{},"程":{"docs":{},"）":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"写":{"docs":{},"入":{"docs":{},"。":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"使":{"docs":{},"用":{"docs":{},"定":{"docs":{},"时":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"（":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"）":{"docs":{},"来":{"docs":{},"替":{"docs":{},"代":{"docs":{},"使":{"docs":{},"用":{"docs":{},"内":{"docs":{},"部":{"docs":{},"锁":{"docs":{},"机":{"docs":{},"制":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"立":{"docs":{},"即":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"带":{"docs":{},"宽":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"拿":{"docs":{},"的":{"docs":{},"到":{"docs":{},"就":{"docs":{},"拿":{"docs":{},"，":{"docs":{},"拿":{"docs":{},"不":{"docs":{},"到":{"docs":{},"就":{"docs":{},"算":{"docs":{},"了":{"docs":{},"，":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"返":{"docs":{},"回":{"docs":{},"；":{"docs":{},"这":{"docs":{},"个":{"docs":{},"就":{"docs":{},"想":{"docs":{},"学":{"docs":{},"习":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"学":{"docs":{},"的":{"docs":{},"会":{"docs":{},"就":{"docs":{},"学":{"docs":{},"，":{"docs":{},"学":{"docs":{},"不":{"docs":{},"会":{"docs":{},"就":{"docs":{},"算":{"docs":{},"了":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"这":{"docs":{},"是":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"观":{"docs":{},"点":{"docs":{},"了":{"docs":{},"。":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"是":{"docs":{},"传":{"docs":{},"一":{"docs":{},"个":{"docs":{},"相":{"docs":{},"对":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"要":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"多":{"docs":{},"久":{"docs":{},"；":{"docs":{},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"到":{"docs":{},"啥":{"docs":{},"时":{"docs":{},"候":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"见":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}},"应":{"docs":{},"对":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}},"该":{"docs":{},"是":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"数":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}},"对":{"docs":{},"其":{"docs":{},"他":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"变":{"docs":{},"得":{"docs":{},"可":{"docs":{},"见":{"docs":{},"（":{"docs":{},"指":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"）":{"docs":{},"，":{"docs":{},"之":{"docs":{},"前":{"docs":{},"于":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}},"可":{"docs":{},"见":{"docs":{},"（":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"）":{"docs":{},"，":{"docs":{},"之":{"docs":{},"前":{"docs":{},"于":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"装":{"docs":{},"载":{"docs":{},"，":{"docs":{},"之":{"docs":{},"前":{"docs":{},"于":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}},"装":{"docs":{},"载":{"docs":{},"，":{"docs":{},"之":{"docs":{},"前":{"docs":{},"于":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}},"依":{"docs":{},"赖":{"docs":{},"性":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}},"仅":{"docs":{},"针":{"docs":{},"对":{"docs":{},"单":{"docs":{},"个":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"指":{"docs":{},"令":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"单":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"之":{"docs":{},"间":{"docs":{},"和":{"docs":{},"不":{"docs":{},"同":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"性":{"docs":{},"不":{"docs":{},"被":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"考":{"docs":{},"虑":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"竞":{"docs":{},"争":{"docs":{},"与":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}},"组":{"docs":{},"和":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"跟":{"docs":{},"基":{"docs":{},"础":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"队":{"docs":{},"都":{"docs":{},"是":{"docs":{},"在":{"docs":{},"首":{"docs":{},"尾":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"区":{"docs":{},"别":{"docs":{},"也":{"docs":{},"不":{"docs":{},"大":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}},"无":{"docs":{},"锁":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"：":{"docs":{},"例":{"docs":{},"如":{"docs":{},"把":{"docs":{},"一":{"docs":{},"堆":{"docs":{},"数":{"docs":{},"据":{"docs":{},"分":{"docs":{},"为":{"docs":{},"几":{"docs":{},"块":{"docs":{},"，":{"docs":{},"交":{"docs":{},"给":{"docs":{},"不":{"docs":{},"同":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"用":{"docs":{},"锁":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"界":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.013100436681222707}},"，":{"docs":{},"不":{"docs":{},"存":{"docs":{},"储":{"docs":{},"元":{"docs":{},"素":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}},"是":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"能":{"docs":{},"够":{"docs":{},"进":{"docs":{},"行":{"docs":{},"运":{"docs":{},"算":{"docs":{},"调":{"docs":{},"度":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"单":{"docs":{},"位":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"的":{"docs":{},"进":{"docs":{},"程":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"和":{"docs":{},"切":{"docs":{},"换":{"docs":{},"成":{"docs":{},"本":{"docs":{},"比":{"docs":{},"进":{"docs":{},"程":{"docs":{},"低":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"共":{"docs":{},"享":{"docs":{},"任":{"docs":{},"务":{"docs":{},"代":{"docs":{},"码":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}},"再":{"docs":{},"继":{"docs":{},"承":{"docs":{},"别":{"docs":{},"的":{"docs":{},"类":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}},"声":{"docs":{},"明":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}},"是":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"以":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"对":{"docs":{},"象":{"docs":{},"为":{"docs":{},"键":{"docs":{},"、":{"docs":{},"任":{"docs":{},"意":{"docs":{},"对":{"docs":{},"象":{"docs":{},"为":{"docs":{},"值":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"构":{"docs":{},"被":{"docs":{},"附":{"docs":{},"带":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"对":{"docs":{},"象":{"docs":{},"查":{"docs":{},"询":{"docs":{},"到":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"。":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"组":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"命":{"docs":{},"令":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"实":{"docs":{},"现":{"docs":{},"内":{"docs":{},"存":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"共":{"docs":{},"享":{"docs":{},"式":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"下":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"编":{"docs":{},"程":{"docs":{},"模":{"docs":{},"型":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"模":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"解":{"docs":{},"耦":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}},"快":{"docs":{},"的":{"docs":{},"响":{"docs":{},"应":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"强":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"交":{"docs":{},"给":{"docs":{},"别":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"做":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{},"调":{"docs":{},"整":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"瓶":{"docs":{},"颈":{"docs":{},"，":{"docs":{},"把":{"docs":{},"瓶":{"docs":{},"颈":{"docs":{},"资":{"docs":{},"源":{"docs":{},"搞":{"docs":{},"多":{"docs":{},"一":{"docs":{},"些":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"根":{"docs":{},"据":{"docs":{},"这":{"docs":{},"个":{"docs":{},"瓶":{"docs":{},"颈":{"docs":{},"调":{"docs":{},"整":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"降":{"docs":{},"级":{"docs":{},"还":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"难":{"docs":{},"理":{"docs":{},"解":{"docs":{},"的":{"docs":{},"，":{"docs":{},"为":{"docs":{},"啥":{"docs":{},"要":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"东":{"docs":{},"西":{"docs":{},"，":{"docs":{},"书":{"docs":{},"上":{"docs":{},"原":{"docs":{},"文":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"死":{"docs":{},"锁":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}},"就":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"因":{"docs":{},"争":{"docs":{},"夺":{"docs":{},"资":{"docs":{},"源":{"docs":{},"处":{"docs":{},"理":{"docs":{},"不":{"docs":{},"当":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"相":{"docs":{},"互":{"docs":{},"等":{"docs":{},"待":{"docs":{},"现":{"docs":{},"象":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}},"硬":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}},"磁":{"docs":{},"盘":{"docs":{},"读":{"docs":{},"写":{"docs":{},"速":{"docs":{},"度":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"需":{"docs":{},"要":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"、":{"docs":{},"带":{"docs":{},"宽":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"由":{"docs":{},"于":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"并":{"docs":{},"发":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"串":{"docs":{},"行":{"docs":{},"，":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"无":{"docs":{},"优":{"docs":{},"势":{"docs":{},"，":{"docs":{},"反":{"docs":{},"而":{"docs":{},"带":{"docs":{},"来":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"损":{"docs":{},"耗":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012},"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"1":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"p":{"docs":{},"!":{"docs":{},"=":{"docs":{},"t":{"docs":{},"?":{"docs":{},"发":{"docs":{},"现":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"不":{"docs":{},"进":{"docs":{},"入":{"docs":{},"i":{"docs":{},"f":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"入":{"docs":{},"队":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"入":{"docs":{},"队":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{},"号":{"docs":{},"）":{"docs":{},"，":{"docs":{},"q":{"docs":{},"是":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"，":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},",":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"2":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"再":{"docs":{},"次":{"docs":{},"进":{"docs":{},"到":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"q":{"docs":{},"=":{"docs":{},"p":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}},"与":{"docs":{},"意":{"docs":{},"义":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}},"和":{"docs":{},"意":{"docs":{},"义":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":5}}}}}}},"一":{"docs":{},"些":{"docs":{},"属":{"docs":{},"性":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":5.017857142857143}}}}}},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":5.0125}}}}}},"保":{"docs":{},"活":{"docs":{},"时":{"docs":{},"间":{"docs":{},"时":{"6":{"0":{"docs":{},"秒":{"docs":{},"，":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"6":{"0":{"docs":{},"秒":{"docs":{},"没":{"docs":{},"任":{"docs":{},"务":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"销":{"docs":{},"毁":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}}}}}},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":5.005376344086022}}}},"a":{"docs":{},"就":{"docs":{},"进":{"docs":{},"入":{"docs":{},"到":{"docs":{},"了":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"（":{"docs":{},"等":{"docs":{},"待":{"docs":{},"池":{"docs":{},"）":{"docs":{},"中":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"另":{"docs":{},"外":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"相":{"docs":{},"同":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"实":{"docs":{},"质":{"docs":{},"上":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"向":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"将":{"docs":{},"要":{"docs":{},"读":{"docs":{},"这":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"发":{"docs":{},"出":{"docs":{},"了":{"docs":{},"（":{"docs":{},"其":{"docs":{},"对":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"所":{"docs":{},"做":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"）":{"docs":{},"消":{"docs":{},"息":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"随":{"docs":{},"后":{"docs":{},"线":{"docs":{},"程":{"docs":{},"b":{"docs":{},"读":{"docs":{},"这":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"实":{"docs":{},"质":{"docs":{},"上":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"通":{"docs":{},"过":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"向":{"docs":{},"线":{"docs":{},"程":{"docs":{},"b":{"docs":{},"发":{"docs":{},"送":{"docs":{},"消":{"docs":{},"息":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"间":{"docs":{},"协":{"docs":{},"调":{"docs":{},"工":{"docs":{},"作":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}},"的":{"docs":{},"通":{"docs":{},"信":{"docs":{},"方":{"docs":{},"式":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"：":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"（":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}},"间":{"docs":{},"的":{"docs":{},"通":{"docs":{},"信":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":5.0034246575342465}}}}}},"池":{"docs":{},"与":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"框":{"docs":{},"架":{"docs":{"第06章-线程池与Executor框架/":{"ref":"第06章-线程池与Executor框架/","tf":5.166666666666667}}}}}}}}}}}}},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"个":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"以":{"docs":{},"判":{"docs":{},"断":{"docs":{},"任":{"docs":{},"务":{"docs":{},"是":{"docs":{},"否":{"docs":{},"执":{"docs":{},"行":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"直":{"docs":{},"到":{"docs":{},"任":{"docs":{},"务":{"docs":{},"完":{"docs":{},"成":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"后":{"docs":{},"，":{"docs":{},"保":{"docs":{},"持":{"docs":{},"存":{"docs":{},"活":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"任":{"docs":{},"务":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"每":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"比":{"docs":{},"较":{"docs":{},"短":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"调":{"docs":{},"大":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"提":{"docs":{},"高":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"利":{"docs":{},"用":{"docs":{},"率":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"理":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":5.001706484641638}}}},"处":{"docs":{},"理":{"docs":{},"流":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"保":{"docs":{},"活":{"docs":{},"时":{"docs":{},"间":{"docs":{},"单":{"docs":{},"位":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}},"是":{"0":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"被":{"docs":{},"立":{"docs":{},"即":{"docs":{},"销":{"docs":{},"毁":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"，":{"docs":{},"重":{"docs":{},"新":{"docs":{},"创":{"docs":{},"建":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"工":{"docs":{},"厂":{"docs":{},"里":{"docs":{},"给":{"docs":{},"线":{"docs":{},"程":{"docs":{},"起":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"听":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"会":{"docs":{},"先":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"桢":{"docs":{},"中":{"docs":{},"创":{"docs":{},"建":{"docs":{},"用":{"docs":{},"于":{"docs":{},"存":{"docs":{},"储":{"docs":{},"锁":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"中":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"竞":{"docs":{},"争":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"响":{"docs":{},"应":{"docs":{},"时":{"docs":{},"间":{"docs":{},"缓":{"docs":{},"慢":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}},"与":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"关":{"docs":{},"系":{"docs":{},"：":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}},"b":{"docs":{},"读":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"实":{"docs":{},"质":{"docs":{},"上":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"b":{"docs":{},"接":{"docs":{},"收":{"docs":{},"了":{"docs":{},"之":{"docs":{},"前":{"docs":{},"某":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"发":{"docs":{},"出":{"docs":{},"的":{"docs":{},"（":{"docs":{},"在":{"docs":{},"写":{"docs":{},"这":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"之":{"docs":{},"前":{"docs":{},"对":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"所":{"docs":{},"做":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"）":{"docs":{},"消":{"docs":{},"息":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}},"软":{"docs":{},"件":{"docs":{},"资":{"docs":{},"源":{"docs":{},"限":{"docs":{},"制":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}},"避":{"docs":{},"免":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"获":{"docs":{},"取":{"docs":{},"多":{"docs":{},"个":{"docs":{},"锁":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}},"在":{"docs":{},"锁":{"docs":{},"内":{"docs":{},"同":{"docs":{},"时":{"docs":{},"占":{"docs":{},"用":{"docs":{},"多":{"docs":{},"个":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"保":{"docs":{},"证":{"docs":{},"每":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"只":{"docs":{},"占":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"资":{"docs":{},"源":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"死":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}},"集":{"docs":{},"群":{"docs":{},"化":{"docs":{},"，":{"docs":{},"增":{"docs":{},"加":{"docs":{},"资":{"docs":{},"源":{"docs":{"第02章-并发编程基础/01-线程的定义和意义.html":{"ref":"第02章-并发编程基础/01-线程的定义和意义.html","tf":0.02564102564102564}}}}}}}}}},"(":{"3":{"2":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.015544041450777202}}},"docs":{}},"6":{"4":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}},"docs":{}},"9":{"6":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}},"docs":{}},"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"e":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}},")":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.020134228187919462},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.032},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.006818181818181818},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.022222222222222223},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.00408997955010225},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.01694915254237288},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}},")":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.02459016393442623},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.016129032258064516}},")":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}},")":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}},"[":{"docs":{},"h":{"docs":{},"]":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}},"s":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}},"!":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},",":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"b":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},",":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315}}}}}},"e":{"docs":{},"n":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}}}},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"条":{"docs":{},"件":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}},"对":{"docs":{},"象":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}},"i":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},";":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}},"c":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}},"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},"t":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"b":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242}}}}},"r":{"docs":{},"e":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.010344827586206896},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}},"h":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}},"p":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.02459016393442623},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"c":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}},"(":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}},"o":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}},"原":{"docs":{},"文":{"docs":{},"引":{"docs":{},"用":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471}}}}}}},"+":{"docs":{},"+":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}},"r":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}}},"/":{"docs":{},"/":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.040268456375838924},"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.05357142857142857},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.02054794520547945},"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.2625},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.04772727272727273},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.022222222222222223},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.030303030303030304},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.05112474437627812},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.030042918454935622},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.031413612565445025},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.034482758620689655},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.09016393442622951},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0502283105022831},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.03954802259887006},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.06143344709897611},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0694980694980695},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0547945205479452}},"【":{"docs":{},"b":{"docs":{},"】":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}},"*":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}},"*":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.017241379310344827}}}}},"=":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.053691275167785234},"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.05357142857142857},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.04838709677419355},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.04794520547945205},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.048},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.07045454545454545},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.06666666666666667},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.030303030303030304},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.04294478527607362},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.03862660944206009},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.05759162303664921},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.05862068965517241},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.06557377049180328},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.056179775280898875},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.048034934497816595},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0684931506849315},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.03954802259887006},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.05631399317406143},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.025096525096525095},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.06557377049180328},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.05128205128205128},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0410958904109589}},"=":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.005112474437627812},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.030042918454935622},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.015706806282722512},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.02459016393442623},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0273972602739726},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.006825938566552901},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791}}}},">":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.010273972602739725},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}},"=":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.021505376344086023},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.008532423208191127},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"修":{"docs":{},"改":{"docs":{},"数":{"docs":{},"据":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}},"改":{"docs":{},"引":{"docs":{},"用":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.020134228187919462},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.024},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.014314928425357873},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.01694915254237288},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.010344827586206896}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.010344827586206896}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.040268456375838924},"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.03571428571428571},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.026881720430107527},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.023972602739726026},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.022727272727272728},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.03333333333333333},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.011247443762781187},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.02575107296137339},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.020942408376963352},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.010344827586206896},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.017467248908296942},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.02824858757062147},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.006825938566552901},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.015444015444015444},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.03278688524590164},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.07692307692307693},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0410958904109589}},",":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}},"e":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},"：":{"docs":{},"设":{"docs":{},"置":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}},"e":{"docs":{},")":{"docs":{},")":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}},";":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}},"e":{"docs":{},"l":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"h":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}},"c":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}},"e":{"docs":{},"d":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"或":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"后":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"从":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"或":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"有":{"docs":{},"机":{"docs":{},"会":{"docs":{},"从":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"等":{"docs":{},"待":{"docs":{},"线":{"docs":{},"程":{"docs":{},"从":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"移":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"，":{"docs":{},"而":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"则":{"docs":{},"是":{"docs":{},"将":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"全":{"docs":{},"部":{"docs":{},"移":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"被":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"状":{"docs":{},"态":{"docs":{},"由":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"变":{"docs":{},"为":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}},"a":{"docs":{},"l":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}},"l":{"docs":{},":":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"指":{"docs":{},"定":{"docs":{},"具":{"docs":{},"体":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"也":{"docs":{},"只":{"docs":{},"能":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"别":{"docs":{},"人":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"说":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"虽":{"docs":{},"好":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"太":{"docs":{},"死":{"docs":{},"板":{"docs":{},"了":{"docs":{},"。":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"唤":{"docs":{},"醒":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.02147239263803681},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.017241379310344827},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.01639344262295082}},"(":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},")":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}},"v":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.005112474437627812}}}}},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016},"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.04}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},"：":{"docs":{},"带":{"docs":{},"超":{"docs":{},"时":{"docs":{},"，":{"docs":{},"且":{"docs":{},"能":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"独":{"docs":{},"占":{"docs":{},"是":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"能":{"docs":{},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"且":{"docs":{},"有":{"docs":{},"超":{"docs":{},"时":{"docs":{},"，":{"docs":{},"超":{"docs":{},"时":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.013636363636363636},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.017167381974248927},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.010344827586206896},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931}}}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.00408997955010225},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.013793103448275862},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.006825938566552901}}},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.016},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.010752688172043012},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}},",":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}},"t":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"可":{"docs":{},"以":{"docs":{},"理":{"docs":{},"解":{"docs":{},"为":{"docs":{},"就":{"docs":{},"是":{"docs":{},"开":{"docs":{},"始":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":5.008583690987124},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0182648401826484},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":5.015706806282722}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.020454545454545454},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.044444444444444446},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.020202020202020204},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.024539877300613498},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.030042918454935622},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.020942408376963352},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.013793103448275862},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.02247191011235955},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0136986301369863},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.015358361774744027},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.015444015444015444}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}},"r":{"docs":{},"y":{"docs":{},":":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},")":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}},"a":{"docs":{},"d":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}},"(":{"docs":{},")":{"docs":{},"：":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"：":{"docs":{},"减":{"docs":{},"少":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"个":{"docs":{},"许":{"docs":{},"可":{"docs":{},"证":{"docs":{},"，":{"docs":{},"是":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"s":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"（":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"）":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.013636363636363636},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.005112474437627812},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.008583690987124463},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.040983606557377046},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"2":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}},"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.026845637583892617},"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.03571428571428571},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.010752688172043012},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.04},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.01694915254237288},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.006825938566552901}},"(":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.010273972602739725},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}}}},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}},";":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"y":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},",":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.010752688172043012}}}}}}}}}}},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}},".":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}},"(":{"1":{"0":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}},"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}},"docs":{}}}}}},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"“":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"”":{"docs":{},"\"":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},")":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"号":{"docs":{},"'":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"'":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"1":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.05357142857142857}},"(":{"docs":{},"\"":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"号":{"docs":{},"'":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"'":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"里":{"docs":{},"边":{"docs":{},"可":{"docs":{},"以":{"docs":{},"指":{"docs":{},"定":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":5.0181818181818185}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}},"{":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"d":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.011363636363636364}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}},"是":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"，":{"docs":{},"他":{"docs":{},"里":{"docs":{},"边":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"。":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"时":{"docs":{},"讲":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"作":{"docs":{},"为":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"要":{"docs":{},"存":{"docs":{},"的":{"docs":{},"值":{"docs":{},"传":{"docs":{},"进":{"docs":{},"去":{"docs":{},"，":{"docs":{},"他":{"docs":{},"会":{"docs":{},"对":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"构":{"docs":{},"建":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},",":{"docs":{},"放":{"docs":{},"到":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"边":{"docs":{},"。":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}},"看":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"再":{"docs":{},"来":{"docs":{},"瞅":{"docs":{},"瞅":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},",":{"docs":{},"看":{"docs":{},"看":{"docs":{},"他":{"docs":{},"是":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"父":{"docs":{},"线":{"docs":{},"程":{"docs":{},"那":{"docs":{},"里":{"docs":{},"拿":{"docs":{},"东":{"docs":{},"西":{"docs":{},"的":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},")":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"：":{"docs":{},"用":{"docs":{},"于":{"docs":{},"设":{"docs":{},"置":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"线":{"docs":{},"程":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"给":{"docs":{},"每":{"docs":{},"个":{"docs":{},"创":{"docs":{},"建":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"设":{"docs":{},"置":{"docs":{},"更":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"。":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"接":{"docs":{},"口":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791}},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.01694915254237288},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"(":{"0":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}},"1":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}},"2":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"就":{"docs":{},"好":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"前":{"docs":{},"面":{"docs":{},"已":{"docs":{},"经":{"docs":{},"讲":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"里":{"docs":{},"边":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"很":{"docs":{},"多":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"再":{"docs":{},"赘":{"docs":{},"述":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"探":{"docs":{},"讨":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"为":{"docs":{},"我":{"docs":{},"们":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"几":{"docs":{},"种":{"docs":{},"实":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"详":{"docs":{},"解":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}},":":{"2":{"3":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}},"docs":{}},"docs":{}}}}},"o":{"docs":{},"w":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.032},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.020202020202020204},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0081799591002045},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.02575107296137339},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.020689655172413793},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.06349206349206349},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0136986301369863},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.006825938566552901},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}},"_":{"docs":{},"i":{"docs":{},"e":{"docs":{},")":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},"n":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.006825938566552901}},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.03763440860215054}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.016129032258064516}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471}}}}}}}},"i":{"docs":{},"m":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0182648401826484}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.010752688172043012},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.0136986301369863},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.005112474437627812},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0182648401826484},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.011945392491467578},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.007157464212678937},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.008532423208191127}}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.005112474437627812},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}},"是":{"docs":{},"你":{"docs":{},"自":{"docs":{},"己":{"docs":{},"要":{"docs":{},"重":{"docs":{},"写":{"docs":{},"的":{"docs":{},"，":{"docs":{},"传":{"docs":{},"说":{"docs":{},"中":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"方":{"docs":{},"法":{"docs":{},"模":{"docs":{},"式":{"docs":{},"啊":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"我":{"docs":{},"们":{"docs":{},"之":{"docs":{},"前":{"docs":{},"那":{"docs":{},"个":{"docs":{},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"也":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"写":{"docs":{},"的":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"试":{"docs":{},"探":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"传":{"docs":{},"给":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"等":{"docs":{},"待":{"docs":{},"接":{"docs":{},"收":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.016129032258064516}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},":":{"docs":{"第04章-并发容器/03-ConcurrentLinkedDeque.html":{"ref":"第04章-并发容器/03-ConcurrentLinkedDeque.html","tf":0.2},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791}},"d":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}},",":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744}}}}}},";":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}},"l":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"e":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}},"[":{"docs":{},"h":{"docs":{},"]":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}},"i":{"docs":{},"l":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}},")":{"docs":{},")":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.01639344262295082}}}},",":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}},"s":{"docs":{},"k":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.013100436681222707},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}},",":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}},";":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.017467248908296942}}}}}}},"是":{"docs":{},"创":{"docs":{},"建":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"带":{"docs":{},"进":{"docs":{},"去":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"会":{"docs":{},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"他":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"里":{"docs":{},"边":{"docs":{},"取":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"将":{"docs":{},"要":{"docs":{},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"时":{"docs":{},"间":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}},";":{"docs":{},")":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}},"v":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.08823529411764706}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.026881720430107527},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.010273972602739725},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.056},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.015909090909090907},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.030303030303030304},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.013292433537832311},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.14},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.02413793103448276},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.017467248908296942},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.013651877133105802},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.011583011583011582},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.03278688524590164},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0273972602739726},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.00408997955010225},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":5.0181818181818185}},"e":{"docs":{},"使":{"docs":{},"用":{"docs":{},"优":{"docs":{},"化":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}},"原":{"docs":{},"理":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"转":{"docs":{},"变":{"docs":{},"为":{"docs":{},"汇":{"docs":{},"编":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"指":{"docs":{},"令":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"的":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"引":{"docs":{},"起":{"docs":{},"线":{"docs":{},"程":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"切":{"docs":{},"换":{"docs":{},"和":{"docs":{},"调":{"docs":{},"度":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"两":{"docs":{},"条":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"则":{"docs":{},"：":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"域":{"docs":{},"的":{"docs":{},"写":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012},"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"和":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"通":{"docs":{},"信":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":5.037037037037037}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}},"写":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.07407407407407407}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.006818181818181818},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}},"e":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.00909090909090909}}}},"为":{"docs":{},"你":{"docs":{},"存":{"docs":{},"的":{"docs":{},"值":{"docs":{},".":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}},";":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}},"r":{"1":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}}}},"2":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}}}},"4":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}}}},"5":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}},"6":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"docs":{}}}},"{":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.06711409395973154},"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.11827956989247312},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.0958904109589041},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.064},"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.056818181818181816},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.1},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.0707070707070707},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.065439672801636},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.05150214592274678},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.04712041884816754},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.03793103448275862},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.03278688524590164},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.0449438202247191},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.06550218340611354},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0776255707762557},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.05084745762711865},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.07167235494880546},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.04633204633204633},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.06557377049180328},"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.07692307692307693},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.1095890410958904},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.1095890410958904}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"}":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}},"}":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.03355704697986577},"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.11290322580645161},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.07534246575342465},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008},"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.05454545454545454},"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.06666666666666667},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.0707070707070707},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.05214723926380368},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.03862660944206009},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.031413612565445025},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.03793103448275862},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.03278688524590164},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.0449438202247191},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.05240174672489083},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0547945205479452},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.02824858757062147},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.07167235494880546},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.03861003861003861},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.03278688524590164},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.1095890410958904},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0821917808219178}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0273972602739726}}}}}}}}}}},";":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.011299435028248588}}}},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}},"中":{"docs":{},"等":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}},"断":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}},"组":{"docs":{},"里":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}},"途":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"状":{"docs":{},"态":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}},"其":{"docs":{},"实":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"继":{"docs":{},"承":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"，":{"docs":{},"而":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"继":{"docs":{},"承":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"和":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"接":{"docs":{},"口":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"多":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"独":{"docs":{},"占":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"而":{"docs":{},"满":{"docs":{},"足":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"通":{"docs":{},"过":{"docs":{},"重":{"docs":{},"写":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"决":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"中":{"docs":{},"断":{"docs":{},"了":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}},"了":{"docs":{},"该":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}},"再":{"docs":{},"来":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"复":{"docs":{},"用":{"docs":{},"了":{"docs":{},"任":{"docs":{},"务":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"继":{"docs":{},"承":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"就":{"docs":{},"不":{"docs":{},"行":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"看":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}},"瞅":{"docs":{},"瞅":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}},"看":{"docs":{},"出":{"docs":{},"队":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}},"返":{"docs":{},"回":{"docs":{},"队":{"docs":{},"列":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"三":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":5.006711409395973}}}}}}},"池":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"给":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}},"直":{"docs":{},"接":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"父":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}},"实":{"docs":{},"现":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"界":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"消":{"docs":{},"费":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"时":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"生":{"docs":{},"产":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"理":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"好":{"docs":{},"了":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}},"方":{"docs":{},"面":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"和":{"docs":{},"公":{"docs":{},"平":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"就":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"下":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"时":{"docs":{},"性":{"docs":{},"不":{"docs":{},"高":{"docs":{},"，":{"docs":{},"读":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"用":{"docs":{},"老":{"docs":{},"数":{"docs":{},"据":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}},"将":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"作":{"docs":{},"为":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"构":{"docs":{},"造":{"docs":{},"参":{"docs":{},"数":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"条":{"docs":{},"件":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}},"废":{"docs":{},"话":{"docs":{},"不":{"docs":{},"说":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"上":{"docs":{},"代":{"docs":{},"码":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}},"搞":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"重":{"docs":{},"写":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"在":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{},"练":{"docs":{},"手":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}},"方":{"docs":{},"式":{"1":{"docs":{},"：":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}},"2":{"docs":{},"：":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}},"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}},"法":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}},"比":{"docs":{},"较":{"docs":{},"多":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"怕":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"下":{"docs":{},"边":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"和":{"docs":{},"之":{"docs":{},"后":{"docs":{},"对":{"docs":{},"一":{"docs":{},"些":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"分":{"docs":{},"析":{"docs":{},"就":{"docs":{},"能":{"docs":{},"理":{"docs":{},"解":{"docs":{},"了":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}},"用":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"包":{"docs":{},"装":{"docs":{},"实":{"docs":{},"现":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"a":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}},"于":{"docs":{},"保":{"docs":{},"存":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"选":{"docs":{},"择":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"加":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"就":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"信":{"docs":{},"息":{"docs":{},"构":{"docs":{},"建":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"加":{"docs":{},"入":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"由":{"docs":{},"于":{"docs":{},"调":{"docs":{},"用":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"的":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"移":{"docs":{},"除":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"要":{"docs":{},"变":{"docs":{},"，":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"要":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.013422818791946308}},"是":{"docs":{},"最":{"docs":{},"容":{"docs":{},"易":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"是":{"docs":{},"最":{"docs":{},"不":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"的":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}},"类":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}},"了":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}},"重":{"docs":{},"写":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{"第02章-并发编程基础/02-创建线程的三种方式.html":{"ref":"第02章-并发编程基础/02-创建线程的三种方式.html","tf":0.006711409395973154}}}}}}}}}}},"了":{"docs":{},"三":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":5.026315789473684}},"的":{"docs":{},"分":{"docs":{},"类":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}},"对":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"为":{"docs":{},"了":{"docs":{},"优":{"docs":{},"化":{"docs":{},"程":{"docs":{},"序":{"docs":{},"性":{"docs":{},"能":{"docs":{},"而":{"docs":{},"对":{"docs":{},"指":{"docs":{},"令":{"docs":{},"序":{"docs":{},"列":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"新":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"手":{"docs":{},"段":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{},"{":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"}":{"docs":{},"这":{"docs":{},"个":{"docs":{},"样":{"docs":{},"子":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"高":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"更":{"docs":{},"多":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"资":{"docs":{},"源":{"docs":{},",":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"队":{"docs":{},"列":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"高":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"化":{"docs":{},"用":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}},"点":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}},"名":{"docs":{},"字":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}},"所":{"docs":{},"属":{"docs":{},"线":{"docs":{},"程":{"docs":{},"组":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}},"以":{"docs":{},",":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"他":{"docs":{},"取":{"docs":{},"消":{"docs":{},"或":{"docs":{},"者":{"docs":{},"释":{"docs":{},"放":{"docs":{},"时":{"docs":{},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"他":{"docs":{},"后":{"docs":{},"边":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}},"，":{"docs":{},"走":{"docs":{},"到":{"docs":{},"了":{"docs":{},"【":{"docs":{},"a":{"docs":{},"】":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"（":{"docs":{},"假":{"docs":{},"设":{"docs":{},"线":{"docs":{},"程":{"1":{"docs":{},"现":{"docs":{},"在":{"docs":{},"就":{"docs":{},"卡":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"了":{"docs":{},"）":{"docs":{},"，":{"docs":{},"理":{"docs":{},"一":{"docs":{},"下":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"p":{"docs":{},"和":{"docs":{},"t":{"docs":{},"还":{"docs":{},"有":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"都":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{},"号":{"docs":{},"的":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"核":{"docs":{},"心":{"docs":{},"是":{"docs":{},"分":{"docs":{},"析":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}},"拿":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"组":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}},"两":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"非":{"docs":{},"空":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"不":{"docs":{},"满":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"活":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"自":{"docs":{},"己":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}},"界":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471}},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}},"四":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"创":{"docs":{},"建":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}},"级":{"docs":{},"别":{"docs":{},"是":{"1":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}},"docs":{}}}},"给":{"docs":{},"以":{"docs":{},"给":{"docs":{},"线":{"docs":{},"程":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"响":{"docs":{},"亮":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"，":{"docs":{},"便":{"docs":{},"于":{"docs":{},"排":{"docs":{},"查":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"名":{"docs":{},"字":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}},"等":{"docs":{},"待":{"docs":{},"通":{"docs":{},"知":{"docs":{},"组":{"docs":{},"件":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"才":{"docs":{},"能":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"后":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"。":{"docs":{},"调":{"docs":{},"用":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"获":{"docs":{},"取":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"会":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"放":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"和":{"docs":{},"修":{"docs":{},"改":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"话":{"docs":{},"会":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"前":{"docs":{},"面":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"里":{"docs":{},"变":{"docs":{},"有":{"docs":{},"，":{"docs":{},"是":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"正":{"docs":{},"常":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"记":{"docs":{},"录":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"更":{"docs":{},"新":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"1":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"!":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"就":{"docs":{},"要":{"docs":{},"看":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"和":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"获":{"docs":{},"取":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"对":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"+":{"1":{"docs":{},"，":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"边":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"写":{"docs":{},"锁":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}},"读":{"docs":{},"锁":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}},"所":{"docs":{},"具":{"docs":{},"有":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"种":{"docs":{},"比":{"docs":{},"锁":{"docs":{},"更":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"通":{"docs":{},"信":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"j":{"docs":{},"s":{"docs":{},"r":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"效":{"docs":{},"果":{"docs":{},"：":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"写":{"docs":{},"和":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"释":{"docs":{},"放":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"；":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"读":{"docs":{},"与":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"。":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}},"设":{"docs":{},"置":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"名":{"docs":{},"字":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}},"线":{"docs":{},"程":{"docs":{},"最":{"docs":{},"高":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"是":{"docs":{},"多":{"docs":{},"少":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}},"组":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"占":{"docs":{},"用":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"权":{"docs":{},"限":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}}}}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"要":{"docs":{},"什":{"docs":{},"么":{"docs":{},"时":{"docs":{},"候":{"docs":{},"执":{"docs":{},"行":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}},"非":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"非":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"守":{"docs":{},"护":{"docs":{},"则":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"守":{"docs":{},"护":{"docs":{"第02章-并发编程基础/03-线程的一些属性.html":{"ref":"第02章-并发编程基础/03-线程的一些属性.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}}}}}}}}}}},"公":{"docs":{},"平":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"会":{"docs":{},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"饥":{"docs":{},"饿":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"获":{"docs":{},"取":{"docs":{},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"会":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"更":{"docs":{},"新":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"同":{"docs":{},"时":{"docs":{},"具":{"docs":{},"有":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"读":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"写":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"。":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"适":{"docs":{},"合":{"docs":{},"传":{"docs":{},"递":{"docs":{},"性":{"docs":{},"场":{"docs":{},"景":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}},"\"":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"不":{"docs":{},"够":{"docs":{},"了":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.016129032258064516}}}}}}}},"剩":{"docs":{},"下":{"docs":{},"\"":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.016129032258064516}}}}},"：":{"docs":{},"收":{"docs":{},"到":{"docs":{},"通":{"docs":{},"知":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"业":{"docs":{},"务":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"]":{"docs":{},"\"":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}},"]":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}},"任":{"docs":{},"务":{"docs":{},"被":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"了":{"docs":{},"哦":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"“":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"”":{"docs":{},"\"":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}},"了":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}},"第":{"2":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"里":{"docs":{},"的":{"docs":{},"值":{"docs":{},"\"":{"docs":{},";":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}}},"docs":{}}},"+":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.04838709677419355},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.017167381974248927},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.017467248908296942},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.01694915254237288},"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}},"=":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}},"b":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}},"通":{"docs":{},"知":{"docs":{},"者":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.030303030303030304},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.028629856850715747},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.02617801047120419},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.010344827586206896},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.047619047619047616},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.01877133105802048},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.005791505791505791}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"正":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"获":{"docs":{},"取":{"docs":{},"许":{"docs":{},"可":{"docs":{},"证":{"docs":{},"。":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}},"r":{"docs":{},")":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}},",":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.04}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.03225806451612903},"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421},"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":3.458333333333333}},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},"t":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}},"于":{"docs":{},"任":{"docs":{},"意":{"docs":{},"后":{"docs":{},"续":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"域":{"docs":{},"的":{"docs":{},"读":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}},"。":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"后":{"docs":{},"续":{"docs":{},"操":{"docs":{},"作":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}},"。":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}},"随":{"docs":{},"后":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"加":{"docs":{},"锁":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}},"。":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"从":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},".":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}},"b":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}},"关":{"docs":{},"系":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012},"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"与":{"docs":{},"按":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"种":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"并":{"docs":{},"不":{"docs":{},"非":{"docs":{},"法":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"平":{"docs":{},"台":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"按":{"docs":{},"照":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"来":{"docs":{},"阐":{"docs":{},"述":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"。":{"docs":{},"在":{"docs":{},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"可":{"docs":{},"见":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"间":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"存":{"docs":{},"在":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"介":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}},"规":{"docs":{},"则":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}},"：":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"将":{"docs":{},"对":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"可":{"docs":{},"见":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"前":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"u":{"docs":{},"p":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}},"e":{"docs":{},"r":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.043010752688172046}},"s":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"“":{"docs":{},"全":{"docs":{},"能":{"docs":{},"型":{"docs":{},"”":{"docs":{},"的":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"，":{"docs":{},"它":{"docs":{},"同":{"docs":{},"时":{"docs":{},"具":{"docs":{},"有":{"docs":{},"其":{"docs":{},"他":{"3":{"docs":{},"个":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{},"现":{"docs":{},"代":{"docs":{},"的":{"docs":{},"多":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"大":{"docs":{},"多":{"docs":{},"支":{"docs":{},"持":{"docs":{},"该":{"docs":{},"屏":{"docs":{},"障":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"）":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"表":{"docs":{},"示":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"多":{"docs":{},"用":{"docs":{},"于":{"docs":{},"系":{"docs":{},"统":{"docs":{},"监":{"docs":{},"控":{"docs":{},"可":{"docs":{},"问":{"docs":{},"题":{"docs":{},"排":{"docs":{},"查":{"docs":{},"，":{"docs":{},"书":{"docs":{},"上":{"docs":{},"说":{"docs":{},"的":{"docs":{},"，":{"docs":{},"我":{"docs":{},"也":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}},":":{"docs":{},"第":{"2":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"里":{"docs":{},"的":{"docs":{},"值":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}},"docs":{}}},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},")":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},":":{"1":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.010362694300518135}}},"docs":{}}}}}}}}}}},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.025906735751295335}}}}}},"，":{"docs":{},"且":{"docs":{},"b":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012},"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{},"并":{"docs":{},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"a":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"在":{"docs":{},"b":{"docs":{},"之":{"docs":{},"前":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"要":{"docs":{},"求":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"（":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"）":{"docs":{},"对":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"可":{"docs":{},"见":{"docs":{},"，":{"docs":{},"且":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"前":{"docs":{},"。":{"docs":{},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{},"允":{"docs":{},"许":{"docs":{},"这":{"docs":{},"种":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"_":{"0":{"2":{"docs":{},"_":{"0":{"4":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}}}}}}}},"docs":{}}},"5":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}},"docs":{}}},"6":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}},"2":{"docs":{},"_":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}},"3":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}},"docs":{}}},"8":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}},"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"3":{"docs":{},"_":{"0":{"2":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"a":{"docs":{},"q":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}},"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"docs":{},"_":{"0":{"1":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"6":{"docs":{},"_":{"0":{"2":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"x":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}},"2":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"x":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"7":{"docs":{},"_":{"0":{"2":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}}},"docs":{}}},"3":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}},"docs":{}}},"4":{"docs":{},"_":{"1":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"e":{"docs":{},")":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.04},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.013100436681222707},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"使":{"docs":{},"用":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"无":{"docs":{},"界":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"有":{"docs":{},"他":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"之":{"docs":{},"处":{"docs":{},"的":{"docs":{},",":{"docs":{},"所":{"docs":{},"以":{"docs":{},"看":{"docs":{},"一":{"docs":{},"看":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}},"（":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"）":{"docs":{},"方":{"docs":{},"式":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.016129032258064516},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"并":{"docs":{},"执":{"docs":{},"行":{"docs":{},"当":{"docs":{},"前":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"不":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"掉":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.010752688172043012},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.010273972602739725},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.020202020202020204},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.00408997955010225},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0182648401826484},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.010362694300518135}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"获":{"docs":{},"取":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315},"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0136986301369863}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":5.02}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"非":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"、":{"docs":{},"能":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"、":{"docs":{},"能":{"docs":{},"够":{"docs":{},"带":{"docs":{},"超":{"docs":{},"时":{"docs":{},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"口":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}},",":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}},"指":{"docs":{},"令":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"如":{"docs":{},"下":{"docs":{},"功":{"docs":{},"能":{"docs":{},"：":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}},":":{"2":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.025906735751295335}}},"docs":{}}}},"n":{"docs":{},"g":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.006818181818181818},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.007157464212678937},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.008583690987124463},"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.04},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.017467248908296942},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621},"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.023166023166023165}}}},"a":{"docs":{},"d":{"1":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.021505376344086023}},";":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.021505376344086023}}}},"2":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.043010752688172046}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}},";":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}},"e":{"docs":{},";":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"e":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"由":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"e":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"由":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"有":{"docs":{},"界":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}},"e":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"由":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"无":{"docs":{},"界":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"s":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.00684931506849315}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.02247191011235955}},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"3":{"2":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}},"docs":{}},"docs":{}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}},"假":{"docs":{},"设":{"1":{"docs":{},"不":{"docs":{},"加":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"执":{"docs":{},"行":{"docs":{},"到":{"2":{"docs":{},"这":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"已":{"docs":{},"经":{"docs":{},"释":{"docs":{},"放":{"docs":{},"了":{"docs":{},"，":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"，":{"docs":{},"所":{"docs":{},"可":{"docs":{},"能":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"此":{"docs":{},"时":{"docs":{},"有":{"docs":{},"别":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"（":{"docs":{},"线":{"docs":{},"程":{"docs":{},"b":{"docs":{},"）":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"了":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"又":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"或":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"还":{"docs":{},"是":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"他":{"docs":{},"没":{"docs":{},"有":{"docs":{},"感":{"docs":{},"知":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"b":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{},"a":{"docs":{},"b":{"docs":{},"两":{"docs":{},"个":{"docs":{},"人":{"docs":{},"从":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"账":{"docs":{},"户":{"docs":{},"里":{"docs":{},"取":{"docs":{},"钱":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"加":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"防":{"docs":{},"止":{"docs":{},"两":{"docs":{},"个":{"docs":{},"人":{"docs":{},"同":{"docs":{},"时":{"docs":{},"进":{"docs":{},"入":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"刻":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"（":{"docs":{},"记":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"t":{"docs":{},"）":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"并":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"无":{"docs":{},"法":{"docs":{},"感":{"docs":{},"知":{"docs":{},"线":{"docs":{},"程":{"docs":{},"t":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"即":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"锁":{"docs":{},"降":{"docs":{},"级":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"，":{"docs":{},"则":{"docs":{},"线":{"docs":{},"程":{"docs":{},"t":{"docs":{},"将":{"docs":{},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"使":{"docs":{},"用":{"docs":{},"数":{"docs":{},"据":{"docs":{},"并":{"docs":{},"释":{"docs":{},"放":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"t":{"docs":{},"才":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"进":{"docs":{},"行":{"docs":{},"数":{"docs":{},"据":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"已":{"docs":{},"经":{"docs":{},"有":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"了":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"操":{"docs":{},"作":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"加":{"docs":{},"在":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"上":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"类":{"docs":{},"的":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"正":{"docs":{},"的":{"docs":{},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"调":{"docs":{},"用":{"docs":{},"如":{"docs":{},"下":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"进":{"docs":{},"入":{"docs":{},"此":{"docs":{},"状":{"docs":{},"态":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}},"不":{"docs":{},"要":{"docs":{},"放":{"docs":{},"到":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"里":{"docs":{},"边":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"）":{"docs":{},"时":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"异":{"docs":{},"常":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"也":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"锁":{"docs":{},"无":{"docs":{},"故":{"docs":{},"释":{"docs":{},"放":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"，":{"docs":{},"和":{"docs":{},"执":{"docs":{},"行":{"docs":{},"非":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"比":{"docs":{},"仅":{"docs":{},"存":{"docs":{},"在":{"docs":{},"纳":{"docs":{},"秒":{"docs":{},"级":{"docs":{},"的":{"docs":{},"差":{"docs":{},"距":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"是":{"docs":{},"要":{"docs":{},"加":{"docs":{},"全":{"docs":{},"局":{"docs":{},"锁":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"资":{"docs":{},"源":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"性":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"有":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"控":{"docs":{},"制":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"共":{"docs":{},"享":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"此":{"docs":{},"为":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"如":{"docs":{},"果":{"docs":{},"i":{"docs":{},"是":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"就":{"docs":{},"不":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"。":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"和":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{"第02章-并发编程基础/04-线程同步.html":{"ref":"第02章-并发编程基础/04-线程同步.html","tf":0.005376344086021506},"第03章-锁/":{"ref":"第03章-锁/","tf":5.5},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"共":{"docs":{},"享":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"能":{"docs":{},"够":{"docs":{},"防":{"docs":{},"止":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"共":{"docs":{},"享":{"docs":{},"资":{"docs":{},"源":{"docs":{},"（":{"docs":{},"但":{"docs":{},"是":{"docs":{},"有":{"docs":{},"些":{"docs":{},"锁":{"docs":{},"可":{"docs":{},"以":{"docs":{},"允":{"docs":{},"许":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"发":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"共":{"docs":{},"享":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"）":{"docs":{},"。":{"docs":{},"本":{"docs":{},"章":{"docs":{},"将":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"如":{"docs":{},"何":{"docs":{},"使":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"。":{"docs":{"第03章-锁/":{"ref":"第03章-锁/","tf":0.5}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"般":{"docs":{},"都":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"了":{"docs":{},"解":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"就":{"docs":{},"会":{"docs":{},"用":{"docs":{},"锁":{"docs":{},"了":{"docs":{},"。":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"式":{"docs":{},"基":{"docs":{},"于":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"，":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"使":{"docs":{},"用":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":5.01010101010101}}}}}}},"降":{"docs":{},"级":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}},"是":{"docs":{},"指":{"docs":{},"把":{"docs":{},"持":{"docs":{},"住":{"docs":{},"（":{"docs":{},"当":{"docs":{},"前":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"的":{"docs":{},"）":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"再":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"随":{"docs":{},"后":{"docs":{},"释":{"docs":{},"放":{"docs":{},"（":{"docs":{},"先":{"docs":{},"前":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"的":{"docs":{},"）":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"升":{"docs":{},"级":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}},"对":{"docs":{},"比":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}},"级":{"docs":{},"别":{"docs":{},"低":{"docs":{},"到":{"docs":{},"高":{"docs":{},"：":{"docs":{},"无":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}},"机":{"docs":{},"制":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"只":{"docs":{},"有":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"能":{"docs":{},"够":{"docs":{},"操":{"docs":{},"作":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":5.1}}}}}}}}}},"o":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}},"b":{"docs":{},"j":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.010362694300518135}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}},"的":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"方":{"docs":{},"法":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}},"[":{"docs":{},"]":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.033707865168539325},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0091324200913242}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.012875536480686695}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}},"k":{"docs":{},".":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"就":{"docs":{},"是":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"指":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"得":{"docs":{},"验":{"docs":{},"证":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"一":{"docs":{},"直":{"docs":{},"往":{"docs":{},"下":{"docs":{},"找":{"docs":{},"才":{"docs":{},"行":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}},"w":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}},",":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}},":":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"别":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"（":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"例":{"docs":{},"如":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"s":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},",":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.03636363636363636}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}},"(":{"docs":{},")":{"docs":{},"：":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"：":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"a":{"docs":{},"d":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}},"t":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"从":{"docs":{},"里":{"docs":{},"边":{"docs":{},"提":{"docs":{},"取":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{},"。":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"干":{"docs":{},"不":{"docs":{},"完":{"docs":{},"的":{"docs":{},"需":{"docs":{},"求":{"docs":{},"（":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"放":{"docs":{},"在":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"（":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"）":{"docs":{},"里":{"docs":{},"排":{"docs":{},"队":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"研":{"docs":{},"发":{"docs":{},"部":{"docs":{},"都":{"docs":{},"配":{"docs":{},"置":{"docs":{},"有":{"docs":{},"骨":{"docs":{},"干":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"）":{"docs":{},"和":{"docs":{},"最":{"docs":{},"大":{"docs":{},"能":{"docs":{},"容":{"docs":{},"纳":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"数":{"docs":{},"量":{"docs":{},"（":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"）":{"docs":{},"。":{"docs":{},"具":{"docs":{},"体":{"docs":{},"要":{"docs":{},"做":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"就":{"docs":{},"是":{"docs":{},"产":{"docs":{},"品":{"docs":{},"的":{"docs":{},"需":{"docs":{},"求":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"他":{"docs":{},"是":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"有":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"；":{"docs":{},"同":{"docs":{},"时":{"docs":{},"有":{"docs":{},"继":{"docs":{},"承":{"docs":{},"了":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"他":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"这":{"docs":{},"么":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}},"是":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"启":{"docs":{},"动":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}},"被":{"docs":{},"装":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"（":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"）":{"docs":{},"里":{"docs":{},"边":{"docs":{},"，":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.015544041450777202}},"(":{"3":{"2":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.010362694300518135}}}}}}}},"docs":{}},"docs":{}},":":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}},"中":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"标":{"docs":{},"识":{"docs":{},"是":{"docs":{},"否":{"docs":{},"设":{"docs":{},"置":{"docs":{},"成":{"1":{"docs":{},"（":{"docs":{},"表":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"是":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"）":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"设":{"docs":{},"置":{"docs":{},"，":{"docs":{},"则":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"锁":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"设":{"docs":{},"置":{"docs":{},"了":{"docs":{},"，":{"docs":{},"则":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"指":{"docs":{},"向":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"锁":{"docs":{},"记":{"docs":{},"录":{"docs":{},"中":{"docs":{},"，":{"docs":{},"官":{"docs":{},"方":{"docs":{},"称":{"docs":{},"为":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{},"指":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"便":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"回":{"docs":{},"到":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"没":{"docs":{},"有":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"发":{"docs":{},"生":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"锁":{"docs":{},"存":{"docs":{},"在":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"会":{"docs":{},"膨":{"docs":{},"胀":{"docs":{},"成":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"么":{"docs":{},"重":{"docs":{},"新":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"于":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"到":{"docs":{},"无":{"docs":{},"锁":{"docs":{},"或":{"docs":{},"者":{"docs":{},"标":{"docs":{},"记":{"docs":{},"对":{"docs":{},"象":{"docs":{},"不":{"docs":{},"适":{"docs":{},"合":{"docs":{},"作":{"docs":{},"为":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"储":{"docs":{},"着":{"docs":{},"指":{"docs":{},"向":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"测":{"docs":{},"试":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"线":{"docs":{},"程":{"docs":{},"已":{"docs":{},"经":{"docs":{},"获":{"docs":{},"得":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"测":{"docs":{},"试":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"则":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"测":{"docs":{},"试":{"docs":{},"一":{"docs":{},"下":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"创":{"docs":{},"建":{"docs":{},"并":{"docs":{},"加":{"docs":{},"入":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"的":{"docs":{},"以":{"docs":{},"及":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"启":{"docs":{},"动":{"docs":{},"的":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}}}}}}}}},"c":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}},"仅":{"docs":{},"仅":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"处":{"docs":{},"于":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"（":{"docs":{},"随":{"docs":{},"机":{"docs":{},"）":{"docs":{},"会":{"docs":{},"进":{"docs":{},"入":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"（":{"docs":{},"锁":{"docs":{},"池":{"docs":{},"）":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"上":{"docs":{},"来":{"docs":{},"自":{"docs":{},"啃":{"docs":{},"碎":{"docs":{},"并":{"docs":{},"发":{"docs":{},"（":{"docs":{},"二":{"docs":{},"）":{"docs":{},"：":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"框":{"docs":{},"架":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"简":{"docs":{},"版":{"docs":{},"u":{"docs":{},"m":{"docs":{},"l":{"docs":{},"，":{"docs":{},"生":{"docs":{},"成":{"docs":{},"此":{"docs":{},"图":{"docs":{},"时":{"docs":{},"发":{"docs":{},"现":{"docs":{},"其":{"docs":{},"中":{"docs":{},"还":{"docs":{},"有":{"docs":{},"其":{"docs":{},"他":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"参":{"docs":{},"考":{"docs":{},"《":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"艺":{"docs":{},"术":{"docs":{},"》":{"docs":{},"移":{"docs":{},"除":{"docs":{},"了":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"这":{"docs":{},"些":{"docs":{},"是":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"东":{"docs":{},"西":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"周":{"docs":{},"期":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}},"固":{"docs":{},"定":{"docs":{},"时":{"docs":{},"间":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"走":{"docs":{},"这":{"docs":{},"里":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}},"频":{"docs":{},"率":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"走":{"docs":{},"这":{"docs":{},"里":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}},"关":{"docs":{},"于":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"和":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}},"这":{"docs":{},"些":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"姿":{"docs":{},"势":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"看":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"源":{"docs":{},"码":{"docs":{},"就":{"docs":{},"好":{"docs":{},"了":{"docs":{},"，":{"docs":{},"里":{"docs":{},"边":{"docs":{},"应":{"docs":{},"该":{"docs":{},"不":{"docs":{},"少":{"docs":{},"的":{"docs":{},"。":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"不":{"docs":{},"看":{"docs":{},"了":{"docs":{},"，":{"docs":{},"用":{"docs":{},"到":{"docs":{},"再":{"docs":{},"说":{"docs":{},"，":{"docs":{},"知":{"docs":{},"道":{"docs":{},"有":{"docs":{},"这":{"docs":{},"么":{"docs":{},"个":{"docs":{},"东":{"docs":{},"西":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"闭":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}},"延":{"docs":{},"迟":{"docs":{},"：":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}},"和":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"加":{"docs":{},"入":{"docs":{},"了":{"docs":{},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"超":{"docs":{},"时":{"docs":{},"了":{"docs":{},"还":{"docs":{},"没":{"docs":{},"被":{"docs":{},"通":{"docs":{},"知":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"普":{"docs":{},"通":{"docs":{},"队":{"docs":{},"列":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"他":{"docs":{},"的":{"docs":{},"释":{"docs":{},"放":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"释":{"docs":{},"放":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"时":{"docs":{},"天":{"docs":{},"然":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"而":{"docs":{},"共":{"docs":{},"享":{"docs":{},"式":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"释":{"docs":{},"放":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"就":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"+":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{},"队":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"出":{"docs":{},"队":{"docs":{},"了":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"是":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"无":{"docs":{},"论":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"是":{"docs":{},"否":{"docs":{},"接":{"docs":{},"收":{"docs":{},"，":{"docs":{},"方":{"docs":{},"法":{"docs":{},"立":{"docs":{},"即":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"而":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"必":{"docs":{},"须":{"docs":{},"等":{"docs":{},"到":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"消":{"docs":{},"费":{"docs":{},"了":{"docs":{},"才":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"唤":{"docs":{},"醒":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}},"等":{"docs":{},"待":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}},"的":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}},"在":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"上":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"等":{"docs":{},"待":{"docs":{},"在":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"上":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"于":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"会":{"docs":{},"全":{"docs":{},"部":{"docs":{},"进":{"docs":{},"入":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"（":{"docs":{},"锁":{"docs":{},"池":{"docs":{},"）":{"docs":{},"中":{"docs":{},"，":{"docs":{},"准":{"docs":{},"备":{"docs":{},"争":{"docs":{},"夺":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"权":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"另":{"docs":{},"外":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"相":{"docs":{},"同":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"理":{"docs":{},"业":{"docs":{},"务":{"docs":{},"逻":{"docs":{},"辑":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}},"器":{"docs":{},"对":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"并":{"docs":{},"进":{"docs":{},"入":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"将":{"docs":{},"会":{"docs":{},"以":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"构":{"docs":{},"造":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"节":{"docs":{},"点":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"加":{"docs":{},"入":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"否":{"docs":{},"超":{"docs":{},"出":{"docs":{},"了":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"释":{"docs":{},"放":{"docs":{},"时":{"docs":{},"就":{"docs":{},"通":{"docs":{},"知":{"docs":{},"他":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"获":{"docs":{},"取":{"docs":{},"成":{"docs":{},"功":{"docs":{},"就":{"docs":{},"把":{"docs":{},"自":{"docs":{},"己":{"docs":{},"这":{"docs":{},"只":{"docs":{},"为":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"写":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"时":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}},"读":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"时":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"读":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"并":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"在":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"和":{"docs":{},"栈":{"docs":{},"帧":{"docs":{},"中":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"记":{"docs":{},"录":{"docs":{},"里":{"docs":{},"存":{"docs":{},"储":{"docs":{},"锁":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"i":{"docs":{},"d":{"docs":{},"，":{"docs":{},"以":{"docs":{},"后":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"和":{"docs":{},"退":{"docs":{},"出":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"时":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"来":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"简":{"docs":{},"单":{"docs":{},"地":{"docs":{},"测":{"docs":{},"试":{"docs":{},"一":{"docs":{},"下":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"试":{"docs":{},"图":{"docs":{},"访":{"docs":{},"问":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"首":{"docs":{},"先":{"docs":{},"必":{"docs":{},"须":{"docs":{},"得":{"docs":{},"到":{"docs":{},"锁":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"这":{"docs":{},"里":{"docs":{},"边":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"记":{"docs":{},"录":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"我":{"docs":{},"也":{"docs":{},"没":{"docs":{},"细":{"docs":{},"看":{"docs":{},"，":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"难":{"docs":{},"度":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"的":{"docs":{},"（":{"docs":{},"似":{"docs":{},"乎":{"docs":{},"说":{"docs":{},"的":{"docs":{},"矛":{"docs":{},"盾":{"docs":{},"了":{"docs":{},"）":{"docs":{},"，":{"docs":{},"一":{"docs":{},"些":{"docs":{},"细":{"docs":{},"节":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"还":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"精":{"docs":{},"妙":{"docs":{},"值":{"docs":{},"得":{"docs":{},"学":{"docs":{},"习":{"docs":{},"的":{"docs":{},"。":{"docs":{},"还":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"只":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"表":{"docs":{},"示":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"状":{"docs":{},"态":{"docs":{},"和":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"呢":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"做":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"界":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"时":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"首":{"docs":{},"先":{"docs":{},"获":{"docs":{},"得":{"docs":{},"与":{"docs":{},"它":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"锁":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"不":{"docs":{},"可":{"docs":{},"用":{"docs":{},"时":{"docs":{},"（":{"docs":{},"向":{"docs":{},"满":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"插":{"docs":{},"入":{"docs":{},"，":{"docs":{},"从":{"docs":{},"空":{"docs":{},"队":{"docs":{},"列":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"）":{"docs":{},"，":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"四":{"docs":{},"种":{"docs":{},"处":{"docs":{},"理":{"docs":{},"方":{"docs":{},"式":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"都":{"docs":{},"已":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"后":{"docs":{},"，":{"docs":{},"才":{"docs":{},"表":{"docs":{},"示":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"调":{"docs":{},"用":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"产":{"docs":{},"品":{"docs":{},"给":{"docs":{},"这":{"docs":{},"个":{"docs":{},"研":{"docs":{},"发":{"docs":{},"部":{"docs":{},"提":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"求":{"docs":{},"时":{"docs":{},"（":{"docs":{},"当":{"docs":{},"然":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"不":{"docs":{},"会":{"docs":{},"只":{"docs":{},"提":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"会":{"docs":{},"不":{"docs":{},"断":{"docs":{},"的":{"docs":{},"提":{"docs":{},"需":{"docs":{},"求":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"以":{"docs":{},"提":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"求":{"docs":{},"为":{"docs":{},"例":{"docs":{},"）":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"将":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{},"写":{"docs":{},"回":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"内":{"docs":{},"存":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"首":{"docs":{},"先":{"docs":{},"会":{"docs":{},"检":{"docs":{},"查":{"docs":{},"这":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"，":{"docs":{},"则":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{},"写":{"docs":{},"回":{"docs":{},"到":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"写":{"docs":{},"回":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"被":{"docs":{},"称":{"docs":{},"作":{"docs":{},"写":{"docs":{},"命":{"docs":{},"中":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"识":{"docs":{},"别":{"docs":{},"到":{"docs":{},"从":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"可":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"。":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"读":{"docs":{},"取":{"docs":{},"整":{"docs":{},"个":{"docs":{},"高":{"docs":{},"速":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"到":{"docs":{},"适":{"docs":{},"当":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"（":{"docs":{},"l":{"1":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"到":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"指":{"docs":{},"令":{"docs":{},"时":{"docs":{},"会":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"得":{"docs":{},"对":{"docs":{},"象":{"docs":{},"对":{"docs":{},"用":{"docs":{},"的":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"权":{"docs":{},"，":{"docs":{},"即":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"未":{"docs":{},"正":{"docs":{},"确":{"docs":{},"同":{"docs":{},"步":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"存":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}},"改":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":0.1}},"变":{"docs":{},"条":{"docs":{},"件":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}},"模":{"docs":{},"型":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}},"拟":{"docs":{},"生":{"docs":{},"产":{"docs":{},"数":{"docs":{},"据":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}},"满":{"docs":{},"了":{"docs":{},"就":{"docs":{},"等":{"docs":{},"待":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}},"放":{"docs":{},"到":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}},"继":{"docs":{},"续":{"docs":{},"插":{"docs":{},"入":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"：":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"有":{"docs":{},"空":{"docs":{},"位":{"docs":{},"或":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}},"生":{"docs":{},"产":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}},"队":{"docs":{},"列":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"消":{"docs":{},"费":{"docs":{},"队":{"docs":{},"列":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"这":{"docs":{},"和":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"普":{"docs":{},"通":{"docs":{},"队":{"docs":{},"列":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"没":{"docs":{},"两":{"docs":{},"样":{"docs":{},"了":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"活":{"docs":{},"还":{"docs":{},"要":{"docs":{},"继":{"docs":{},"续":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}},"示":{"docs":{},"例":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575},"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}},"空":{"docs":{},"了":{"docs":{},"就":{"docs":{},"等":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}},"继":{"docs":{},"续":{"docs":{},"出":{"docs":{},"队":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"：":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"或":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"/":{"docs":{},"通":{"docs":{},"知":{"docs":{},"的":{"docs":{},"相":{"docs":{},"关":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"任":{"docs":{},"意":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"具":{"docs":{},"备":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"超":{"docs":{},"类":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"上":{"docs":{},"。":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"中":{"docs":{},"不":{"docs":{},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}},"者":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}},"通":{"docs":{},"知":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}},"队":{"docs":{},"列":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"个":{"docs":{},"数":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}},"（":{"docs":{},"等":{"docs":{},"待":{"docs":{},"池":{"docs":{},"）":{"docs":{},"：":{"docs":{},"假":{"docs":{},"设":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"某":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"就":{"docs":{},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"必":{"docs":{},"须":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"自":{"docs":{},"然":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"之":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"a":{"docs":{},"就":{"docs":{},"已":{"docs":{},"经":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"了":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"）":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"有":{"docs":{},"机":{"docs":{},"会":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}},"价":{"docs":{},"上":{"docs":{},"面":{"docs":{},"那":{"docs":{},"个":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}},"纳":{"docs":{},"秒":{"docs":{},"级":{"docs":{},"，":{"docs":{},"不":{"docs":{},"常":{"docs":{},"用":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}},"进":{"docs":{},"入":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"到":{"docs":{},"将":{"docs":{},"来":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"时":{"docs":{},"间":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}},"通":{"docs":{},"知":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"使":{"docs":{},"其":{"docs":{},"从":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"而":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"是":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"了":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"所":{"docs":{},"有":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"使":{"docs":{},"其":{"docs":{},"从":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}}}}}},"者":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"，":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"可":{"docs":{},"以":{"docs":{},"消":{"docs":{},"费":{"docs":{},"了":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}},"过":{"docs":{},"总":{"docs":{},"线":{"docs":{},"锁":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}},"信":{"docs":{},"是":{"docs":{},"指":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"以":{"docs":{},"何":{"docs":{},"种":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"交":{"docs":{},"换":{"docs":{},"信":{"docs":{},"息":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}},"释":{"docs":{},"放":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"锁":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}},"进":{"docs":{},"入":{"docs":{},"超":{"docs":{},"时":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}}}}}}}}},"：":{"docs":{},"释":{"docs":{},"放":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"呢":{"docs":{},"就":{"docs":{},"是":{"docs":{},"读":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}},"项":{"docs":{},"目":{"docs":{"第02章-并发编程基础/05-线程间的通信.html":{"ref":"第02章-并发编程基础/05-线程间的通信.html","tf":0.003424657534246575}}}},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}},"主":{"docs":{},"线":{"docs":{},"程":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"主":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"直":{"docs":{},"到":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"进":{"docs":{},"来":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"，":{"docs":{},"主":{"docs":{},"线":{"docs":{},"程":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"保":{"docs":{},"证":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"获":{"docs":{},"取":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"而":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"释":{"docs":{},"放":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"，":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"括":{"docs":{},"如":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}},"也":{"docs":{},"是":{"docs":{},"让":{"docs":{},"线":{"docs":{},"程":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"是":{"docs":{},"进":{"docs":{},"入":{"docs":{},"就":{"docs":{},"绪":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"让":{"docs":{},"系":{"docs":{},"统":{"docs":{},"重":{"docs":{},"新":{"docs":{},"开":{"docs":{},"始":{"docs":{},"一":{"docs":{},"次":{"docs":{},"新":{"docs":{},"的":{"docs":{},"调":{"docs":{},"度":{"docs":{},"过":{"docs":{},"程":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"达":{"docs":{},"到":{"docs":{},"一":{"docs":{},"定":{"docs":{},"时":{"docs":{},"间":{"docs":{},"还":{"docs":{},"没":{"docs":{},"成":{"docs":{},"功":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"值":{"docs":{},"了":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"子":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}},"如":{"docs":{},"将":{"docs":{},"纸":{"docs":{},"制":{"docs":{},"银":{"docs":{},"行":{"docs":{},"流":{"docs":{},"水":{"docs":{},"通":{"docs":{},"过":{"docs":{},"人":{"docs":{},"工":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"录":{"docs":{},"入":{"docs":{},"成":{"docs":{},"电":{"docs":{},"子":{"docs":{},"银":{"docs":{},"行":{"docs":{},"流":{"docs":{},"水":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"采":{"docs":{},"用":{"docs":{},"a":{"docs":{},"b":{"docs":{},"岗":{"docs":{},"两":{"docs":{},"人":{"docs":{},"进":{"docs":{},"行":{"docs":{},"录":{"docs":{},"入":{"docs":{},"，":{"docs":{},"录":{"docs":{},"入":{"docs":{},"到":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"系":{"docs":{},"统":{"docs":{},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"载":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"，":{"docs":{},"并":{"docs":{},"对":{"docs":{},"两":{"docs":{},"个":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"校":{"docs":{},"对":{"docs":{},"，":{"docs":{},"看":{"docs":{},"看":{"docs":{},"是":{"docs":{},"否":{"docs":{},"录":{"docs":{},"入":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"考":{"docs":{},"了":{"docs":{},"《":{"docs":{},"疯":{"docs":{},"狂":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"讲":{"docs":{},"义":{"docs":{},"》":{"docs":{},"的":{"docs":{},"提":{"docs":{},"法":{"docs":{},"，":{"docs":{},"将":{"docs":{},"如":{"docs":{},"下":{"docs":{},"内":{"docs":{},"容":{"docs":{},"归":{"docs":{},"为":{"docs":{},"控":{"docs":{},"制":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"资":{"docs":{},"料":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}},"控":{"docs":{},"制":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":5.008}}}}}},"睡":{"docs":{},"觉":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"线":{"docs":{},"程":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"进":{"docs":{},"入":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"已":{"docs":{},"处":{"docs":{},"理":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"处":{"docs":{},"理":{"docs":{},"或":{"docs":{},"者":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"去":{"docs":{},"。":{"docs":{"第02章-并发编程基础/06-控制线程.html":{"ref":"第02章-并发编程基础/06-控制线程.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"，":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"返":{"docs":{},"回":{"3":{"docs":{},".":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}},"docs":{}}}}}}}}}}}},"《":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"艺":{"docs":{},"术":{"docs":{},"》":{"docs":{},"里":{"docs":{},"边":{"docs":{},"有":{"7":{"docs":{},"中":{"docs":{},"状":{"docs":{},"态":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}},"docs":{},"个":{"docs":{},"图":{"docs":{},"，":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"获":{"docs":{},"取":{"docs":{},"流":{"docs":{},"程":{"docs":{},"说":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"清":{"docs":{},"晰":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"疯":{"docs":{},"狂":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"讲":{"docs":{},"义":{"docs":{},"》":{"docs":{},"里":{"docs":{},"边":{"docs":{},"只":{"docs":{},"有":{"5":{"docs":{},"中":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"缺":{"docs":{},"少":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"和":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"啃":{"docs":{},"碎":{"docs":{},"并":{"docs":{},"发":{"docs":{},"（":{"docs":{},"二":{"docs":{},"）":{"docs":{},"：":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"定":{"docs":{},"等":{"docs":{},"待":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}},"成":{"docs":{},"功":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"了":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"了":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"重":{"docs":{},"进":{"docs":{},"入":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"它":{"docs":{},"表":{"docs":{},"示":{"docs":{},"该":{"docs":{},"锁":{"docs":{},"能":{"docs":{},"够":{"docs":{},"支":{"docs":{},"持":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"除":{"docs":{},"此":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"该":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"还":{"docs":{},"支":{"docs":{},"持":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"的":{"docs":{},"公":{"docs":{},"平":{"docs":{},"和":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"性":{"docs":{},"选":{"docs":{},"择":{"docs":{},"。":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"相":{"docs":{},"反":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}},"像":{"docs":{},"跑":{"docs":{},"步":{"docs":{},"比":{"docs":{},"赛":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"人":{"docs":{},"都":{"docs":{},"从":{"docs":{},"各":{"docs":{},"自":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"到":{"docs":{},"达":{"docs":{},"起":{"docs":{},"跑":{"docs":{},"线":{"docs":{},"，":{"docs":{},"到":{"docs":{},"达":{"docs":{},"后":{"docs":{},"跟":{"docs":{},"裁":{"docs":{},"判":{"docs":{},"说":{"docs":{},"一":{"docs":{},"声":{"docs":{},"，":{"docs":{},"当":{"docs":{},"所":{"docs":{},"有":{"docs":{},"人":{"docs":{},"到":{"docs":{},"奇":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"裁":{"docs":{},"判":{"docs":{},"会":{"docs":{},"发":{"docs":{},"出":{"docs":{},"信":{"docs":{},"号":{"docs":{},"，":{"docs":{},"大":{"docs":{},"家":{"docs":{},"一":{"docs":{},"起":{"docs":{},"跑":{"docs":{},"。":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"结":{"docs":{},"束":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}},"调":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"里":{"docs":{},"边":{"docs":{},"可":{"docs":{},"以":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"异":{"docs":{},"常":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"可":{"docs":{},"以":{"docs":{},"交":{"docs":{},"给":{"docs":{},"不":{"docs":{},"同":{"docs":{},"规":{"docs":{},"模":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"理":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"务":{"docs":{},"前":{"docs":{},"调":{"docs":{},"用":{"docs":{},"一":{"docs":{},"下":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"，":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}},"的":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"的":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"，":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"如":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}},"较":{"docs":{},"交":{"docs":{},"换":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"多":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"的":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"直":{"docs":{},"接":{"docs":{},"移":{"docs":{},"除":{"docs":{},"就":{"docs":{},"好":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"加":{"docs":{},"超":{"docs":{},"时":{"docs":{},"参":{"docs":{},"数":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.025}}}}}}},"太":{"docs":{},"大":{"docs":{},"区":{"docs":{},"别":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"他":{"docs":{},"加":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"对":{"docs":{},"队":{"docs":{},"列":{"docs":{},"后":{"docs":{},"会":{"docs":{},"算":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"=":{"docs":{},"当":{"docs":{},"前":{"docs":{},"时":{"docs":{},"间":{"docs":{},"+":{"docs":{},"你":{"docs":{},"允":{"docs":{},"许":{"docs":{},"的":{"docs":{},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"检":{"docs":{},"查":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"无":{"docs":{},"限":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"可":{"docs":{},"写":{"docs":{},"的":{"docs":{},"了":{"docs":{},"，":{"docs":{},"列":{"docs":{},"个":{"docs":{},"标":{"docs":{},"题":{"docs":{},"，":{"docs":{},"猜":{"docs":{},"也":{"docs":{},"能":{"docs":{},"猜":{"docs":{},"到":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"的":{"docs":{},"了":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"占":{"docs":{},"用":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"释":{"docs":{},"放":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"抛":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"必":{"docs":{},"须":{"docs":{},"式":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"能":{"docs":{},"释":{"docs":{},"放":{"docs":{},"他":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"可":{"docs":{},"运":{"docs":{},"行":{"docs":{},"（":{"docs":{},"大":{"docs":{},"家":{"docs":{},"的":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"就":{"docs":{},"绪":{"docs":{},"）":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"正":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"他":{"docs":{},"可":{"docs":{},"能":{"docs":{},"需":{"docs":{},"要":{"docs":{},"等":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"分":{"docs":{},"配":{"docs":{},"资":{"docs":{},"源":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"锁":{"docs":{},"以":{"docs":{},"便":{"docs":{},"重":{"docs":{},"新":{"docs":{},"进":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"锁":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}},"剩":{"docs":{},"余":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"，":{"0":{"docs":{},"表":{"docs":{},"示":{"docs":{},"没":{"docs":{},"有":{"docs":{},"了":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"阻":{"docs":{},"塞":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"要":{"docs":{},"是":{"docs":{},"早":{"docs":{},"点":{"docs":{},"发":{"docs":{},"现":{"docs":{},"这":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"也":{"docs":{},"不":{"docs":{},"用":{"docs":{},"费":{"docs":{},"劲":{"docs":{},"在":{"docs":{},"《":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"并":{"docs":{},"发":{"docs":{},"编":{"docs":{},"程":{"docs":{},"艺":{"docs":{},"术":{"docs":{},"》":{"docs":{},"和":{"docs":{},"《":{"docs":{},"疯":{"docs":{},"狂":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"讲":{"docs":{},"义":{"docs":{},"》":{"docs":{},"以":{"docs":{},"及":{"docs":{},"各":{"docs":{},"种":{"docs":{},"博":{"docs":{},"客":{"docs":{},"找":{"docs":{},"资":{"docs":{},"料":{"docs":{},"了":{"docs":{},"。":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"改":{"docs":{},"那":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}},"求":{"docs":{},"：":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"把":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"至":{"docs":{},"多":{"docs":{},"三":{"docs":{},"个":{"docs":{},"（":{"docs":{},"书":{"docs":{},"上":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"，":{"docs":{},"咱":{"docs":{},"们":{"docs":{},"变":{"docs":{},"化":{"docs":{},"下":{"docs":{},"，":{"docs":{},"哈":{"docs":{},"哈":{"docs":{},"）":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"得":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}},"多":{"docs":{},"多":{"docs":{},"联":{"docs":{},"想":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"他":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"和":{"docs":{},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"既":{"docs":{},"表":{"docs":{},"示":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"又":{"docs":{},"表":{"docs":{},"示":{"docs":{},"读":{"docs":{},"状":{"docs":{},"态":{"docs":{},"十":{"docs":{},"分":{"docs":{},"相":{"docs":{},"似":{"docs":{},"。":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"继":{"docs":{},"承":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"能":{"docs":{},"让":{"docs":{},"你":{"docs":{},"想":{"docs":{},"起":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"的":{"docs":{},"种":{"docs":{},"种":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"面":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"注":{"docs":{},"释":{"docs":{},"，":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"。":{"docs":{"第02章-并发编程基础/07-线程的生命周期.html":{"ref":"第02章-并发编程基础/07-线程的生命周期.html","tf":0.0125}}}}}}}}}}}}}},"是":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"来":{"docs":{},"存":{"docs":{},"放":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"，":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676}},"=":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.015909090909090907},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.005112474437627812},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.008583690987124463},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.010471204188481676},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.02413793103448276},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.03278688524590164},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.010238907849829351}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"是":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"，":{"docs":{},"证":{"docs":{},"明":{"docs":{},"有":{"docs":{},"比":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"等":{"docs":{},"待":{"docs":{},"时":{"docs":{},"间":{"docs":{},"长":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"此":{"docs":{},"时":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"等":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},",":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.006818181818181818}},"&":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.005112474437627812},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.006896551724137931},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.013651877133105802},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.007722007722007722}}}},"*":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.006818181818181818},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.05172413793103448}},"/":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.017241379310344827}}}},"h":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.008583690987124463}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}},"都":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"无":{"docs":{},"非":{"docs":{},"就":{"docs":{},"是":{"docs":{},"引":{"docs":{},"用":{"docs":{},"指":{"docs":{},"来":{"docs":{},"指":{"docs":{},"去":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"他":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.010362694300518135}}}}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}},"v":{"docs":{},"y":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}},"l":{"docs":{},"p":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"a":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"用":{"docs":{},"于":{"docs":{},"存":{"docs":{},"储":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"效":{"docs":{},"率":{"docs":{},"低":{"docs":{},"下":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}},"是":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"包":{"docs":{},"下":{"docs":{},"边":{"docs":{},"的":{"docs":{},",":{"docs":{},"去":{"docs":{},"源":{"docs":{},"码":{"docs":{},"搜":{"docs":{},"一":{"docs":{},"个":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"他":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"就":{"docs":{},"是":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"时":{"docs":{},"，":{"docs":{},"大":{"docs":{},"家":{"docs":{},"都":{"docs":{},"要":{"docs":{},"等":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"时":{"docs":{},"也":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"效":{"docs":{},"率":{"docs":{},"低":{"docs":{},"。":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"：":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"和":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"都":{"docs":{},"满":{"docs":{},"了":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{},"饱":{"docs":{},"和":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"必":{"docs":{},"须":{"docs":{},"采":{"docs":{},"取":{"docs":{},"一":{"docs":{},"种":{"docs":{},"策":{"docs":{},"略":{"docs":{},"处":{"docs":{},"理":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"新":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"策":{"docs":{},"略":{"docs":{},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"是":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"无":{"docs":{},"法":{"docs":{},"处":{"docs":{},"理":{"docs":{},"新":{"docs":{},"任":{"docs":{},"务":{"docs":{},"时":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"有":{"docs":{},"几":{"docs":{},"种":{"docs":{},"默":{"docs":{},"认":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"策":{"docs":{},"略":{"docs":{},"如":{"docs":{},"下":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.03225806451612903},"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421},"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":3.458333333333333}}}}}}},"i":{"docs":{},"t":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.03636363636363636}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},")":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.004545454545454545},"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726},"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.006818181818181818}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"：":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.010362694300518135}}}}}}},"伪":{"docs":{},"码":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}},"你":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"他":{"docs":{},"是":{"docs":{},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"实":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"看":{"docs":{},"作":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"研":{"docs":{},"发":{"docs":{},"部":{"docs":{},"门":{"docs":{},"，":{"docs":{},"研":{"docs":{},"发":{"docs":{},"部":{"docs":{},"门":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"（":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"结":{"docs":{},"构":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}},"是":{"docs":{},"用":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"维":{"docs":{},"护":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"：":{"docs":{},"由":{"docs":{},"于":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"使":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"和":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"，":{"docs":{},"这":{"docs":{},"使":{"docs":{},"得":{"docs":{},"加":{"docs":{},"载":{"docs":{},"和":{"docs":{},"存":{"docs":{},"储":{"docs":{},"操":{"docs":{},"作":{"docs":{},"看":{"docs":{},"上":{"docs":{},"去":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"在":{"docs":{},"乱":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"语":{"docs":{},"义":{"docs":{},"总":{"docs":{},"结":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":0.1}}}}}}}},"发":{"docs":{},"现":{"docs":{},"他":{"docs":{},"和":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"长":{"docs":{},"得":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"重":{"docs":{},"写":{"docs":{},"了":{"docs":{},"三":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"由":{"docs":{},"此":{"docs":{},"看":{"docs":{},"来":{"docs":{},"关":{"docs":{},"键":{"docs":{},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"父":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"东":{"docs":{},"西":{"docs":{},"到":{"docs":{},"自":{"docs":{},"己":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"里":{"docs":{},"边":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"是":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}},"总":{"docs":{},"结":{"docs":{},"一":{"docs":{},"下":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"用":{"docs":{},"法":{"docs":{},"：":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"使":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"，":{"docs":{},"个":{"docs":{},"人":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"第":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"看":{"docs":{},"是":{"docs":{},"一":{"docs":{},"定":{"docs":{},"不":{"docs":{},"能":{"docs":{},"沉":{"docs":{},"溺":{"docs":{},"于":{"docs":{},"细":{"docs":{},"节":{"docs":{},"的":{"docs":{},"，":{"docs":{},"他":{"docs":{},"会":{"docs":{},"让":{"docs":{},"你":{"docs":{},"迷":{"docs":{},"惘":{"docs":{},"和":{"docs":{},"丧":{"docs":{},"失":{"docs":{},"信":{"docs":{},"心":{"docs":{},"；":{"docs":{},"第":{"docs":{},"二":{"docs":{},"遍":{"docs":{},"、":{"docs":{},"第":{"docs":{},"三":{"docs":{},"遍":{"docs":{},"可":{"docs":{},"以":{"docs":{},"关":{"docs":{},"注":{"docs":{},"一":{"docs":{},"下":{"docs":{},"细":{"docs":{},"节":{"docs":{},"，":{"docs":{},"感":{"docs":{},"受":{"docs":{},"大":{"docs":{},"师":{"docs":{},"级":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"美":{"docs":{},"妙":{"docs":{},"之":{"docs":{},"处":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"笔":{"docs":{},"者":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"粗":{"docs":{},"略":{"docs":{},"看":{"docs":{},"了":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"（":{"docs":{},"逃":{"docs":{},"~":{"docs":{},"）":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}},"'":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"'":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.015444015444015444}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"里":{"docs":{},"面":{"docs":{},"搜":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"搬":{"docs":{},"书":{"docs":{},"上":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}},"从":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"里":{"docs":{},"边":{"docs":{},"移":{"docs":{},"除":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"你":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"搞":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"出":{"docs":{},"来":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"来":{"docs":{},"现":{"docs":{},"在":{"docs":{},"得":{"docs":{},"看":{"docs":{},"看":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"了":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"下":{"docs":{},"这":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}},"他":{"docs":{},"的":{"docs":{},"入":{"docs":{},"队":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}},"看":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}},"你":{"docs":{},"是":{"docs":{},"要":{"docs":{},"创":{"docs":{},"建":{"docs":{},"核":{"docs":{},"心":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"还":{"docs":{},"是":{"docs":{},"普":{"docs":{},"通":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}},"源":{"docs":{},"码":{"docs":{},"一":{"docs":{},"定":{"docs":{},"不":{"docs":{},"要":{"docs":{},"过":{"docs":{},"分":{"docs":{},"纠":{"docs":{},"结":{"docs":{},"细":{"docs":{},"节":{"docs":{},"，":{"docs":{},"就":{"docs":{},"像":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"我":{"docs":{},"看":{"docs":{},"网":{"docs":{},"上":{"docs":{},"很":{"docs":{},"多":{"docs":{},"文":{"docs":{},"章":{"docs":{},"去":{"docs":{},"算":{"docs":{},"那":{"docs":{},"几":{"docs":{},"个":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"，":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"是":{"docs":{},"在":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"抓":{"docs":{},"住":{"docs":{},"重":{"docs":{},"点":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"开":{"docs":{},"始":{"docs":{},"时":{"docs":{},"间":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}},"耗":{"docs":{},"时":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}},"超":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"不":{"docs":{},"要":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"了":{"docs":{},"，":{"docs":{},"改":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"级":{"docs":{},"简":{"docs":{},"单":{"docs":{},",":{"docs":{},"不":{"docs":{},"多":{"docs":{},"说":{"docs":{"第02章-并发编程基础/08-ThreadLocal.html":{"ref":"第02章-并发编程基础/08-ThreadLocal.html","tf":0.0022727272727272726}}}}}},"~":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":0.011111111111111112}}}}}},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"到":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"1":{"docs":{},".":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}},"docs":{}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"会":{"docs":{},"根":{"docs":{},"据":{"docs":{},"你":{"docs":{},"给":{"docs":{},"的":{"docs":{},"超":{"docs":{},"时":{"docs":{},"时":{"docs":{},"间":{"docs":{},"算":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{},"每":{"docs":{},"次":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"都":{"docs":{},"检":{"docs":{},"查":{"docs":{},"是":{"docs":{},"否":{"docs":{},"超":{"docs":{},"出":{"docs":{},"了":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"，":{"docs":{},"超":{"docs":{},"出":{"docs":{},"了":{"docs":{},"直":{"docs":{},"接":{"docs":{},"获":{"docs":{},"取":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"退":{"docs":{},"出":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744}}}}},"出":{"docs":{},"了":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{"第02章-并发编程基础/09-原子类.html":{"ref":"第02章-并发编程基础/09-原子类.html","tf":5.011111111111111}}},"操":{"docs":{},"作":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":5.038461538461538}}}}}}}}}},"理":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"区":{"docs":{},"别":{"docs":{},"就":{"docs":{},"是":{"docs":{},"写":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"判":{"docs":{},"断":{"docs":{},"存":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"存":{"docs":{},"在":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"才":{"docs":{},"会":{"docs":{},"复":{"docs":{},"制":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"析":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}},"是":{"docs":{},"部":{"docs":{},"分":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"是":{"6":{"4":{"docs":{},"字":{"docs":{},"节":{"docs":{},"宽":{"docs":{},"，":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"部":{"docs":{},"分":{"docs":{},"填":{"docs":{},"充":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"队":{"docs":{},"头":{"docs":{},"和":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"不":{"docs":{},"足":{"6":{"4":{"docs":{},"字":{"docs":{},"节":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"会":{"docs":{},"进":{"docs":{},"到":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"试":{"docs":{},"图":{"docs":{},"修":{"docs":{},"改":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"将":{"docs":{},"整":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"机":{"docs":{},"制":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"下":{"docs":{},"，":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"其":{"docs":{},"他":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"不":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"自":{"docs":{},"己":{"docs":{},"高":{"docs":{},"速":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"。":{"docs":{},"而":{"docs":{},"首":{"docs":{},"尾":{"docs":{},"巴":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"时":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"，":{"docs":{},"放":{"docs":{},"到":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"会":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"，":{"docs":{},"造":{"docs":{},"成":{"docs":{},"出":{"docs":{},"队":{"docs":{},"和":{"docs":{},"入":{"docs":{},"队":{"docs":{},"效":{"docs":{},"率":{"docs":{},"低":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"追":{"docs":{},"加":{"docs":{},"字":{"docs":{},"节":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"避":{"docs":{},"免":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"被":{"docs":{},"放":{"docs":{},"到":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"章":{"docs":{},"小":{"docs":{},"结":{"docs":{"第02章-并发编程基础/10-章小结.html":{"ref":"第02章-并发编程基础/10-章小结.html","tf":5.142857142857143}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},")":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.007722007722007722}},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}},"）":{"docs":{},"方":{"docs":{},"法":{"docs":{},"则":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"后":{"docs":{},"立":{"docs":{},"即":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"任":{"docs":{},"务":{"docs":{},"没":{"docs":{},"有":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102},"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505}}}}}}}},"p":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.002044989775051125}}},"：":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"设":{"docs":{},"置":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}},"s":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"到":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{"第03章-锁/01-锁的基本使用.html":{"ref":"第03章-锁/01-锁的基本使用.html","tf":0.010101010101010102}}}}}}}}}}}}}}}},"锁":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"支":{"docs":{},"持":{"docs":{},"重":{"docs":{},"进":{"docs":{},"入":{"docs":{},"的":{"docs":{},"排":{"docs":{},"它":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"若":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"0":{"docs":{},"且":{"docs":{},"读":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"获":{"docs":{},"取":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"；":{"docs":{},"若":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"大":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"看":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"是":{"docs":{},"则":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"+":{"1":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"构":{"docs":{},"建":{"docs":{},"节":{"docs":{},"点":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"与":{"docs":{},"释":{"docs":{},"放":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}},"释":{"docs":{},"放":{"docs":{},"与":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"的":{"docs":{},"释":{"docs":{},"放":{"docs":{},"过":{"docs":{},"程":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"释":{"docs":{},"放":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"命":{"docs":{},"中":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"缺":{"docs":{},"失":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"在":{"docs":{},"多":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"的":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}},"对":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"如":{"docs":{},"下":{"docs":{},"约":{"docs":{},"束":{"docs":{},"：":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"内":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"域":{"docs":{},"的":{"docs":{},"写":{"docs":{},"入":{"docs":{},"，":{"docs":{},"与":{"docs":{},"随":{"docs":{},"后":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"外":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"被":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"一":{"docs":{},"个":{"docs":{},"引":{"docs":{},"用":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},";":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"在":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"次":{"docs":{},"加":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"设":{"docs":{},"置":{"docs":{},"好":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"固":{"docs":{},"定":{"docs":{},"频":{"docs":{},"率":{"docs":{},"和":{"docs":{},"固":{"docs":{},"定":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"是":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"源":{"docs":{},"码":{"docs":{},"，":{"docs":{},"移":{"docs":{},"除":{"docs":{},"了":{"docs":{},"非":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"东":{"docs":{},"西":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"同":{"docs":{},"时":{"docs":{},"开":{"docs":{},"三":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"主":{"docs":{},"线":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"这":{"docs":{},"三":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"后":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"举":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"，":{"docs":{},"a":{"docs":{},"线":{"docs":{},"程":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"值":{"docs":{},"是":{"1":{"docs":{},"，":{"docs":{},"想":{"docs":{},"改":{"docs":{},"为":{"3":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"你":{"docs":{},"还":{"docs":{},"没":{"docs":{},"改":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"b":{"docs":{},"线":{"docs":{},"程":{"docs":{},"给":{"docs":{},"他":{"docs":{},"改":{"docs":{},"成":{"2":{"docs":{},"了":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},",":{"3":{"3":{"3":{"3":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"比":{"docs":{},"较":{"docs":{},"多":{"docs":{},"，":{"docs":{},"关":{"docs":{},"键":{"docs":{},"处":{"docs":{},"有":{"docs":{},"注":{"docs":{},"释":{"docs":{},"。":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"就":{"docs":{},"是":{"docs":{},"这":{"docs":{},"么":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"继":{"docs":{},"承":{"docs":{},"他":{"docs":{},"，":{"docs":{},"按":{"docs":{},"你":{"docs":{},"的":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"重":{"docs":{},"写":{"docs":{},"他":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"什":{"docs":{},"么":{"docs":{},"样":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"什":{"docs":{},"么":{"docs":{},"情":{"docs":{},"况":{"docs":{},"不":{"docs":{},"能":{"docs":{},"等":{"docs":{},"等":{"docs":{},"。":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{},"队":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}},"和":{"docs":{},"出":{"docs":{},"队":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"共":{"docs":{},"享":{"docs":{},"和":{"docs":{},"独":{"docs":{},"占":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"看":{"docs":{},"你":{"docs":{},"自":{"docs":{},"己":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"是":{"docs":{},"否":{"docs":{},"允":{"docs":{},"许":{"docs":{},"几":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"获":{"docs":{},"得":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"式":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"和":{"docs":{},"释":{"docs":{},"放":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"超":{"docs":{},"时":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"获":{"docs":{},"取":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"释":{"docs":{},"放":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"；":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}},"：":{"docs":{},"指":{"docs":{},"几":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"获":{"docs":{},"得":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"：":{"docs":{},"指":{"docs":{},"只":{"docs":{},"能":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"地":{"docs":{},"写":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"方":{"docs":{},"式":{"docs":{},"同":{"docs":{},"步":{"docs":{},"时":{"docs":{},"显":{"docs":{},"式":{"docs":{},"的":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"手":{"docs":{},"动":{"docs":{},"指":{"docs":{},"定":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"互":{"docs":{},"斥":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"队":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}},"就":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"出":{"docs":{},"队":{"docs":{},"是":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"出":{"docs":{},"队":{"docs":{},"，":{"docs":{},"而":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"而":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"出":{"docs":{},"队":{"docs":{},"是":{"docs":{},"不":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"的":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"很":{"docs":{},"关":{"docs":{},"键":{"docs":{},"一":{"docs":{},"点":{"docs":{},"是":{"docs":{},"，":{"docs":{},"他":{"docs":{},"需":{"docs":{},"要":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"他":{"docs":{},"后":{"docs":{},"边":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"让":{"docs":{},"他":{"docs":{},"去":{"docs":{},"拿":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"要":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"锁":{"docs":{},"升":{"docs":{},"级":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"降":{"docs":{},"级":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}},"后":{"docs":{},"边":{"docs":{},"的":{"docs":{},"先":{"docs":{},"传":{"docs":{},"给":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"(":{"docs":{},"通":{"docs":{},"过":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},")":{"docs":{},"了":{"docs":{},"，":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}},"否":{"docs":{},"则":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"加":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"条":{"docs":{},"件":{"docs":{},"时":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{},"了":{"docs":{},"，":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"加":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"小":{"docs":{},"结":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},"于":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"就":{"docs":{},"会":{"docs":{},"再":{"docs":{},"加":{"docs":{},"个":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"四":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"0":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}},"docs":{}}}}}}}}}}},"暂":{"docs":{},"时":{"docs":{},"不":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"识":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.003067484662576687}},"没":{"docs":{},"有":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"取":{"docs":{},"消":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"超":{"docs":{},"时":{"docs":{},"或":{"docs":{},"者":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"了":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"个":{"docs":{},"终":{"docs":{},"态":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"了":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"在":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"被":{"docs":{},"转":{"docs":{},"移":{"docs":{},"到":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"是":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"运":{"docs":{},"行":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"&":{"docs":{},"&":{"docs":{},"是":{"docs":{},"短":{"docs":{},"路":{"docs":{},"的":{"docs":{},"，":{"docs":{},"写":{"docs":{},"的":{"docs":{},"真":{"docs":{},"骚":{"docs":{},"气":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},"一":{"docs":{},"下":{"docs":{},"p":{"docs":{},"、":{"docs":{},"t":{"docs":{},"、":{"docs":{},"q":{"docs":{},"、":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"这":{"docs":{},"些":{"docs":{},"不":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"还":{"docs":{},"有":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"的":{"docs":{},"那":{"docs":{},"些":{"docs":{},"东":{"docs":{},"西":{"docs":{},"才":{"docs":{},"是":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"原":{"docs":{},"子":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}},"是":{"docs":{},"释":{"docs":{},"放":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}},"里":{"docs":{},"边":{"docs":{},"节":{"docs":{},"点":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"有":{"docs":{},"共":{"docs":{},"享":{"docs":{},"还":{"docs":{},"是":{"docs":{},"独":{"docs":{},"占":{"docs":{},"的":{"docs":{},"标":{"docs":{},"识":{"docs":{},"，":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"和":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"时":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{},"所":{"docs":{},"以":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"如":{"docs":{},"何":{"docs":{},"定":{"docs":{},"位":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"按":{"docs":{},"书":{"docs":{},"上":{"docs":{},"说":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"做":{"docs":{},"再":{"docs":{},"散":{"docs":{},"列":{"docs":{},"。":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"用":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"呢":{"docs":{},"是":{"docs":{},"个":{"docs":{},"原":{"docs":{},"子":{"docs":{},"自":{"docs":{},"增":{"docs":{},"的":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"处":{"docs":{},"理":{"docs":{},"两":{"docs":{},"个":{"docs":{},"过":{"docs":{},"期":{"docs":{},"时":{"docs":{},"间":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"如":{"docs":{},"何":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"我":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"是":{"docs":{},"谁":{"docs":{},"先":{"docs":{},"创":{"docs":{},"建":{"docs":{},"谁":{"docs":{},"排":{"docs":{},"前":{"docs":{},"面":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},">":{"0":{"docs":{},"就":{"docs":{},"表":{"docs":{},"示":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"被":{"docs":{},"占":{"docs":{},"用":{"docs":{},"了":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}},"docs":{}},"是":{"0":{"docs":{},"表":{"docs":{},"示":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"并":{"docs":{},"在":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"成":{"docs":{},"功":{"docs":{},"时":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"与":{"docs":{},"释":{"docs":{},"放":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"在":{"docs":{},"此":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"询":{"docs":{},"当":{"docs":{},"前":{"docs":{},"状":{"docs":{},"态":{"docs":{},"并":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"符":{"docs":{},"合":{"docs":{},"预":{"docs":{},"期":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"设":{"docs":{},"置":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"成":{"docs":{},"功":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"重":{"docs":{},"写":{"docs":{},"的":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"超":{"docs":{},"时":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"获":{"docs":{},"取":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}},"释":{"docs":{},"放":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"我":{"docs":{},"们":{"docs":{},"时":{"docs":{},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"重":{"docs":{},"写":{"docs":{},"独":{"docs":{},"占":{"docs":{},"式":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"获":{"docs":{},"取":{"docs":{},"和":{"docs":{},"释":{"docs":{},"放":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"是":{"docs":{},"否":{"docs":{},"被":{"docs":{},"占":{"docs":{},"用":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"规":{"docs":{},"则":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"保":{"docs":{},"证":{"docs":{},"对":{"docs":{},"单":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"具":{"docs":{},"有":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"而":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"可":{"docs":{},"以":{"docs":{},"确":{"docs":{},"保":{"docs":{},"对":{"docs":{},"整":{"docs":{},"个":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"具":{"docs":{},"有":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"。":{"docs":{},"在":{"docs":{},"功":{"docs":{},"能":{"docs":{},"上":{"docs":{},"，":{"docs":{},"锁":{"docs":{},"比":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"更":{"docs":{},"强":{"docs":{},"大":{"docs":{},"；":{"docs":{},"在":{"docs":{},"可":{"docs":{},"伸":{"docs":{},"缩":{"docs":{},"性":{"docs":{},"和":{"docs":{},"执":{"docs":{},"行":{"docs":{},"性":{"docs":{},"能":{"docs":{},"上":{"docs":{},"，":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"更":{"docs":{},"有":{"docs":{},"优":{"docs":{},"势":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"目":{"docs":{},"前":{"docs":{},"还":{"docs":{},"不":{"docs":{},"是":{"docs":{},"特":{"docs":{},"别":{"docs":{},"明":{"docs":{},"朗":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"看":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}},"证":{"docs":{},"明":{"docs":{},"写":{"docs":{},"的":{"docs":{},"没":{"docs":{},"问":{"docs":{},"题":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"就":{"docs":{},"获":{"docs":{},"取":{"docs":{},"成":{"docs":{},"功":{"docs":{},"了":{"docs":{},"。":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"头":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"就":{"docs":{},"开":{"docs":{},"始":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}},"同":{"docs":{},"步":{"docs":{},"器":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"（":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},")":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"各":{"docs":{},"种":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"要":{"docs":{},"了":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"或":{"docs":{},"者":{"docs":{},"自":{"docs":{},"己":{"docs":{},"实":{"docs":{},"现":{"docs":{},"锁":{"docs":{},"必":{"docs":{},"须":{"docs":{},"先":{"docs":{},"了":{"docs":{},"解":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"。":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"条":{"docs":{},"件":{"docs":{},"队":{"docs":{},"列":{"docs":{},"或":{"docs":{},"者":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"）":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"第03章-锁/02-AQS.html":{"ref":"第03章-锁/02-AQS.html","tf":0.0010224948875255625}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.01639344262295082},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"?":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.01639344262295082},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0034129692832764505},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"|":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.40414507772020725}},"|":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232},"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838},"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655},"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.005119453924914676},"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}},"源":{"docs":{},"码":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"贴":{"docs":{},"出":{"docs":{},"来":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}},"解":{"docs":{},"析":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}},"跟":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"继":{"docs":{},"承":{"docs":{},"他":{"docs":{},"然":{"docs":{},"后":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"些":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"才":{"docs":{},"可":{"docs":{},"能":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"先":{"docs":{},"来":{"docs":{},"后":{"docs":{},"到":{"docs":{"第03章-锁/03-ReentrantLock.html":{"ref":"第03章-锁/03-ReentrantLock.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}},"特":{"docs":{},"殊":{"docs":{},"值":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744}}}}}}},"必":{"docs":{},"须":{"docs":{},"先":{"docs":{},"释":{"docs":{},"放":{"docs":{},"读":{"docs":{},"书":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}},"核":{"docs":{},"心":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"当":{"docs":{},"提":{"docs":{},"交":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"时":{"docs":{},"，":{"docs":{},"当":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"小":{"docs":{},"于":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"时":{"docs":{},"，":{"docs":{},"进":{"docs":{},"来":{"docs":{},"新":{"docs":{},"任":{"docs":{},"务":{"docs":{},"都":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"会":{"docs":{},"提":{"docs":{},"前":{"docs":{},"创":{"docs":{},"建":{"docs":{},"并":{"docs":{},"启":{"docs":{},"动":{"docs":{},"所":{"docs":{},"有":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"等":{"docs":{},"到":{"docs":{},"任":{"docs":{},"务":{"docs":{},"进":{"docs":{},"来":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"和":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}},"都":{"docs":{},"是":{"1":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}},"docs":{}}}}}}}}}}}},"看":{"docs":{},"超":{"docs":{},"没":{"docs":{},"超":{"docs":{},"过":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}},"碎":{"docs":{},"碎":{"docs":{},"念":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}},"突":{"docs":{},"然":{"docs":{},"想":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"面":{"docs":{},"试":{"docs":{},"题":{"docs":{},"，":{"docs":{},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"中":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"之":{"docs":{},"多":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"取":{"docs":{},"？":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"这":{"docs":{},"个":{"docs":{},"是":{"docs":{},"我":{"docs":{},"自":{"docs":{},"己":{"docs":{},"想":{"docs":{},"到":{"docs":{},"的":{"docs":{},"题":{"docs":{},"。":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"能":{"docs":{},"比":{"docs":{},"较":{"docs":{},"好":{"docs":{},"的":{"docs":{},"考":{"docs":{},"察":{"docs":{},"对":{"docs":{},"读":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"原":{"docs":{},"理":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"读":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}},"锁":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"允":{"docs":{},"许":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"他":{"docs":{},"们":{"docs":{},"是":{"docs":{},"有":{"docs":{},"关":{"docs":{},"系":{"docs":{},"的":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"是":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"对":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"分":{"docs":{},"离":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"并":{"docs":{},"发":{"docs":{},"性":{"docs":{},"相":{"docs":{},"比":{"docs":{},"一":{"docs":{},"般":{"docs":{},"的":{"docs":{},"排":{"docs":{},"他":{"docs":{},"锁":{"docs":{},"有":{"docs":{},"了":{"docs":{},"很":{"docs":{},"大":{"docs":{},"提":{"docs":{},"升":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"支":{"docs":{},"持":{"docs":{},"重":{"docs":{},"进":{"docs":{},"入":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"它":{"docs":{},"能":{"docs":{},"够":{"docs":{},"被":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"位":{"0":{"docs":{},"时":{"docs":{},"总":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"写":{"docs":{},"状":{"docs":{},"态":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"获":{"docs":{},"取":{"docs":{},"成":{"docs":{},"功":{"docs":{},"读":{"docs":{},"状":{"docs":{},"态":{"docs":{},"就":{"docs":{},"+":{"1":{"docs":{},"。":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"与":{"docs":{},"释":{"docs":{},"放":{"docs":{"第03章-锁/04-ReentrantReadWriteLock.html":{"ref":"第03章-锁/04-ReentrantReadWriteLock.html","tf":0.005235602094240838}}}}}}}}},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"会":{"docs":{},"更":{"docs":{},"高":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"写":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"无":{"docs":{},"法":{"docs":{},"获":{"docs":{},"得":{"docs":{},"读":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"读":{"docs":{},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"不":{"docs":{},"管":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"写":{"docs":{},"，":{"docs":{},"他":{"docs":{},"都":{"docs":{},"能":{"docs":{},"读":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"公":{"docs":{},"共":{"docs":{},"状":{"docs":{},"态":{"docs":{},"进":{"docs":{},"行":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"通":{"docs":{},"信":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}}}}}},"与":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"释":{"docs":{},"放":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}},"建":{"docs":{},"立":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"释":{"docs":{},"放":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"的":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}},"可":{"docs":{},"以":{"docs":{},"确":{"docs":{},"保":{"docs":{},"：":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}},"去":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"里":{"docs":{},"面":{"docs":{},"搜":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"，":{"docs":{},"能":{"docs":{},"出":{"docs":{},"来":{"docs":{},"一":{"docs":{},"堆":{"docs":{},"。":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"组":{"docs":{},"的":{"docs":{},"公":{"docs":{},"共":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"最":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"和":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"而":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"也":{"docs":{},"成":{"docs":{},"为":{"docs":{},"构":{"docs":{},"建":{"docs":{},"同":{"docs":{},"步":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"工":{"docs":{},"具":{"docs":{},"。":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"，":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}},"回":{"docs":{},"顾":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"有":{"docs":{},"能":{"docs":{},"力":{"docs":{},"进":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},")":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"他":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"用":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"想":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"没":{"docs":{},"招":{"docs":{},"了":{"docs":{},"。":{"docs":{},"我":{"docs":{},"理":{"docs":{},"解":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"应":{"docs":{},"该":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"背":{"docs":{},"景":{"docs":{},"下":{"docs":{},"荣":{"docs":{},"耀":{"docs":{},"登":{"docs":{},"场":{"docs":{},"的":{"docs":{},"吧":{"docs":{},"。":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"阻":{"docs":{},"塞":{"docs":{},"的":{"docs":{},"姿":{"docs":{},"势":{"docs":{},"比":{"docs":{},"较":{"docs":{},"多":{"docs":{},"，":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"姿":{"docs":{},"势":{"docs":{},"。":{"docs":{"第03章-锁/05-LockSupport.html":{"ref":"第03章-锁/05-LockSupport.html","tf":0.02}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{"第05章-阻塞队列/":{"ref":"第05章-阻塞队列/","tf":5.2}},"就":{"docs":{},"是":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"了":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"去":{"docs":{},"入":{"docs":{},"队":{"docs":{},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"当":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"去":{"docs":{},"出":{"docs":{},"队":{"docs":{},"取":{"docs":{},"元":{"docs":{},"素":{"docs":{},"也":{"docs":{},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"第05章-阻塞队列/":{"ref":"第05章-阻塞队列/","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"用":{"docs":{},"于":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"模":{"docs":{},"型":{"docs":{},"，":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"往":{"docs":{},"队":{"docs":{},"列":{"docs":{},"丢":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"从":{"docs":{},"里":{"docs":{},"面":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"第05章-阻塞队列/":{"ref":"第05章-阻塞队列/","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"通":{"docs":{},"用":{"docs":{},"操":{"docs":{},"作":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":5.015873015873016}}}}}}},"都":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"他":{"docs":{},"们":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":5.004566210045662}}}}}}}}},"止":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"知":{"docs":{},"道":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"执":{"docs":{},"行":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}},"`":{"docs":{},"`":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}},"`":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}},"但":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"发":{"docs":{},"现":{"docs":{},"他":{"docs":{},"是":{"docs":{},"掉":{"docs":{},"的":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"了":{"docs":{},"几":{"docs":{},"个":{"docs":{},"事":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"出":{"docs":{},"队":{"docs":{},"，":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"入":{"docs":{},"队":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"这":{"docs":{},"个":{"docs":{},"首":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"之":{"docs":{},"后":{"docs":{},"就":{"docs":{},"会":{"docs":{},"去":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"或":{"docs":{},"者":{"docs":{},"叫":{"docs":{},"同":{"docs":{},"步":{"docs":{},"状":{"docs":{},"态":{"docs":{},"）":{"docs":{},"了":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"些":{"docs":{},"校":{"docs":{},"验":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"一":{"docs":{},"定":{"docs":{},"条":{"docs":{},"件":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"校":{"docs":{},"验":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}},"或":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"l":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"到":{"docs":{},"某":{"docs":{},"个":{"docs":{},"时":{"docs":{},"间":{"docs":{},"还":{"docs":{},"没":{"docs":{},"被":{"docs":{},"通":{"docs":{},"知":{"docs":{},"且":{"docs":{},"没":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"提":{"docs":{},"前":{"docs":{},"被":{"docs":{},"通":{"docs":{},"知":{"docs":{},"了":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"期":{"docs":{},"望":{"docs":{},"多":{"docs":{},"少":{"docs":{},"人":{"docs":{},"到":{"docs":{},"达":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"在":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"区":{"docs":{},"域":{"docs":{},"如":{"docs":{},"果":{"docs":{},"被":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"在":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"中":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"操":{"docs":{},"作":{"docs":{},"期":{"docs":{},"间":{"docs":{},"被":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"当":{"docs":{},"它":{"docs":{},"执":{"docs":{},"行":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"回":{"docs":{},"写":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"时":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"不":{"docs":{},"在":{"docs":{},"总":{"docs":{},"线":{"docs":{},"上":{"docs":{},"声":{"docs":{},"言":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"令":{"docs":{},"示":{"docs":{},"例":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}},"级":{"docs":{},"并":{"docs":{},"行":{"docs":{},"的":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"性":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"改":{"docs":{},"变":{"docs":{},"语":{"docs":{},"句":{"docs":{},"对":{"docs":{},"应":{"docs":{},"机":{"docs":{},"器":{"docs":{},"指":{"docs":{},"令":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"顺":{"docs":{},"序":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"就":{"docs":{},"是":{"docs":{},"看":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"了":{"docs":{},"，":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"能":{"docs":{},"猜":{"docs":{},"到":{"docs":{},"他":{"docs":{},"是":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"的":{"docs":{},"了":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}},"着":{"docs":{},"上":{"docs":{},"边":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}},"构":{"docs":{},"建":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"放":{"docs":{},"到":{"docs":{},"等":{"docs":{},"待":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"队":{"docs":{},"尾":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"事":{"docs":{},"参":{"docs":{},"数":{"docs":{},"最":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"分":{"docs":{},"别":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"这":{"docs":{},"些":{"docs":{},"参":{"docs":{},"数":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"入":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"直":{"docs":{},"到":{"docs":{},"被":{"docs":{},"通":{"docs":{},"知":{"docs":{},"或":{"docs":{},"者":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"重":{"docs":{},"新":{"docs":{},"进":{"docs":{},"入":{"docs":{},"运":{"docs":{},"行":{"docs":{},"状":{"docs":{},"态":{"docs":{},"且":{"docs":{},"从":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"如":{"docs":{},"下":{"docs":{"第03章-锁/06-Condition.html":{"ref":"第03章-锁/06-Condition.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"他":{"docs":{},"继":{"docs":{},"续":{"docs":{},"等":{"docs":{},"待":{"docs":{},"接":{"docs":{},"收":{"docs":{},"任":{"docs":{},"务":{"docs":{},"（":{"docs":{},"招":{"docs":{},"人":{"docs":{},"）":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}},"等":{"docs":{},"到":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"减":{"docs":{},"到":{"0":{"docs":{},"时":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"组":{"docs":{},"线":{"docs":{},"程":{"docs":{},"到":{"docs":{},"达":{"docs":{},"一":{"docs":{},"个":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"叫":{"docs":{},"同":{"docs":{},"步":{"docs":{},"点":{"docs":{},"）":{"docs":{},"时":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"到":{"docs":{},"达":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"时":{"docs":{},"，":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"才":{"docs":{},"会":{"docs":{},"开":{"docs":{},"门":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"被":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"拦":{"docs":{},"截":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"会":{"docs":{},"继":{"docs":{},"续":{"docs":{},"运":{"docs":{},"行":{"docs":{},"。":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"感":{"docs":{},"觉":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"了":{"docs":{},"解":{"docs":{},"到":{"docs":{},"这":{"docs":{},"里":{"docs":{},"已":{"docs":{},"经":{"docs":{},"够":{"docs":{},"了":{"docs":{},"，":{"docs":{},"搞":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"他":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"就":{"docs":{},"时":{"docs":{},"用":{"docs":{},"了":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"有":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"指":{"docs":{},"出":{"docs":{},"。":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{"第04章-并发容器/01-ConcurrentHashMap.html":{"ref":"第04章-并发容器/01-ConcurrentHashMap.html","tf":0.029411764705882353}}}},"q":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}},")":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}},";":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}},"【":{"docs":{},"a":{"docs":{},"】":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}},"c":{"docs":{},"】":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}},"d":{"docs":{},"】":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}},"大":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"】":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"i":{"docs":{},"f":{"docs":{},"】":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}},"二":{"docs":{},"个":{"docs":{},"大":{"docs":{},"i":{"docs":{},"f":{"docs":{},"】":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}},"与":{"docs":{},"此":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"2":{"docs":{},"开":{"docs":{},"始":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"插":{"docs":{},"入":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"2":{"docs":{},"号":{"docs":{},"）":{"docs":{},"，":{"docs":{},"进":{"docs":{},"入":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},",":{"docs":{},"t":{"docs":{},",":{"docs":{},"p":{"docs":{},"都":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"q":{"docs":{},"，":{"docs":{},"q":{"docs":{},"是":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"q":{"docs":{},"=":{"docs":{},"=":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{},"号":{"docs":{},"，":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"【":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"i":{"docs":{},"f":{"docs":{},"】":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"p":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"【":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"大":{"docs":{},"i":{"docs":{},"f":{"docs":{},"】":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"进":{"docs":{},"入":{"docs":{},"到":{"docs":{},"【":{"docs":{},"大":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"】":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"这":{"docs":{},"个":{"docs":{},"三":{"docs":{},"元":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"看":{"docs":{},"一":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"p":{"docs":{},"!":{"docs":{},"=":{"docs":{},"t":{"docs":{},"?":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"也":{"docs":{},"是":{"docs":{},"珍":{"docs":{},"贵":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"和":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"都":{"docs":{},"会":{"docs":{},"损":{"docs":{},"失":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"和":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"链":{"docs":{},"接":{"docs":{},"池":{"docs":{},"思":{"docs":{},"路":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"线":{"docs":{},"程":{"docs":{},"放":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"池":{"docs":{},"子":{"docs":{},"里":{"docs":{},"，":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"去":{"docs":{},"取":{"docs":{},"，":{"docs":{},"用":{"docs":{},"完":{"docs":{},"还":{"docs":{},"回":{"docs":{},"去":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"池":{"docs":{},"子":{"docs":{},"就":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/":{"ref":"第06章-线程池与Executor框架/","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"密":{"docs":{},"切":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}},"又":{"docs":{},"看":{"docs":{},"了":{"docs":{},"下":{"docs":{},"书":{"docs":{},"，":{"docs":{},"说":{"docs":{},"为":{"docs":{},"啥":{"docs":{},"不":{"docs":{},"是":{"docs":{},"每":{"docs":{},"次":{"docs":{},"入":{"docs":{},"队":{"docs":{},"都":{"docs":{},"直":{"docs":{},"接":{"docs":{},"更":{"docs":{},"新":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"呢":{"docs":{},"，":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"减":{"docs":{},"少":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"更":{"docs":{},"新":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"是":{"docs":{},"要":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"的":{"docs":{},"，":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"是":{"docs":{},"耗":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"的":{"docs":{},"。":{"docs":{},"直":{"docs":{},"接":{"docs":{},"去":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"更":{"docs":{},"新":{"docs":{},"也":{"docs":{},"是":{"docs":{},"没":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"。":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"情":{"docs":{},"况":{"docs":{},"一":{"docs":{},"：":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}},"而":{"docs":{},"前":{"docs":{},"面":{"docs":{},"说":{"docs":{},"了":{"docs":{},"p":{"docs":{},"已":{"docs":{},"经":{"docs":{},"指":{"docs":{},"向":{"docs":{},"了":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{},"号":{"docs":{},"，":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{},"号":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"所":{"docs":{},"以":{"docs":{},"q":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"进":{"docs":{},"入":{"docs":{},"【":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"i":{"docs":{},"f":{"docs":{},"】":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"设":{"docs":{},"置":{"docs":{},"p":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"为":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"2":{"docs":{},"号":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{},"号":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"=":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"2":{"docs":{},"号":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"p":{"docs":{},"!":{"docs":{},"=":{"docs":{},"t":{"docs":{},"?":{"docs":{},"发":{"docs":{},"现":{"docs":{},"p":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{},"号":{"docs":{},"的":{"docs":{},"，":{"docs":{},"t":{"docs":{},"还":{"docs":{},"是":{"docs":{},"执":{"docs":{},"行":{"3":{"docs":{},"号":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"i":{"docs":{},"f":{"docs":{},"成":{"docs":{},"立":{"docs":{},"，":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"将":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"2":{"docs":{},"号":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"ref":"第04章-并发容器/02-ConcurrentLinkedQueue.html","tf":0.00819672131147541}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}},"且":{"docs":{},"得":{"docs":{},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"过":{"docs":{},"来":{"docs":{},"，":{"docs":{},"再":{"docs":{},"就":{"docs":{},"是":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"自":{"docs":{},"己":{"docs":{},"封":{"docs":{},"装":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"者":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"笔":{"docs":{},"者":{"docs":{},"没":{"docs":{},"有":{"docs":{},"细":{"docs":{},"看":{"docs":{},"，":{"docs":{},"一":{"docs":{},"直":{"docs":{},"从":{"docs":{},"任":{"docs":{},"务":{"docs":{},"队":{"docs":{},"列":{"docs":{},"取":{"docs":{},"到":{"docs":{},"期":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"把":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"再":{"docs":{},"放":{"docs":{},"回":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"j":{"docs":{},"m":{"docs":{},"m":{"docs":{},"中":{"docs":{},"，":{"docs":{},"临":{"docs":{},"界":{"docs":{},"区":{"docs":{},"内":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"以":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}},"补":{"docs":{},"充":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":0.09090909090909091}},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{"第04章-并发容器/03-ConcurrentLinkedDeque.html":{"ref":"第04章-并发容器/03-ConcurrentLinkedDeque.html","tf":0.2}}}}}}}},"两":{"docs":{},"个":{"docs":{},"基":{"docs":{},"于":{"docs":{},"跳":{"docs":{},"表":{"docs":{},"的":{"docs":{},"容":{"docs":{},"器":{"docs":{"第04章-并发容器/04-两个基于跳表的容器.html":{"ref":"第04章-并发容器/04-两个基于跳表的容器.html","tf":5.090909090909091}}}}}}}}},"示":{"docs":{},"例":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}},"方":{"docs":{},"案":{"docs":{},"：":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"间":{"docs":{},"存":{"docs":{},"在":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}},"大":{"docs":{},"特":{"docs":{},"性":{"docs":{},"：":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}},"他":{"docs":{},"们":{"docs":{},"写":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"是":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"的":{"docs":{},"，":{"docs":{},"写":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"独":{"docs":{},"占":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"。":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"适":{"docs":{},"用":{"docs":{},"读":{"docs":{},"多":{"docs":{},"写":{"docs":{},"少":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"一":{"docs":{},"一":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"。":{"docs":{"第05章-阻塞队列/":{"ref":"第05章-阻塞队列/","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"办":{"docs":{},"公":{"docs":{},"室":{"docs":{},"里":{"docs":{},"（":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"在":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"里":{"docs":{},"边":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"一":{"docs":{},"般":{"docs":{},"喜":{"docs":{},"欢":{"docs":{},"把":{"docs":{},"快":{"docs":{},"要":{"docs":{},"过":{"docs":{},"期":{"docs":{},"的":{"docs":{},"、":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"已":{"docs":{},"经":{"docs":{},"过":{"docs":{},"期":{"docs":{},"的":{"docs":{},"老":{"docs":{},"元":{"docs":{},"素":{"docs":{},"放":{"docs":{},"到":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"你":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"会":{"docs":{},"更":{"docs":{},"灵":{"docs":{},"活":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"从":{"docs":{},"队":{"docs":{},"首":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"插":{"docs":{},"入":{"docs":{},"都":{"docs":{},"行":{"docs":{},"，":{"docs":{},"从":{"docs":{},"队":{"docs":{},"首":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"出":{"docs":{},"队":{"docs":{},"都":{"docs":{},"行":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"：":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}},"源":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.003861003861003861}}}}}}}},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"职":{"docs":{},"责":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"断":{"docs":{},"的":{"docs":{},"从":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"里":{"docs":{},"边":{"docs":{},"取":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"当":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"（":{"docs":{},"需":{"docs":{},"求":{"docs":{},"池":{"docs":{},"）":{"docs":{},"里":{"docs":{},"边":{"docs":{},"拿":{"docs":{},"不":{"docs":{},"到":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"达":{"docs":{},"到":{"docs":{},"特":{"docs":{},"定":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"就":{"docs":{},"会":{"docs":{},"从":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"里":{"docs":{},"边":{"docs":{},"移":{"docs":{},"走":{"docs":{},"（":{"docs":{},"被":{"docs":{},"裁":{"docs":{},"）":{"docs":{},"。":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"创":{"docs":{},"建":{"docs":{},"各":{"docs":{},"种":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"的":{"docs":{},"工":{"docs":{},"具":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}},"工":{"docs":{},"具":{"docs":{},"类":{"docs":{},"，":{"docs":{},"就":{"docs":{},"像":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"是":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"只":{"docs":{},"是":{"docs":{},"把":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"里":{"docs":{},"边":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"跑":{"docs":{},"起":{"docs":{},"来":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"管":{"docs":{},"你":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"再":{"docs":{},"隔":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"时":{"docs":{},"间":{"docs":{},"执":{"docs":{},"行":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"每":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"一":{"docs":{},"个":{"docs":{},"固":{"docs":{},"定":{"docs":{},"时":{"docs":{},"间":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"你":{"docs":{},"给":{"docs":{},"的":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"负":{"docs":{},"责":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}},"跟":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"比":{"docs":{},"较":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"比":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"来":{"docs":{},"的":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"，":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"用":{"docs":{},"于":{"docs":{},"让":{"docs":{},"当":{"docs":{},"前":{"docs":{},"执":{"docs":{},"行":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"第07章-并发工具类/01-CountDownLatch.html":{"ref":"第07章-并发工具类/01-CountDownLatch.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"量":{"docs":{},"有":{"docs":{},"限":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"达":{"docs":{},"到":{"docs":{},"限":{"docs":{},"制":{"docs":{},"就":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"是":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"里":{"docs":{},"面":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"第07章-并发工具类/03-Semaphore.html":{"ref":"第07章-并发工具类/03-Semaphore.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"复":{"docs":{},"制":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"改":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{},"最":{"docs":{},"后":{"docs":{},"是":{"docs":{},"把":{"docs":{},"容":{"docs":{},"器":{"docs":{},"里":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}},"影":{"docs":{},"响":{"docs":{},"g":{"docs":{},"c":{"docs":{},"。":{"docs":{},"写":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"一":{"docs":{},"份":{"docs":{},"，":{"docs":{},"老":{"docs":{},"的":{"docs":{},"需":{"docs":{},"要":{"docs":{},"被":{"docs":{},"g":{"docs":{},"c":{"docs":{},"掉":{"docs":{},"。":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}},"浪":{"docs":{},"费":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"每":{"docs":{},"次":{"docs":{},"写":{"docs":{},"都":{"docs":{},"会":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"一":{"docs":{},"份":{"docs":{"第04章-并发容器/05-CopyOnWrite系列.html":{"ref":"第04章-并发容器/05-CopyOnWrite系列.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.031746031746031744}}}}}},"插":{"docs":{},"入":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}},"查":{"docs":{},"看":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}},"移":{"docs":{},"除":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}},"后":{"docs":{},"如":{"docs":{},"果":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"数":{"docs":{},"量":{"docs":{},"比":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"还":{"docs":{},"少":{"docs":{},"，":{"docs":{},"就":{"docs":{},"再":{"docs":{},"加":{"docs":{},"个":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"掉":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"（":{"docs":{},"裁":{"docs":{},"员":{"docs":{},"）":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}},"（":{"1":{"docs":{},"）":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"问":{"docs":{},"题":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}},"2":{"docs":{},"）":{"docs":{},"循":{"docs":{},"环":{"docs":{},"时":{"docs":{},"间":{"docs":{},"长":{"docs":{},"开":{"docs":{},"销":{"docs":{},"大":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}},"3":{"docs":{},"）":{"docs":{},"只":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}},"docs":{},"\"":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"ref":"第05章-阻塞队列/01-阻塞队列的通用操作.html","tf":0.015873015873015872}}}}}}}},"不":{"docs":{},"管":{"docs":{},"程":{"docs":{},"序":{"docs":{},"是":{"docs":{},"否":{"docs":{},"同":{"docs":{},"步":{"docs":{},"）":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"只":{"docs":{},"能":{"docs":{},"看":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"一":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"执":{"docs":{},"行":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{},"在":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"原":{"docs":{},"子":{"docs":{},"执":{"docs":{},"行":{"docs":{},"且":{"docs":{},"立":{"docs":{},"刻":{"docs":{},"对":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"见":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"严":{"docs":{},"格":{"docs":{},"来":{"docs":{},"讲":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"定":{"docs":{},"时":{"docs":{},"任":{"docs":{},"务":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}},"各":{"docs":{},"种":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"与":{"docs":{},"应":{"docs":{},"用":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":5.004366812227074}}}}}}}}}}}}}},"呸":{"docs":{},"呸":{"docs":{},"呸":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"看":{"docs":{},"秒":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"发":{"docs":{},"现":{"docs":{},"是":{"docs":{},"符":{"docs":{},"合":{"docs":{},"预":{"docs":{},"期":{"docs":{},"的":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"时":{"docs":{},"任":{"docs":{},"务":{"docs":{},"调":{"docs":{},"度":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"天":{"docs":{},"将":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"和":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"从":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"任":{"docs":{},"务":{"docs":{},"就":{"docs":{},"开":{"docs":{},"始":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"义":{"docs":{"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}},"时":{"docs":{},"间":{"docs":{},"=":{"docs":{},"\"":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}},"的":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"高":{"docs":{},"于":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"保":{"docs":{},"存":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"有":{"docs":{},"效":{"docs":{},"期":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"循":{"docs":{},"环":{"docs":{},"查":{"docs":{},"询":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"能":{"docs":{},"从":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"有":{"docs":{},"效":{"docs":{},"期":{"docs":{},"到":{"docs":{},"了":{"docs":{},"。":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"命":{"docs":{},"中":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"行":{"docs":{},"填":{"docs":{},"充":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"非":{"6":{"4":{"docs":{},"字":{"docs":{},"节":{"docs":{},"宽":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}},"docs":{}},"docs":{}}}},"冲":{"docs":{},"行":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}},"链":{"docs":{},"表":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.008733624454148471}}}},"默":{"docs":{},"认":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"里":{"docs":{},"面":{"docs":{},"指":{"docs":{},"定":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"指":{"docs":{},"定":{"docs":{"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"ref":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","tf":0.004366812227074236}}}}}}}}}}}}},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}},"似":{"docs":{},"曾":{"docs":{},"相":{"docs":{},"识":{"docs":{},"的":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"章":{"docs":{},"第":{"5":{"docs":{},"节":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"就":{"docs":{},"是":{"docs":{},"这":{"docs":{},"么":{"docs":{},"搞":{"docs":{},"的":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"待":{"docs":{},"补":{"docs":{},"充":{"docs":{"第05章-阻塞队列/03-阻塞队列实现原理.html":{"ref":"第05章-阻塞队列/03-阻塞队列实现原理.html","tf":0.0045662100456621}}}}},"提":{"docs":{},"高":{"docs":{},"响":{"docs":{},"应":{"docs":{},"速":{"docs":{},"度":{"docs":{"第06章-线程池与Executor框架/":{"ref":"第06章-线程池与Executor框架/","tf":0.16666666666666666}}}}}},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"可":{"docs":{},"管":{"docs":{},"理":{"docs":{},"性":{"docs":{"第06章-线程池与Executor框架/":{"ref":"第06章-线程池与Executor框架/","tf":0.16666666666666666}}}}}}}}}},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"有":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"和":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}},"降":{"docs":{},"低":{"docs":{},"资":{"docs":{},"源":{"docs":{},"消":{"docs":{},"耗":{"docs":{"第06章-线程池与Executor框架/":{"ref":"第06章-线程池与Executor框架/","tf":0.16666666666666666}}}}}}}},"任":{"docs":{},"务":{"0":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}},"1":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}},"4":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}},"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"被":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"了":{"docs":{},"哦":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"“":{"docs":{},"大":{"docs":{},"雄":{"docs":{},"和":{"docs":{},"你":{"docs":{},"一":{"docs":{},"起":{"docs":{},"学":{"docs":{},"编":{"docs":{},"程":{"docs":{},"”":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"正":{"docs":{},"数":{"docs":{},"表":{"docs":{},"示":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}},"依":{"docs":{},"赖":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"连":{"docs":{},"接":{"docs":{},"池":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"适":{"docs":{},"当":{"docs":{},"给":{"docs":{},"多":{"docs":{},"一":{"docs":{},"些":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"活":{"docs":{},"时":{"docs":{},"间":{"1":{"0":{"docs":{},"秒":{"docs":{},"，":{"docs":{},"工":{"docs":{},"作":{"docs":{},"队":{"docs":{},"列":{"docs":{},"长":{"docs":{},"度":{"docs":{},"位":{"3":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}}},"证":{"docs":{},"了":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"“":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"”":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}},"向":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}},"建":{"docs":{},"议":{"docs":{},"使":{"docs":{},"用":{"docs":{},"有":{"docs":{},"界":{"docs":{},"队":{"docs":{},"列":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}},"按":{"docs":{},"任":{"docs":{},"务":{"docs":{},"类":{"docs":{},"型":{"docs":{},"考":{"docs":{},"虑":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"考":{"docs":{},"虑":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}},"既":{"docs":{},"然":{"docs":{},"是":{"docs":{},"由":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"任":{"docs":{},"务":{"docs":{},"就":{"docs":{},"要":{"docs":{},"用":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}},"混":{"docs":{},"合":{"docs":{},"型":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"密":{"docs":{},"集":{"docs":{},"型":{"docs":{},"任":{"docs":{},"务":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"o":{"docs":{},"密":{"docs":{},"集":{"docs":{},"型":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"相":{"docs":{},"差":{"docs":{},"不":{"docs":{},"是":{"docs":{},"太":{"docs":{},"大":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"分":{"docs":{},"解":{"docs":{},"后":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"将":{"docs":{},"高":{"docs":{},"于":{"docs":{},"串":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"如":{"docs":{},"下":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"逐":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"中":{"docs":{},"断":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"无":{"docs":{},"法":{"docs":{},"响":{"docs":{},"应":{"docs":{},"中":{"docs":{},"断":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"可":{"docs":{},"能":{"docs":{},"永":{"docs":{},"远":{"docs":{},"无":{"docs":{},"法":{"docs":{},"终":{"docs":{},"止":{"docs":{"第06章-线程池与Executor框架/01-使用线程池.html":{"ref":"第06章-线程池与Executor框架/01-使用线程池.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"互":{"docs":{},"联":{"docs":{},"网":{"docs":{},"公":{"docs":{},"司":{"docs":{},"与":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"现":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"啥":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}},"启":{"docs":{},"动":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}},"增":{"docs":{},"加":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"数":{"docs":{},"量":{"docs":{},"失":{"docs":{},"败":{"docs":{},"就":{"docs":{},"在":{"docs":{},"来":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}},"完":{"docs":{},"成":{"docs":{},"了":{"docs":{},"几":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}},"普":{"docs":{},"通":{"docs":{},"看":{"docs":{},"超":{"docs":{},"没":{"docs":{},"超":{"docs":{},"过":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{"第06章-线程池与Executor框架/02-线程池原理.html":{"ref":"第06章-线程池与Executor框架/02-线程池原理.html","tf":0.0017064846416382253}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"：":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305},"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}},"决":{"docs":{},"定":{"docs":{},"两":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"的":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"谁":{"docs":{},"排":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"是":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"搞":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"准":{"docs":{},"备":{"docs":{},"开":{"docs":{},"始":{"docs":{},"跑":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}},"包":{"docs":{},"括":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"及":{"docs":{},"其":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"也":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"老":{"docs":{},"朋":{"docs":{},"友":{"docs":{},"了":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"和":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"消":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}},"它":{"docs":{},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"来":{"docs":{},"在":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"延":{"docs":{},"迟":{"docs":{},"之":{"docs":{},"后":{"docs":{},"运":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"定":{"docs":{},"期":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}},"。":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"延":{"docs":{},"迟":{"docs":{},"执":{"docs":{},"行":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}},"确":{"docs":{},"定":{"docs":{},"排":{"docs":{},"序":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"谁":{"docs":{},"先":{"docs":{},"到":{"docs":{},"期":{"docs":{},"谁":{"docs":{},"排":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"到":{"docs":{},"期":{"docs":{},"的":{"docs":{},"，":{"docs":{},"看":{"docs":{},"谁":{"docs":{},"先":{"docs":{},"创":{"docs":{},"建":{"docs":{},"，":{"docs":{},"先":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"排":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.043010752688172046}}}},"计":{"docs":{},"算":{"docs":{},"还":{"docs":{},"有":{"docs":{},"多":{"docs":{},"久":{"docs":{},"到":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"点":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{},"样":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"负":{"docs":{},"数":{"docs":{},"表":{"docs":{},"示":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"第06章-线程池与Executor框架/03-Executor.html":{"ref":"第06章-线程池与Executor框架/03-Executor.html","tf":0.0019305019305019305}}}}}}}}}},"告":{"docs":{},"知":{"docs":{},"别":{"docs":{},"人":{"docs":{},"自":{"docs":{},"己":{"docs":{},"到":{"docs":{},"达":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"了":{"docs":{"第07章-并发工具类/02-CyclicBarrier.html":{"ref":"第07章-并发工具类/02-CyclicBarrier.html","tf":0.02564102564102564}}}}}}}}}}}}},"校":{"docs":{},"对":{"docs":{},"工":{"docs":{},"作":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}},"输":{"docs":{},"出":{"docs":{},"：":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}},"遗":{"docs":{},"传":{"docs":{},"算":{"docs":{},"法":{"docs":{"第07章-并发工具类/04-Exchanger.html":{"ref":"第07章-并发工具类/04-Exchanger.html","tf":0.0136986301369863}}}}}},"笔":{"docs":{},"者":{"docs":{},"是":{"docs":{},"科":{"docs":{},"班":{"docs":{},"出":{"docs":{},"身":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"一":{"docs":{},"章":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"真":{"docs":{},"的":{"docs":{},"是":{"docs":{},"看":{"docs":{},"的":{"docs":{},"头":{"docs":{},"疼":{"docs":{},"，":{"docs":{},"本":{"docs":{},"来":{"docs":{},"打":{"docs":{},"算":{"docs":{},"放":{"docs":{},"弃":{"docs":{},"了":{"docs":{},"，":{"docs":{},"又":{"docs":{},"了":{"docs":{},"解":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"章":{"docs":{},"的":{"docs":{},"东":{"docs":{},"西":{"docs":{},"是":{"docs":{},"面":{"docs":{},"试":{"docs":{},"必":{"docs":{},"考":{"docs":{},"的":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"搞":{"docs":{},"啊":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/":{"ref":"第08章-Java并发机制的底层实现原理/","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}},"含":{"docs":{},"义":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"术":{"docs":{},"语":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"英":{"docs":{},"文":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}},"追":{"docs":{},"加":{"docs":{},"字":{"docs":{},"节":{"docs":{},"能":{"docs":{},"优":{"docs":{},"化":{"docs":{},"性":{"docs":{},"能":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}}}},"求":{"docs":{},"吞":{"docs":{},"吐":{"docs":{},"量":{"docs":{},"。":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"执":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"较":{"docs":{},"长":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}},"响":{"docs":{},"应":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"执":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"非":{"docs":{},"常":{"docs":{},"快":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"l":{"2":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}},"3":{"docs":{},"的":{"docs":{},"或":{"docs":{},"所":{"docs":{},"有":{"docs":{},"）":{"docs":{"第08章-Java并发机制的底层实现原理/01-volatile.html":{"ref":"第08章-Java并发机制的底层实现原理/01-volatile.html","tf":0.01818181818181818}}}}}}}},"docs":{}}},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.010362694300518135}},"的":{"docs":{},"撤":{"docs":{},"销":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"全":{"docs":{},"局":{"docs":{},"安":{"docs":{},"全":{"docs":{},"点":{"docs":{},"（":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"间":{"docs":{},"点":{"docs":{},"上":{"docs":{},"没":{"docs":{},"有":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"码":{"docs":{},"）":{"docs":{},"。":{"docs":{},"它":{"docs":{},"会":{"docs":{},"首":{"docs":{},"先":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"检":{"docs":{},"查":{"docs":{},"持":{"docs":{},"有":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"否":{"docs":{},"活":{"docs":{},"着":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"处":{"docs":{},"于":{"docs":{},"活":{"docs":{},"动":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"设":{"docs":{},"置":{"docs":{},"成":{"docs":{},"无":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"线":{"docs":{},"程":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"活":{"docs":{},"着":{"docs":{},"，":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"会":{"docs":{},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"记":{"docs":{},"录":{"docs":{},"和":{"docs":{},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"关":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"参":{"docs":{},"数":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}},"禁":{"docs":{},"用":{"docs":{},"：":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}},"竞":{"docs":{},"争":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"响":{"docs":{},"应":{"docs":{},"速":{"docs":{},"度":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}},"缺":{"docs":{},"点":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"原":{"docs":{},"子":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{},"将":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.010362694300518135}}}}}},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}},"场":{"docs":{},"景":{"docs":{"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"ref":"第08章-Java并发机制的底层实现原理/02-synchronized.html","tf":0.0051813471502590676}}}}}},"#":{"docs":{},"信":{"docs":{},"号":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"在":{"docs":{},"总":{"docs":{},"线":{"docs":{},"上":{"docs":{},"输":{"docs":{},"出":{"docs":{},"此":{"docs":{},"信":{"docs":{},"号":{"docs":{},"时":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"的":{"docs":{},"请":{"docs":{},"求":{"docs":{},"将":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"住":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"独":{"docs":{},"占":{"docs":{},"共":{"docs":{},"享":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"是":{"docs":{},"修":{"docs":{},"改":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"并":{"docs":{},"允":{"docs":{},"许":{"docs":{},"它":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"机":{"docs":{},"制":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"止":{"docs":{},"同":{"docs":{},"时":{"docs":{},"修":{"docs":{},"改":{"docs":{},"由":{"docs":{},"两":{"docs":{},"个":{"docs":{},"以":{"docs":{},"上":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"区":{"docs":{},"域":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"当":{"docs":{},"其":{"docs":{},"他":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"回":{"docs":{},"写":{"docs":{},"已":{"docs":{},"被":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"使":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"行":{"docs":{},"无":{"docs":{},"效":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"是":{"docs":{},"：":{"docs":{},"实":{"docs":{},"用":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{},"的":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"类":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"引":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"把":{"docs":{},"多":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"放":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"里":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"操":{"docs":{},"作":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"消":{"docs":{},"息":{"docs":{},"传":{"docs":{},"递":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"没":{"docs":{},"有":{"docs":{},"公":{"docs":{},"共":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"必":{"docs":{},"须":{"docs":{},"通":{"docs":{},"过":{"docs":{},"发":{"docs":{},"送":{"docs":{},"消":{"docs":{},"息":{"docs":{},"来":{"docs":{},"显":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"通":{"docs":{},"信":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"如":{"docs":{},"何":{"docs":{},"同":{"docs":{},"步":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}},"自":{"docs":{},"旋":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"如":{"docs":{},"果":{"docs":{},"长":{"docs":{},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"会":{"docs":{},"给":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"带":{"docs":{},"来":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"除":{"docs":{},"了":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"实":{"docs":{},"现":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"都":{"docs":{},"用":{"docs":{},"了":{"docs":{},"循":{"docs":{},"环":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"，":{"docs":{},"即":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"想":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"使":{"docs":{},"用":{"docs":{},"循":{"docs":{},"环":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"当":{"docs":{},"它":{"docs":{},"退":{"docs":{},"出":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"使":{"docs":{},"用":{"docs":{},"循":{"docs":{},"环":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"。":{"docs":{"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"ref":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"消":{"docs":{},"息":{"docs":{},"传":{"docs":{},"递":{"docs":{},"方":{"docs":{},"式":{"docs":{},"同":{"docs":{},"步":{"docs":{},"时":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"的":{"docs":{},"，":{"docs":{},"天":{"docs":{},"然":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"消":{"docs":{},"息":{"docs":{},"的":{"docs":{},"发":{"docs":{},"送":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"消":{"docs":{},"息":{"docs":{},"的":{"docs":{},"接":{"docs":{},"收":{"docs":{},"之":{"docs":{},"前":{"docs":{"第09章-java内存模型/":{"ref":"第09章-java内存模型/","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"递":{"docs":{},"性":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"a":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012},"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}},"及":{"docs":{},"所":{"docs":{},"有":{"docs":{},"后":{"docs":{},"续":{"docs":{},"存":{"docs":{},"储":{"docs":{},"指":{"docs":{},"令":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"。":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"指":{"docs":{},"令":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}},"装":{"docs":{},"载":{"docs":{},"指":{"docs":{},"令":{"docs":{},"的":{"docs":{},"装":{"docs":{},"载":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}},"。":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"屏":{"docs":{},"障":{"docs":{},"类":{"docs":{},"型":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}},"监":{"docs":{},"视":{"docs":{},"器":{"docs":{},"锁":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012},"第09章-java内存模型/07-happens-before.html":{"ref":"第09章-java内存模型/07-happens-before.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"：":{"docs":{},"在":{"docs":{},"不":{"docs":{},"改":{"docs":{},"变":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"程":{"docs":{},"序":{"docs":{},"语":{"docs":{},"义":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"重":{"docs":{},"新":{"docs":{},"安":{"docs":{},"排":{"docs":{},"指":{"docs":{},"令":{"docs":{},"执":{"docs":{},"行":{"docs":{},"顺":{"docs":{},"序":{"docs":{"第09章-java内存模型/01-java内存模型基础.html":{"ref":"第09章-java内存模型/01-java内存模型基础.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"会":{"docs":{},"对":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"读":{"docs":{},"与":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"读":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"内":{"docs":{},"存":{"docs":{},"操":{"docs":{},"作":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"；":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"不":{"docs":{},"会":{"docs":{},"对":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"写":{"docs":{},"与":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"写":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"内":{"docs":{},"存":{"docs":{},"操":{"docs":{},"作":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"组":{"docs":{},"合":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"为":{"docs":{},"了":{"docs":{},"同":{"docs":{},"时":{"docs":{},"实":{"docs":{},"现":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"读":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"写":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"不":{"docs":{},"能":{"docs":{},"对":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"与":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"前":{"docs":{},"面":{"docs":{},"和":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"内":{"docs":{},"存":{"docs":{},"操":{"docs":{},"作":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/04-锁内存语义的实现.html":{"ref":"第09章-java内存模型/04-锁内存语义的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"在":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"的":{"docs":{},"写":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"把":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"的":{"docs":{},"写":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"到":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"之":{"docs":{},"外":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"未":{"docs":{},"同":{"docs":{},"步":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"特":{"docs":{},"性":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"理":{"docs":{},"论":{"docs":{},"参":{"docs":{},"考":{"docs":{},"模":{"docs":{},"型":{"docs":{},"，":{"docs":{},"在":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"和":{"docs":{},"编":{"docs":{},"程":{"docs":{},"语":{"docs":{},"言":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"都":{"docs":{},"会":{"docs":{},"以":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"照":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"完":{"docs":{},"全":{"docs":{},"按":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"串":{"docs":{},"行":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"第09章-java内存模型/02-重排序.html":{"ref":"第09章-java内存模型/02-重排序.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}},"即":{"docs":{},"使":{"docs":{},"是":{"6":{"4":{"docs":{},"位":{"docs":{},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"型":{"docs":{},"和":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"型":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"它":{"docs":{},"是":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"对":{"docs":{},"该":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"就":{"docs":{},"具":{"docs":{},"有":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"多":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"操":{"docs":{},"作":{"docs":{},"或":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{},"这":{"docs":{},"种":{"docs":{},"复":{"docs":{},"合":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"操":{"docs":{},"作":{"docs":{},"整":{"docs":{},"体":{"docs":{},"上":{"docs":{},"不":{"docs":{},"具":{"docs":{},"有":{"docs":{},"原":{"docs":{},"子":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"理":{"docs":{},"解":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"特":{"docs":{},"性":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"把":{"docs":{},"对":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"单":{"docs":{},"个":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"，":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"这":{"docs":{},"些":{"docs":{},"单":{"docs":{},"个":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"做":{"docs":{},"了":{"docs":{},"同":{"docs":{},"步":{"docs":{"第09章-java内存模型/03-volatile内存语义.html":{"ref":"第09章-java内存模型/03-volatile内存语义.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"为":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"。":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":0.1}}}}}}}}}}}}}}}}}},"配":{"docs":{},"合":{"docs":{},"以":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"读":{"docs":{},"/":{"docs":{},"写":{"docs":{},"和":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"所":{"docs":{},"具":{"docs":{},"有":{"docs":{},"的":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"读":{"docs":{},"和":{"docs":{},"写":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"语":{"docs":{},"义":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"通":{"docs":{},"信":{"docs":{"第09章-java内存模型/05-concurrent包的实现.html":{"ref":"第09章-java内存模型/05-concurrent包的实现.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"次":{"docs":{},"读":{"docs":{},"一":{"docs":{},"个":{"docs":{},"包":{"docs":{},"含":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"与":{"docs":{},"随":{"docs":{},"后":{"docs":{},"初":{"docs":{},"次":{"docs":{},"读":{"docs":{},"这":{"docs":{},"个":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"域":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{"第09章-java内存模型/06-final域的内存语义.html":{"ref":"第09章-java内存模型/06-final域的内存语义.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"length":3498},"corpusTokens":["!","!=","!canrunincurrentrunstate(task.isperiodic())","!compareandsetwaitstatus(p,","!hasqueuedpredecessors()，hasqueuedpredecessors是判断当前节点是否有前驱节点，如果有，证明有比当前节点等待时间长的节点，所以此时失败，返回false，继续等","!t.isinterrupted())","!wt.isinterrupted())","\"","\"[lock","\"[unlocked]\"","\"]\");","\"不够了\");","\"任务被拒绝了哦，欢迎关注微信公众号“大雄和你一起学编程”\"","\"剩下\"","\"执行了\");","\"执行完了\");","\"执行完了，欢迎关注大雄和你一起学编程\");","\"第2个线程里的值\";","\"：收到通知，处理业务逻辑\");","#信号，当一个处理器在总线上输出此信号时，其他处理器的请求将被阻塞住，那么该处理器可以独占共享内存。","#信号，而是修改内部的内存地址，并允许它的缓存一致性机制来保证操作的原子性，因为缓存一致性机制会阻止同时修改由两个以上处理器缓存的内存区域数据，当其他处理器回写已被锁定的缓存行的数据时，会使缓存行无效","${一个数字}这个样子","&","&&","(","(!","(!(condit","(!canrunincurrentrunstate(periodic))","(!compareandsetstate(c,","(!compareandsetwaitstatus(node,","(!completedabruptly)","(!flag)","(!isheldexclusively())","(!isonsyncqueue(node))","(!isonsyncqueue(node)),","(!isupdate)","(!periodic)","(!transferforsignal(first)","(!tryacquire(arg)","((","((interruptmod","((o","((runstateatleast(ctl.get(),","()","(++putindex","(++takeindex","(32","(64","(96","(;","(;;)","(account.gettotal()","(acquirequeued(node,","(c","(cancel","(capac","(command","(compareandincrementworkercount(c))","(compareandsethead(new","(compareandsetstate(0,","(compareandsetstate(currentstate,","(compareandsettail(pred,","(compareandsettail(t,","(completedabruptly)","(condit","(core","(count","(current","(diff","(e","(e)","(error","(executionexcept","(failed)","(first","(firstwait","(free)","(getstate()","(h","(inheritthreadloc","(int","(interruptedexcept","(interruptmod","(isalive())","(isshutdown()","(isshutdown())","(itr","(key","(len","(list.isempty())","(list.size()","(lock)","(map","(min","(money","(new","(newstat","(nextc","(node","(node.nextwait","(other","(p","(p.casnext(null,","(period","(pred","(q","(q.peek()","(r","(runstatelessthan(c,","(runstateof(c)","(runtimeexcept","(scheduledfuturetask)other;","(scheduledfuturetask.super.runandreset())","(second","(securityexcept","(sequencenumb","(sequencernumb","(shoudrun)","(shouldparkafterfailedacquire(p,","(t","(t)e.value;","(t.waitstatu","(table.length","(table[h]","(task","(thread.interrupted()","(thread.interrupted())","(threadlocal)","(throwabl","(total","(total)","(tryrelease(arg))","(w","(wc","(workeradded)","(workercountof(c)","(不满足条件)","(原文引用)","(对象)",")","*","*/","+","+=","/*","/**","//","//【b】","0","0)","0))","0);","01","02","03","04","05","06","07","08","09","09:36:50","09:37:00","09:37:10","09:37:20","09:40:18","09:40:29","09:40:40","09:40:51","0;","0l,","0代表没有加锁","1","1))","1);","1,","1.","10","10)","10,","10，默认优先级和创建他的父线程相同","133专家组决定增强volatile的内存语义","133为什么要增强volatile的内存语义","133之前的旧java内存模型中，虽然不允许volatile变量之间重排序，但旧的java内存模型允许volatile变量与普通变量重排序.","133使用happen","133内存模型","14个java并发容器，你用过几个？","1;","1代表加锁了","1）lock前缀指令会引起处理器缓存回写到内存","1）将当前处理器缓存行的数据写回到系统内存。","1，减到0就是读锁释放了。","1，当写状态为0时表示写锁已被释放，唤醒同步队列里的线程，同时前次写线程的修改对后续读写线程可见。","2,","2.","2020","2;","2）一个处理器的缓存回写到内存会导致其他处理器的缓存无效","2）这个写回内存的操作会使在其他cpu里缓存了该内存地址的数据无效。","3)","3)就是fals","3,","3.","32位情况下对象头的结构","3;","3，","4.","5179523762034025860l;","5开始，java使用新的jsr","5开始，把工作单元与执行机制分离开来。工作单元（可执行的任务）包括runnable和callable，而执行机制由executor提供。","60l,","7373984872572414699l;","7种状态！！！","9一下都启动了，但是每一批都只有三个线程在执行，因为只有三个线程能拿到锁",":",";","=","==",">",">=",">修改数据",">偏向锁状态",">改引用",">轻量级锁状态",">重量级锁状态","?","@overrid","@param","@return","@suppresswarnings(\"unchecked\")","@throw","``","```java","a.setname(\"a\");","a.setname(\"我是等待者\");","a.start();","a:第1个线程里的值","aba问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加1，jdk1.5的atomic包里提供了一个类atomicstampedreference来解决aba问题。这个类的compareandset方法的作用是首先检查当前引用是否等于预期引用，并且检查当前标志是否等于预期标志，如果全部相等，则以原子方式将该引用和该标志的值设置为给定的更新值。","abortpolicy：直接抛出异常。","abrupt,","abstract","abstractqueuedsynchron","abstractqueuedsynchronizer.conditionobject))","account","account(100);","account(int","account(integ","account.draw(10);","acquire(1);","acquire(int","acquireinterruptibly(int","acquirequeued(addwaiter(node.exclusive),","acquirequeued(fin","acquires)","acquires))","acquires;","acquireshared(int","acquiresharedinterruptibly(int","acquireshared需要无条件传播","add(","addconditionwaiter();","addwait","addwaiter(nod","addwaiter前面说了，就是进入同步对队列，看看acquirequeu","addworker(null,","addworker(runn","addworkerfailed(w);","addworker做的核心工作就是，创建worker,","add的话先加锁，如果不加锁，可能拷贝几份出来，而且会有线程安全问题。","adjust","afterexecute(task,","age:4","allow","allowcorethreadtimeout","api","api和不可用的处理方式","aq","aqs依赖内部的同步队列来完成同步状态的管理，当前线程获取同步状态失败时，aqs会将当前线程以及等待状态等信息构造成为一个节点（node）并将其加入同步队列，同时会阻塞当前线程，当同步状态释放时，会把首节点中的线程唤醒，使其再次尝试获取同步状态。","aqs写太多了，贴了不少代码，但是回头看，几句话就能概括aqs。","aqs就是这么用的，继承他，然后根据需要重写他的方法","aqs提供的模板方法","aqs是同步状态管理的工具","aqs的使用","aqs的原理","arg)","arg))","arg):","arg)：","arg)：共享式获取同步状态，没获取到则进入同步队列，同一时刻可以有多个线程获取到同步状态","arg)：共享式获取同步状态，返回>=0表示获取成功，否则表示获取失败","arg)：共享式释放同步状态","arg)：可以被中断","arg)：独占式释放同步状态，释放后会将同步队列第一个节点唤醒","arg)：独占是获取同步状态，但是能响应中断，被中断抛异常","arg,","arg;","args)","array","array;","arrayblockingqueu","arrayblockingqueue(int","arrayblockingqueue<>(3),","arrayblockingqueue：一个由数组结构组成的有界阻塞队列。","arrays.copyof(elements,","art","atom","atomicinteg","atomicinteger(0);","atomicinteger.get();","atomicinteger.getandincrement());","atomicinteger.getandincrement();","available.await();","available.signal();","await()","await(long","awaituntil(d","await方法里面的whil","b","b.setname(\"b\");","b.setname(\"通知者\");","b.start();","b:第2个线程里的值","backup","barri","barrier","barriers是一个“全能型”的屏障，它同时具有其他3个屏障的效果。现代的多处理器大多支持该屏障","barriers）","barriers，intel称之为memori","befor","beforeexecute(wt,","before于任意后续对这个volatile域的读","before于任意后续对这个volatile域的读。","before于线程a从threadb.","before于线程b中的任意操作。","before于该线程中的任意后续操作","before于该线程中的任意后续操作。","before于随后对这个锁的加锁","before于随后对这个锁的加锁。","before关系","before关系指定的顺序来执行。如果重排序之后的执行结果，与按happen","before关系来执行的结果一致，那么这种重排序并不非法","before关系，并不意味着java平台的具体实现必须要按照happen","before另一个操作，那么第一个操作的执行结果将对第二个操作可见，而且第一个操作的执行顺序排在第二个操作之前","before的概念来阐述操作之间的内存可见性。在jmm中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须要存在happen","before简介","before规则","before规则：","begin()","biased(偏向锁)","biased_lock:1","bits)","blocked,","blocker)","blocker,","blockingqueu","boolean","booleanhasqueuedthreads()：是否有线程正在等待获取许可证。","boundlist","boundlist(int","boundlist<>(10);","break","break;","brokenbarrierexception,","broker表示阻塞对象，多用于系统监控可问题排查，书上说的，我也不知道","b，jmm并不要求a一定要在b之前执行。jmm仅仅要求前一个操作（执行的结果）对后一个操作可见，且前一个操作按顺序排在第二个操作之前。jmm允许这种重排序。","b，且b","c","c;","ca","cach","cachedthreadpool","cachedthreadpool：创建一个会根据需要创建新线程的线程池","call()","callabl","callable()","callable也是函数式接口，所以也能用lamba","callerrunspolicy：只用调用者所在线程来运行任务。","cancel","cancel(boolean","cancel(false);","cancelacquire(node);","cancelled;","capac","capacity,","castail(t,","cas三大问题：","cas底层是sun.misc.unsafe里边提供的，都是些native方法","cas设置tail.next=加进来的节点","catch","checkinterruptwhilewaiting(node))","checknotnull(e);","childvalue(t","class","class.","clean","collect","command)","command,","compar","compareandset","compareandsethead(nod","compareandsetstate(int","compareandsettail(nod","compareandsettail或者head失败就自旋","compareandswapint(object","compareandswaplong(object","compareandswapobject(object","compareto(delay","compil","completedabruptli","completedabruptly)","completedabruptly);","completedtaskcount","completedtasks;","concurr","concurrenthashmap","concurrenthashmap效率高","concurrenthashmap是由segment数组结构和hashentry数组结构组成","concurrenthashmap是线程安全且高效的hashmap","concurrentlinkeddequ","concurrentlinkedqueu","concurrentskiplistmap","concurrentskiplistset","concurrent包的实现","concurrent实现的基石","concurrent的模式","condit","condition)","condition.await()","conditionobject","conditionobject();","conditionobject里边有两个重要成员变量firstwaiter，lastwaiter，对比aqs，aqs有head和tail，这个是双向队列的模板，太巧了","condition与object监视器的区别","condition接口也提供了类似object的监视器方法，与lock配合可以实现等待/通知模式","condition是lock的附属物，condition定义了等待/通知两种类型的方法，当前线程调用这些方法时，需要提前获取到condition对象关联的锁。","condition的api","continu","copyonwritearraylist","copyonwritearraylist里边核心就是维护这样的一个数组，注意这里加了volatil","copyonwritearrayset","copyonwrite于reentrantreadwritelock的对比","copyonwrite就是写时复制，就是在写操作时，不是直接操作原数据容器，而是先复制一份，在复制的这一份里写，写完再将引用指向复制的这一份。","copyonwrite的好处","copyonwrite的缺点","copyonwrite系列","copyonwrite读数据实时性要比reentrantreadwritelock差。因为当copyonwrite读到一批数据在消费时，恰好有别的线程修改了数据，此时读线程还是使用的老的数据；但是reentrantreadwritelock不一样，只要有人读，你就不能写，只要有人写，你就不能读","core)","corepools","corepoolsize)","corepoolsize,","corepoolsize:","corepoolsize;","count","count)","count);","count++;","count;","countdownlatch","countdownlatch(thread_count);","countdownlatch(要等待几个线程)","countdownlatch)","countdownlatch.countdown();","countdownlatch;","countdownlatch允许一个或多个线程等待其他线程完成操作。","countdownlatch其实时根据aqs共享式获取同步状态实现的，要等待的线程的个数就是state，countdown相当于st","counter","counter();","counter2","counter2();","cpu处理速度","cpu密集型：核心线程数=核心数+1","cpu核心数通过runtime.getruntime().availableprocessors()获得","cpu通过时间分片来执行任务，多个线程在cpu上争抢时间片执行，线程切换需要保存一些状态，再次切换回去需要恢复状态，此为上下文切换成本。","cpu高速缓存中可以分配最小的存储单位。处理器填写缓存行时会加载整个缓存行","createinheritedmap(threadlocalmap","createmap(t,","createmap(thread","cst","ctl","ctl.get();","current","currentst","cyclicbarri","cyclicbarrier(2)","cyclicbarrier(2);","cyclicbarrier.await()","cyclicbarrier可以用于多线程并行计算数据，等到所有线程都计算完再合并。","cyclicbarrier默认的构造方法是cyclicbarrier（int","c。","c与0x0000ffff求与","c！=0但是低16位为0表示有人拿了读锁，有人拿了读锁是不能获取写锁的","c，那么ahappen","date());","daxionglock","daxionglock();","deadlin","deadline)","decoratetask(command,","decrementworkercount();","delay","delay,","delayedexecute(runnablescheduledfutur","delayedexecute(t);","delayedworkqueu","delayqueu","delayqueue.put(task);","delayqueue.take();","delayqueue<>();","delayqueue是有他的特殊之处的,所以看一看","delayqueue：一个使用优先级队列实现的无界阻塞队列。","delay（schedulewithfixeddelay）方式","demo_02_04_1_threadsync","demo_02_05_1_condit","demo_02_06_1_join","demo_02_06_2_sleep","demo_02_06_3_interrupt","demo_02_08_1_threadloc","demo_02_08_2_threadlocalinherit","demo_03_02_1_aq","demo_03_02_2_triplelock","demo_04_01_1_atom","demo_06_02_1_exexutor","demo_06_02_2_exexutor","demo_07_02_1_cylicbarri","demo_07_03_1_semaphor","demo_07_04_1_exchang","dequeue()","dequeue();","diff","discardoldestpolicy：丢弃队列里最近的一个任务，并执行当前任务。","discardpolicy：不处理，丢弃掉。","dosignal(first);","dosignal(nod","dosignalall(nod","draw(int","e","e)","e);","e,","e.get()","e.get();","e.printstacktrace();","e;","element","element()","elements.length;","end()","enq","enq(fin","enq(node);","enq;","enqueue(","enqueue(e);","enq前面分析过，就是同步队列的入队","ensureprestart()","ensureprestart();","entri","entry(key,","entry[]","entry[len];","enum","epoch:2","error","error(\"maximum","error(x);","error:java:","establish","exceeded\");","except","exchang","exchanger.exchange(\"第1个线程里的值\");","exchanger.exchange(b);","exchanger<>();","exchanger用于进行线程间的数据交换。它提供一个同步点，在这个同步点，两个线程可以交换彼此的数据。这两个线程通过exchange方法交换数据，如果第一个线程先执行exchange()方法，它会一直等待第二个线程也执行exchange方法，当两个线程都到达同步点时，这两个线程就可以交换数据，将本线程生产出来的数据传递给对方。(原文复制)","exclus","exclusivecount(c);","exclusivecount(nextc)","execute()方法用于提交不需要返回值的任务，所以无法判断任务是否被线程池执行成功。","execute(runn","executor","executor)","executors.newscheduledthreadpool(4);","executorservic","executor框架","executor框架共有三大成员+一工具类","executor框架成员及其体系","expect,","extend","fail","failed:","failur","fair)","fals","false);","false;","fast","fence）指令，通过内存屏障指令来禁止特定类型的处理器重排序","field","fill","final","finali","finalizabledelegatedexecutorservic","final域为引用类型","final域写重排序规则可以保证：","final域的内存语义","final域的重排序规则","first","first)","first.getdelay(nanoseconds);","first.nextwait","first.nextwaiter)","first.nextwaiter;","firsttask","firsttask)","firsttask,","firsttask;","firstvalue)","firstvalue);","firstwait","firstwaiter)","firstwaiter;","fixedthreadpool","fixedthreadpool：用于创建固定线程数量的线程池","flag","free","free;","full","full\"）","fullyrelease(node);","futur","futuretask","futuretask<>(new","gc","get()","get(getarray(),","get(int","get(object","getarray();","getdelay(timeunit","getentry(threadloc","getentryaftermiss(key,","getexclusiveownerthread())","getmap(t);","getmap(thread","getqueuedthreads()","getqueuedthreads():","getqueuedthreads()：返回所有等待获取许可证的线程集合，是个protected方法。","getreadholdcount()：返回当前线程获取读锁的次数","getreadlockcount()：返回当前读锁被获取到的次数，与线程数无关，同一个线程获取n次","getstate()","getstate();","getstate()：","gettask())","gettaskname()","getthreadfactory().newthread(this);","gettotal()","getwaitingthreads(condit","getwaitqueuelength(condit","getwriteholdcount()：获取当前写锁被获取的次数","git地址","h","h.next)","h.waitstatu","handler)","handler：拒绝策略，当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是abortpolicy，表示无法处理新任务时抛出异常。jdk有几种默认策略，也可以自定义策略，默认策略如下","happen","hashentry用于存储键值对数据","hashmap线程不安全。","hashtable效率低下","hashtable是util包下边的,去源码搜一个get，一个put，发现他的线程安全使用synchronized实现的，这种就是有一个线程在put时，大家都要等，有一个线程在get时也是这样。因此效率低。","hasqueuedpredecessors()","haswaiters(condit","head","head;","header","headoffset,","head都是null怎么处理，有元素怎么处理，无非就是引用指来指去，不同的是，他需要保证原子性","heapindex","heapindex;","heavyweight","help","hit","i,","idea查看jdk源码并在源码中写注释","identity_hashcode:25","ignore)","illegalargumentexception(\"not","illegalmonitorstateexception();","illegalstateexception();","implement","increment()","index)","index);","inheritablethreadloc","inheritablethreadlocal.set(\"欢迎关注微信公众号","inheritablethreadlocal<>();","inheritablethreadlocal的实现主要是在线程创建的时候，如果父线程有inheritablethreadlocal,","inhibit","initi","initialdelay,","initialvalue()","instanceof","int","int):","intavailablepermits()：返回此信号量中当前可用的许可证数。","integ","integer.max_value,","interfac","intern","interrupt","interrupted;","interruptedexcept","interruptedexception();","interruptedexception;","interruptifstarted()","interruptmod","intgetqueuelength()：返回正在等待获取许可证的线程数。","io密集型：核心线程数=2*核心数","isheldexclusively()","isheldexclusively();","isheldexclusively()：当前同步器是否在独占模式下被线程占用","islocked()","isperiodic();","isshared()","isupd","iswritelocked()：判断读锁是否被获取了","item","items.length)","items[putindex]","items[takeindex]","items[takeindex];","itrs.elementdequeued();","j","java","java.io.serializ","java.util包下提供的容器类是非线程安全的，并发共享访问会出现问题。java.util.concurrent包下提供了一些线程安全的容器类。","java7以下","java8也可以使用lamba\");","java中断机制是一种协作机制，也就是说通过中断并不能直接终止另一个线程，而需要被中断的线程自己处理中断。","java内存模型","java内存模型基础","java内存模型的抽象结构","java原子操作的实现","java并发机制的底层实现原理","java的cas会使用现代处理器上提供的高效机器级别的原子指令，这些原子指令以原子方式对内存执行读","java的并发采用的是共享内存模型","java程序至少有一个线程main，main线程由jvm创建","jdk提供的阻塞队列有7个，如下所示。","jmm不保证对64位的long型和double型变量的写操作具有原子性，而顺序一致性模型保证对所有的内存读/写操作都具有原子性","jmm不保证未同步程序的执行结果与该程序在顺序一致性模型中的执行结果一致","jmm会在退出临界区和进入临界区这两个关键时间点做一些特别处理，使得线程在这两个时间点具有与顺序一致性模型相同的内存视图）。临界区内的这种重排序既提高了执行效率，又没有改变程序的执行结果。","jmm决定一个线程对共享变量的写入何时对另一个线程可见","jmm对正确同步的多线程程序的内存一致性做了如下保证：","jmm的处理器重排序规则会要求java编译器在生成指令序列时，插入特定类型的内存屏障（memori","jmm的编译器重排序规则会禁止特定类型的编译器重排序","jmm禁止编译器把final域的写重排序到构造函数之外","jmm通过控制主内存与每个线程的本地内存之间的交互，来为java程序员提供内存可见性保证。","join","join()","join()并成功返回，那么线程b中的任意操作happen","join()操作成功返回。","join()规则：如果线程a执行操作threadb.","join(long","join如果带超时时间的话，那么如果超时的话主线程也会不再等join进去的线程而继续执行.","join实际就是判断join进来的线程存活状态，如果活着就调用wait(0),如果带超时时间了的话，wait里边的时间会算出来","jsr","jvm中的cas操作正是利用了处理器提供的cmpxchg指令实现的。自旋cas实现的基本思路就是循环进行cas操作直到成功为止。","jvm内部实现了很多种锁机制，有偏向锁、轻量级锁和互斥锁。","jvm基于进入和退出monitor对象来实现方法同步和代码块同步，但两者的实现细节不一样。代码块同步是使用monitorenter和monitorexit指令实现的，同步方法不知道","keepalivetime,","keepalivetime：","key","key)","key,","key.childvalue(e.value);","key.threadlocalhashcod","key为threadlocal,","klass","largestpools","largestpoolsize)","lastwait","leader","len","len);","length(32bits)","lightweight","line","linkedblockingdequ","linkedblockingdeque：一个由链表结构组成的双向阻塞队列。","linkedblockingqueu","linkedblockingqueue(),","linkedblockingqueue：一个由链表结构组成的有界阻塞队列。","linkedlist","linkedlist<>();","linkedtransferqueu","linkedtransferqueue：一个由链表结构组成的无界阻塞队列。","list","list.poll();","list.push(x);","list;","load1","load1;","load2","loadload","loadload;","loadstor","loadstore;","lock","lock()","lock();","lock,","lock.lock();","lock.lock()获取锁lock.newcondition()获取condit","lock.lockinterruptibly();","lock.newcondition();","lock.notify();","lock.unlock();","lock.wait();","lock:2","lockinterruptibly()","locksupport","locksupport.park(this);","locksupport.parknano","locksupport.parkuntil","locksupport.unpark(node.thread);","lock可以尝试非阻塞获取锁、能被中断的获取锁、能够带超时的获取锁，","lock指令可以实现如下功能：","lock接口","long","main(string[]","mainlock","mainlock.lock();","mainlock.unlock();","maintain","map","map.getentry(this);","map.set(this,","mark","marker","markword。然后线程尝试使用cas将对象头中的mark","max_count)","max_count是0xffff,","maximumpoolsize))","maximumpoolsize,","maximumpoolsize：最大线程数量，如果队列满了，已有线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是，如果使用了无界的任务队列这个参数就没什么效果。","mayinterruptifrunning)","memori","memory）中，每个线程都有一个私有的本地内存（loc","memory）分配对象时，域的默认初始化已经完成了","memory），本地内存中存储了该线程以读/写共享变量的副本。本地内存是jmm的一个抽象概念，并不真实存在。它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。","millis)","millis,","min","min)","mini","mini上边提issu","mini对应章下面找到","miss","mode)","mode);","mode;","money","money)","money;","monitorenter指令是在编译后插入到同步代码块的开始位置，而monitorexit是插入到方法结束处和异常处。当一个monitor被持有后他就被锁定了。","mycal","mycallable());","mythread","mythreadbycal","mythreadbycallable());","mythreadbyrunn","mythreadbyrunnable();","nanos)","nanoseconds);","nanostimeout)：带超时，且能被中断","nanostimeout)：独占是获取同步状态，能响应中断，且有超时，超时返回fals","nativ","need","new","new,","newcachedthreadpool(threadfactori","newcondition()","newel","newelements[len]","newfixedthreadpool(int","newnod","newnode))","newnode);","newscheduledthreadpool(int","newsinglethreadexecutor()","newsinglethreadexecutor(threadfactori","newstat","newstate))","newstate)：设置同步状态","newthread(runn","next","next;","nextc","nextindex(h,","nextwait","nextwaiter;","node","node()","node()))","node();","node(e);","node(thread","node(thread.currentthread(),","node)","node))","node,","node.condition,","node.predecessor();","node.prev","node.signal))","node.waitstatus;","node;","nonfairtryacquire(int","normal","notempti","notempty.await();","notempty.signal();","notempty.signalall();","notfull.await();","notfull.signal();","notfullcondit","notfullcondition.await();","notfullcondition.signalall();","notifi","notify()或notifyall()方法调用后，等待线程不会立即从wait()返回，需要调用notify()或notifall()的线程释放锁之后，等待线程才有机会从wait()返回。","notify()方法将等待队列中的一个等待线程从等待队列中移到同步队列中，而notifyall()方法则是将等待队列中所有的线程全部移到同步队列，被移动的线程状态由waiting变为blocked。","notify:","notifyal","notifyall:","notifyall不支持指定具体唤醒哪个线程，阻塞也只能阻塞当前线程，不能阻塞别人。所以说sync虽好，但是太死板了。","notifyall唤醒，但是notifi","now(),","nthreads,","null","null)","null);","null,","null;","nullpointerexcept","nullpointerexception();","o","o)","o.getname()","obj.wait()","object","object();","object.wait()","object[]","object的监视器方法","offer(","ok.","ok，所以最后一个节点并不是就是tail指的节点，得验证tail一直往下找才行","oper","order","other)","outertask","owner\");","p","p);","p.next","p.next;","p.waitstatus;","p;","parent.inheritablethreadloc","parentmap)","parentmap.table;","parentmap就是父线程的inheritablethreadloc","parentt","parenttable.length;","parentvalue)","parentvalue;","park()","park(object","parkandcheckinterrupt())","parknanos(long","parknanos(object","parkuntil(long","parkuntil(object","parties），其参数表示屏障拦截的线程数量，每个线程调用await方法告诉cyclicbarrier我已经到达了屏障，然后当前线程被阻塞。","path","peek()","period","period,","period;","pertain","poll()","poll(long","pred","pred.next","pred;","predecessor()","prev;","priorityblockingqueu","priorityblockingqueue：一个支持优先级排序的无界阻塞队列。","priorityqueu","priorityqueue();","privat","process","process.processdata();","processdata()","processworkerexit(w,","processworkerexit(work","profil","profiler.begin();","program","propag","protect","ptr_to_heavyweight_monitor:30","ptr_to_lock_record:30","public","push(t","put(","put(k","putindex","p和t都是执行第三个节点的，他们相等，短路操作，后边不走了，三元条件是false，所以p指向q，暂停（假设线程2卡在这里了），梳理一下此时的状态：tail和t都是指向第三个节点，p指向q，q指向新节点1号。","p是当前节点的前驱节点","q","q)","q.offer(e);","q.peek();","q;","r)","r,","rate（scheduleatfixedrate）方式，","re","read","readlock","readlock()：","readlock.lock();","readlock.unlock();","reducepermits（int","reduction）：减少reduction个许可证，是个protected方法。","reentrantlock","reentrantlock();","reentrantreadwritelock","reentrantreadwritelock();","reentrantreadwritelock.readlock","reentrantreadwritelock.readlock();","reentrantreadwritelock.writelock","reentrantreadwritelock.writelock();","reexecuteperiodic(outertask);","reinterrupt;","reject(task);","rejectedexecution(runn","rejectedexecutionhandl","rejectedexecutionhandler()","release(1);","release(int","releases)","releases;","releaseshared(int","remove()","remove(task))","remove(this);","removeoncancel","replac","reportinterruptafterwait(interruptmode);","result","result;","retry:","retry;","return","return;","revers","rs","rs)","run()","runandreset()可以理解为就是开始执行任务","runnabl","runnable()","runnable,","runnablescheduledfutur","runstateatleast(ctl.get(),","runstateof(c);","runstateof(ctl.get());","runwork","runworker(this);","runworker(work","s","s.thread","s;","same","savedst","savedstate)","schedul","schedule()","scheduleatfixedrate(runn","scheduleatfixedrate的执行流程","scheduledexecutorservic","scheduledexecutorservice.scheduleatfixedrate(()","scheduledexecutorservice.schedulewithfixeddelay(()","scheduledfutur","scheduledfuturetask","scheduledfuturetask(command,","scheduledfuturetask)","scheduledfuturetask.super.run();","scheduledfuturetask就是runnablescheduledfuture的一个实现类","scheduledthreadpool","scheduledthreadpoolexecutor","scheduledthreadpoolexecutor适用于需要多个后台线程执行周期任务，同时为了满足资源管理的需求而需要限制后台线程的数量的应用场景。","schedulewithfixeddelay(runn","schedulewithfixeddelay和scheduleatfixedrate是类似的，只是他计算下一次执行的时间的方式不同。","second)","segment是一种可重入锁","selfinterrupt();","semaphor","semaphore(3);","semaphore.acquire();","semaphore.release();","semaphore（信号量）是用来控制同时访问特定资源的线程数量，它通过协调各个线程，以保证合理的使用公共资源。","sequenc","sequencenumber;","sequencer.getandincrement();","sequencernumb","serialversionuid","serial语义","serial语义。","serial语义允许对存在数据依赖的操作做重排序的原因）；但在多线程程序中，对存在数据依赖的操作重排序，可能会改变程序的执行结果。","set","set(t","set(threadloc","setarray(newelements);","setexclusiveownerthread(current);","setexclusiveownerthread(null);","setexclusiveownerthread(thread.currentthread());","sethead(node);","setinitialvalue();","setnextruntime()","setnextruntime();","setstate(","setstate(0);","setstate(3);","setstate(int","setstate(nextc);","settaskname(str","setthreshold(len);","sft","sft);","sft.outertask","share","shared;","shoudrun","shutdown","shutdownnow","shutdownnow首先将线程池的状态设置成stop，然后尝试停止所有的正在执行或暂停任务的线程，并返回等待执行任务的列表","shutdown只是将线程池的状态设置成shutdown状态，然后中断所有没有正在执行任务的线程","signal","signal()","signal();","signalal","signalall();","signalall就是把等待队列中的所有节点都转移到同步队列，并唤醒","singlethreadexecutor","singlethreadexecutor：创建只有单个线程的线程池","size)","size++;","size;","skiplist即跳表，跳表是一种空间换时间的数据结构，通过冗余数据，将链表一层一层索引，达到类似二分查找的效果。","sleep","sleep(long","socket连接数","start()","start()规则：如果线程a执行操作threadb.start()（启动线程b），那么a线程的threadb.start()操作happen","state","static","stop()","stop)","stop))","stop)))","store1","store1;","store2","storeload","storeload;","storestor","storestore;","string","submit()方法用于提交需要返回值的任务","submit(task","submit就是首先将callable或者runnable包装成futuretask，然后调用execute,","sum","super();","super.cancel(mayinterruptifrunning);","super.getqueue().add(task);","super.tostring()","sychronized加在普通方法上，锁为当前实例对象","sync","sync()","sync();","sync.acquire(1);","sync.acquireinterruptibly(1);","sync.getowner();","sync.getqueuedthreads();","sync.getwaitingthreads((abstractqueuedsynchronizer.conditionobject)condition);","sync.getwaitqueuelength((abstractqueuedsynchronizer.conditionobject)condition);","sync.haswaiters((abstractqueuedsynchronizer.conditionobject)condition);","sync.newcondition();","sync.release(1);","sync.releaseshared(1);","sync.tryacquire(1);","sync.tryacquirenanos(1,","sync.tryacquiresharednanos(1,","sync;","synchron","synchronized不能做到","synchronized同步块，锁为()里边的对象","synchronized实现同步的基础：java中的每一个对象都可以作为锁。","synchronized是隐式获取释放锁，比较简单和固定，lock是需要手动获取锁和释放，比较灵活","synchronized用的锁是存在java对象头里的。","synchronousqueu","synchronousqueue(),","synchronousqueue：一个不存储元素的阻塞队列。","system.currenttimemillis()","system.currenttimemillis();","system.out.println(\"a:\"+a);","system.out.println(\"b:\"+b);","system.out.println(\"runnable是函数式接口，","system.out.println(\"任务\"","system.out.println(\"任务被拒绝了哦，欢迎关注微信公众号“大雄和你一起学编程”\");","system.out.println(\"取走\"","system.out.println(\"我开始处理任务了\"","system.out.println(\"欢迎关注微信公众号'大雄和你一起学编程'\"+new","system.out.println(\"欢迎关注微信公号'大雄和你一起学编程'\");","system.out.println(\"钱不够了，去关注微信公号‘大雄和你一起学编程’吧\");","system.out.println(a.equals(b));","system.out.println(futuretask.get());","system.out.println(inheritablethreadlocal.get());","system.out.println(thread.currentthread().getname()","system.out.println(thread.currentthread().getname()+","system.out.println(thread.currentthread().getname()+\":发出通知\");","system.out.println(thread.currentthread().getname()+\"：等待通知\");","system.out.println(threadgroup1.activecount());","system.out.println(threadlocal.get());","t","t)","t,","t.inheritablethreadloc","t.inheritablethreadlocals;","t.interrupt();","t.next","t.prev)","t.start();","t;","t;;)","tab[i]","tabl","table;","table[h]","table[i];","tail","tail))","tail,","tail.next","tail;","tailoffset,","tail的next","take()","takeindex","task","task(str","task)","task);","task.cancel(false);","task.gettaskname()","task.run();","taskname)","taskname,","taskname;","task下一次将要被执行的具体时间","task是创建worker带进去的任务，会先执行他，然后从workqueue里边取","terminated;","testcountdownlatch","testcountdownlatch(countdownlatch","testthreadlocalinherit","testthreadlocalinherit().start();","thereadloc","this)","this.countdownlatch","this.firsttask","this.inheritablethreadloc","this.items;","this.lock;","this.mainlock;","this.money","this.nextwait","this.sequencernumb","this.siz","this.tasknam","this.thread","this.tim","this.tot","this.total);","this.waitstatu","this;","thread","thread(()","thread(futuretask).start();","thread(futuretask);","thread(mythreadbyrunnable);","thread(r);","thread(runnable);","thread(threadgroup,","thread)","thread,","thread.","thread.currentthread());","thread.currentthread();","thread.getthreadgroup()","thread.getthreadgroup();","thread.join(long)","thread.setname(\"欢迎关注微信公众号“大雄和你一起学编程”\"","thread.sleep","thread.sleep(1);","thread.sleep(1000);","thread.sleep(10000);","thread.start();","thread.yield()","thread2","thread2.start();","thread:23","thread;","thread_count","threada.getname();","threada.getpriority()","threada.isdaemon();","threada.setdaemon(true);","threada.setname(\"欢迎关注微信公号'大雄和你一起学编程'\");","threada.setpriority(thread.norm_priority);","threadfactori","threadfactory()","threadfactory)","threadfactory));","threadfactory);","threadfactory,","threadfactory：用于设置创建线程的工厂，可以通过线程工厂给每个创建出来的线程设置更有意义的名字。要实现threadfactory接口","threadgroup","threadgroup(\"欢迎关注微信公号'大雄和你一起学编程'\");","threadgroup1","threadgroup1.interrupt();","threadgroup1.setmaxpriority(10);","threadloc","threadlocal();","threadlocal(){","threadlocal.createinheritedmap(parent.inheritablethreadlocals);","threadlocal.get();","threadlocal.set(\"ddd\");","threadlocal.set(system.currenttimemillis());","threadlocal.threadlocalmap","threadlocalmap","threadlocalmap(parentmap);","threadlocalmap(this,","threadlocalmap(threadlocalmap","threadlocalmap.entri","threadlocalmap是threadlocal的内部类，他里边是一个用一个entry数组来存数据的。set时讲threadlocal作为key，要存的值传进去，他会对key做一个hash，构建entry,放到entry数组里边。","threadlocal和inheritablethreadlocal是基于在thread里边的两个变量实现的，这两个变量类似于一个hashmap的结构threadlocalmap，里边的entri","threadlocal的创建","threadlocal看完了，再来瞅瞅inheritablethreadlocals,看看他是怎么可以从父线程那里拿东西的","threadpoolexecutor","threadpoolexecutor(0,","threadpoolexecutor(1,","threadpoolexecutor(2,","threadpoolexecutor(int","threadpoolexecutor(nthreads,","threadpoolexecutor.submit(new","threadpoolexecutor的创建前面已经讲过了，里边涉及到很多的参数，这里不再赘述。这里主要是探讨excutors为我们提供了几种实用threadpoolexecutor","threadpoolexecutor详解","threadpoolexecutor这个类就好了","thread{","thread的构造里边可以指定","throw","throw_ie)","throwabl","thrown","thrown);","time","time,","time;","timed_waiting,","timeout,","timeunit","timeunit.milliseconds,","timeunit.seconds);","timeunit.seconds,","timeunit.seconds.tomillis(second)","todo:","tostring()","total)","total;","transferforsignal(first);","transferforsignal(nod","transfer方法","transient","tri","triggertime(","triggertime(initialdelay,","triplelock","triplelock();","triplelock.lock();","true;","tryacquire(1);","tryacquire(arg))","tryacquire(int","tryacquirenanos(int","tryacquireshared(int","tryacquiresharednanos(int","tryacquire是你自己要重写的，传说中的模板方法模式啊，比如我们之前那个独占锁","trylock()","trylock(long","tryrelease(int","tryreleaseshared(int","tryrelease也是需要重写的","tryterminate();","trytransfer方法","trytransfer方法是用来试探生产者传入的元素是否能直接传给消费者。如果没有消费者等待接收元素，则返回false。","trywritelock()","unit","unit)","unit),","unit,","unit.convert(tim","unit.tonanos(period));","unit.tonanos(time));","unit）方法则会阻塞当前线程一段时间后立即返回，这时候有可能任务没有执行完","unit：","unlinkcancelledwaiters();","unlock()","unpark(thread","unparksuccessor(h);","unparksuccessor(nod","unsafe.compareandswapobject(this,","unsupportedoperationexception();","until","unused)","up","update)","update);","update)：原子的设置同步状态","us","usebiasedlocking=fals","v","valu","value)","value);","value++;","value;","value为你存的值.","var1,","var2,","var4,","var5);","var6);","void","volatil","volatile使用优化","volatile内存语义","volatile内存语义的实现","volatile写","volatile原理","volatile变量的读/写和cas可以实现线程之间的通信","volatile变量规则：对一个volatile域的写，happen","volatile声明的变量，转变为汇编会有一个lock指令","volatile是轻量级的synchronized，不会引起线程上下文切换和调度","volatile的两条实现原则：","w","w)","w,","w.completedtasks++;","w.completedtasks;","w.firsttask","w.firsttask;","w.lock();","w.thread;","w.unlock();","wait(0);","wait(long):","wait(long,","wait:","waiting,","waiting状态的线程在等待别的线程做一个特殊的事情（action）例如","waitnotifymodel","waitstatus)","waitstatus;","wasn't","wc","woker是如何创建并加入workers的以及worker是如何启动的的问题。","word","word(32bits)","word:","word中偏向锁的标识是否设置成1（表示当前是偏向锁）：如果没有设置，则使用cas竞争锁；如果设置了，则尝试使用cas将对象头的偏向锁指向当前线程。","word复制到锁记录中，官方称为displac","word替换为指向锁记录的指针。如果成功，当前线程获得锁，如果失败，表示其他线程竞争锁，当前线程便尝试使用自旋来获取锁。","word替换回到对象头，如果成功，则表示没有竞争发生。如果失败，表示当前锁存在竞争，锁就会膨胀成重量级锁。","word要么重新偏向于其他线程，要么恢复到无锁或者标记对象不适合作为偏向锁，最后唤醒暂停的线程。","word里是否存储着指向当前线程的偏向锁。如果测试成功，表示线程已经获得了锁。如果测试失败，则需要再测试一下mark","worker","worker(firsttask);","worker(runn","workerad","workercount","workercountof(c);","workercountof(ctl.get());","workercountof方法就是从里边提取","workers)。程序员干不完的需求（runnable/callable)放在需求池（workqueue）里排队。每个研发部都配置有骨干程序员数量（corepoolsize）和最大能容纳的程序员数量（maximumpoolsize）。具体要做的任务就是产品的需求。","workers.remove(w);","workerstart","workerstarted)","workerstarted;","worker实现了runnable接口，所以他是个任务，有run方法；同时有继承了aqs，所以他也是一把锁。","worker就是这么创建的","worker是在这里启动的","worker的数量的","worker被装在一个hashset（workers）里边，","workqueue,","workqueue.isempty())","workqueue.isempty()))","workqueue：","write","writelock","writelock()：","writelock.lock();","ws","ws,","wt","wt.interrupt();","x","x)","x.time;","x;","xx:","xx:biasedlockingstartupdelay=0","xxx表示所转载文章的链接","yield","zero","{","{...}","|","||","}","}).start();","});","},","};","“大雄和你一起学编程”或者打赏或者github点个star。","“欢迎关注微信公众号“大雄和你一起学编程”数字”，拒绝测试时打印一段非常有意思的一段话","。","《java并发编程艺术》里边有7中状态","《java并发编程艺术》里边有个图，对这个独占式同步状态获取流程说的比较清晰","《疯狂java讲义》里边只有5中状态，缺少waiting和timed_wait","【a】","【c】","【d】","【大else】","【第一个大if】","【第二个大if】","一个","一个concurrenthashmap里包含一个segment数组。segment的结构和hashmap类似，是一种数组和链表结构。","一个segment里包含一个hashentry数组","一个使用aqs的例子","一个使用的例子","一个例子","一个共享式获取同步状态的例子","一个是可以使用synchronized同步，一个是可以使用lock。synchronized是也是隐式的锁。","一个有效的缓存行被写入到不存在的内存区域","一个简单的i++操作,","一个线程中的所有操作必须按照程序的顺序来执行","一个线程池相当于创建了一个研发部，创建研发部时需要指定骨干程序员数量，最大能容纳的程序员数量，需求池用哪种（blockingqueue）,如果忙不过来的需求怎么给产品回复（拒绝策略）等等内容。刚开始这个研发部一个程序员也没有。","一个表示没有返回结果的任务，一个表示有返回结果的任务，这个我们太熟悉了","一个锁可以搞多个condit","一些api的使用直接在demo说明，不单独说明","一些cpu术语","一些体会","一些原则","一些参数校验","一些说明：","一些需要注意的点：","一共有7个阻塞队列：","一句话可以说明白，arrayblockingqueue是基于reentrantlock及其condition实现的。说到这里，你可能已经知道怎么搞了。","一是共享内存：线程之间共享程序的公共状态，通过写","一是线程之间如何通信","一是：就是把多个共享变量合并成一个共享变量来操作","一直阻塞","一般都会将condition对象作为成员变量。当调用await()方法后，当前线程会释放锁并在此等待，而其他线程调用condition对象的signal()方法，通知当前线程后，当前线程才从await()方法返回，并且在返回前已经获取了锁。","三个有一个执行完了，后边的才能拿到锁","三种形式：","三种方式比较","三种方式，总有一款适合你，三种都搞大雄要送你哆啦a梦。","上下文切换","上边的那篇文章，文字描述有7中状态，但是图里边只有6种","上边这个就是thread的两个成员变量，其实两个是一样的类型。","上边这段描述是我看简单搂了一眼源码写的，发现竟然和书上意思一样，开心~","上述的这种等待通知需要使用synchronized,","下一个在condit","下一次加到队列的任务设置好","下一次执行时间，注意固定频率和固定间隔的区别","下边是worker源码，移除了非关键的东西","下边是提交任务的过程","下面这个例子要实现的就是同时开三个线程，主线程需要等待这三个线程执行完后继续执行。","不可中断的一个或者一系列操作","不可用","不同点是什么","不得不说，牛逼啊！~","不懂这是个啥玩意儿","不支持","不是await的地方会立即执行的，需要先抢到锁才会继续执行","不是周期任务，直接run就好,","不特别追求底层细节的同学","不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不能被改变。编译器、runtime和处理器都必须遵守a","不能","不说了，直接引用书上的话。","不适用的场景：","与数据库连接类似，线程也是珍贵资源，线程的创建和销毁都会损失性能，所以和数据库链接池思路类似，我们也可以将线程放到一个池子里，用的时候去取，用完还回去，这个池子就是线程池。","与此同时，线程2开始尝试插入节点（新节点2号），进入for，显然，此时的tail,t,p都是指向第三个节点的，注意此时的q，q是第三个节点的next节点，所以q==新节点1号，不满足【第一个大if】，而且p是指向第三个节点的，也不满足【第二个大if】，所以进入到【大else】，所以执行这个三元操作，看一个条件p!=t?","与程序员密切相关的happen","两个基于跳表的容器","两个操作之间存在happen","两个方案：","两个示例","两大特性：","严格来讲并不是一个定时任务","中断","中断组里所有线程","中等","中途线程池状态发生变化了","为了保证内存可见性，java编译器在生成指令序列的适当位置会插入内存屏障指令来禁止特定类型的处理器重排序","为了实现volatile的内存语义，编译器在生成字节码时，会在指令序列中插入内存屏障来禁止特定类型的处理器重排序","为了实现最小安全性，jvm在堆上分配对象时，首先会对内存空间进行清零，然后才会在上面分配对象（jvm内部会同步这两个操作）。因此，在已清零的内存空间（pre","为了用一个state表示两种锁的状态就需要对状态拆分，int是32位，所以拆成两个部分，高16位标识读状态，低16位标识写状态。","为了避免竞争，acquire方法必须首先标识他需要sign","为什么使用","为什么要有多线程","为什么这里不需要用原子操作？因为释放的时候说明那个线程占用同步器，而同步器只会被一个线程占用","为其他线程服务的线程可以是守护线程，守护线程的特点是如果所有的前台线程死亡，则守护线程自动死亡。","为啥thread构造里边能方runnable，也能放futuretask?","为此，java.util.concurrent.atomic这个包下边提供了一些原子类，这些原子操作类提供了一种用法简单、性能高效、线程安全地更新一个变量的方式。","主线程join一个线程，那么主线程会阻塞直到join进来的线程执行完，主线程继续执行，","主要包括如下两个实现类","主要是为了保证数据的可见性，如果当前线程不获取读锁而是直接释放写锁，","举个例子，a线程拿到的变量值是1，想改为3，但是在你还没改的时候b线程给他改成2了，compareandswapint(obj,3333,","也是会阻塞，但是达到一定时间还没成功就返回特殊值了","也是让线程暂停一下，但是是进入就绪状态，让系统重新开始一次新的调度过程","二是消息传递：线程之间没有公共状态，线程之间必须通过发送消息来显式进行通信","二是线程之间如何同步","二是：实用jdk的atomicreference类来保证引用对象之间的原子性，把多个变量放在一个对象里来进行cas操作","互联网公司与线程池的关系","什么是copyonwrit","仅仅有一个处于该对象的等待池中的线程（随机）会进入该对象的同步队列（锁池）。","从jdk","从openjdk找的那两个类，直接拷贝下来在你的maven工程里边手动创建就可以了，可以直接在github下载,免得找","从wait()方法返回的前提是获得了调用对象的锁。","从while跳出来表明没有任务可以执行了","从上边分析可以看出，我们选型的时候应该要优先copyonwrite,","从内存语义的角度来说，volatile的写","从后往前找，找到第一个没有被取消的节点","从源代码到指令序列的重排序","他不管你的任务执行时间，任务执行完了再隔delay时间执行下一次任务","他们写的效率是差不多的，写的时候都是需要获取独占锁的。","他们在一个大办公室里（hashset","他们都是实现blockingqueue接口，下面一一介绍。","他们都适用读多写少的情况","他会每间隔一个固定时间执行一次，如果你的任务执行时间你给的period,","他就是定义排序规则，在delayqueue里边，我们一般喜欢把快要过期的、甚至已经过期的老元素放到前面，其实你也可以用comparator接口，会更灵活","他是一个创建各种threadpoolexecutor的工具","他是一个工具类，就像arrays和collections,","他是用来执行任务的，他们的职责就是不断的从workqueue里边取任务，然后执行。当workqueue（需求池）里边拿不到任务，或者线程池达到特定状态，worker就会从workers里边移走（被裁）。","他的成员变量如下：","他的源码如下：","他的特点就是从队首队尾插入都行，从队首队尾出队都行","他的特点是","他的特点是：","他直接调run是要执行任务，线程的start只是把worker里边的那个run跑起来了","他相当于是一个数量有限的共享锁，没有达到限制就能获得锁，否则阻塞，而这个限制是在构造方法里面指定的。","他负责任务的执行,","他跟join比较类似，但是比join来的灵活，join用于让当前执行线程等待join线程执行结束。","代码比较多，关键处有注释。aqs就是这么用的，直接继承他，按你的需要去重写他的方法，定义自己的规则，什么样的情况下能获取，什么情况不能等等。","以一定的周期执行任务","以上就是executor框架的一个简版uml，生成此图时发现其中还有其他成员，直接参考《java并发编程艺术》移除了。","以上来自啃碎并发（二）：java线程的生命周期","以下这些是aqs相关的东西","以固定时间间隔执行的走这里","以固定频率执行的任务走这里","任务","任务0执行完了，欢迎关注大雄和你一起学编程","任务1执行完了，欢迎关注大雄和你一起学编程","任务2执行完了，欢迎关注大雄和你一起学编程","任务3执行完了，欢迎关注大雄和你一起学编程","任务4执行完了，欢迎关注大雄和你一起学编程","任务执行的间隔时间，正数表示用fix","任务执行结果","任务被拒绝了哦，欢迎关注微信公众号“大雄和你一起学编程”","优先级不同的任务可以使用优先级队列priorityblockingqueue来处理。它可以让优先级高的任务先执行。","优先级高的线程可以得到更多cpu资源,","优化用的","优点","会使该屏障之前的所有内存访问指令（存储和装载指令）完成之后，才执行该屏障之后的内存访问指令","会发现里边也和aqs同步队列类似，有一个队列结构，队列节点居然和之前说的同步队列的节点是一样的，世间真奇妙","会有一种醍醐灌顶的感觉","会被拷贝到子线程。","传递性：如果a","伪码","似曾相识的感觉，我们在第二章第5节实现的boundlist就是这么搞的","但是我们发现他是掉的aqs的newcondition方法","你会发现他是在init方法中赋值的，而init实在thread的构造方法中调用的","你可以把线程池看作是一个研发部门，研发部门有很多程序员（worker),","使用callabl","使用callable和futur","使用callable时最复杂的，但是也是最灵活的","使用cas的原子条件更新来实现线程之间的同步","使用cas算法：用自旋不用锁可以减少线程竞争切换，但是可能会更加耗cpu","使用cyclicbarrier步骤如下：","使用demo","使用executors可以创建三种threadpoolexecutor,分别如下：","使用get（longtimeout，timeunit","使用wait()、notify()和notifyall()时需要先对调用对象加锁。","使用分段锁技术提高并发访问效率。","使用协程：在一个线程里执行多个任务","使用场景","使用循环cas实现原子操作","使用最少的线程","使用比较简单，进方法加锁，执行完释放，后面会专门介绍锁。","使用示例","使用简易程度","使用线程池","使用线程池能够","使用缓存锁保证原子性","使用锁机制实现原子操作","使线程进入waiting（后面线程的生命周期讲）状态，只有等待另一个线程通知或者被中断才返回，需要注意的是，调用wait方法后需要释放对象的锁","例如将纸制银行流水通过人工的方式录入成电子银行流水，为了避免错误，采用ab岗两人进行录入，录入到excel之后，系统需要加载这两个excel，并对两个excel数据进行校对，看看是否录入一致。","例子","依赖数据库连接池的任务：线程数可以适当给多一些","保活时间10秒，工作队列长度位3的arrayblokingqueue,","保证了多线程环境下共享变量的“可见性”","假设1不加读锁的话，线程a执行到2这个位置，写锁已经释放了，读锁也没有，所可能恰好此时有别的线程（线程b）获取到了写锁，又修改了数据，此时线程a或的数据还是之前的，这就是他没有感知到线程b对数据的更新。","假设ab两个人从同一个账户里取钱，直接在draw这个方法加synchronized关键字，防止两个人同时进入draw","假设此刻另一个线程（记作线程t）获取了写锁并修改了数据，那么当前线程无法感知线程t的数据更新。如果当前线程获取读锁，即遵循锁降级的步骤，则线程t将会被阻塞，直到当前线程使用数据并释放读锁之后，线程t才能获取写锁进行数据更新。","假设队列已经有三个节点了，此时没有任何线程在操作队列。","偏向锁","偏向锁的撤销","偏向锁的撤销，需要等待全局安全点（在这个时间点上没有正在执行的字节码）。它会首先暂停拥有偏向锁的线程，然后检查持有偏向锁的线程是否活着，如果线程不处于活动状态，则将对象头设置成无锁状态；如果线程仍然活着，拥有偏向锁的栈会被执行，遍历偏向对象的锁记录，栈中的锁记录和对象头的mark","偏向锁相关jvm参数","做一些校验，线程池的状态要满足一定条件","做一些状态的校验","做了几个事，等待队列首节点出队，将这个首节点入队到同步队列，唤醒这个首节点的线程，唤醒之后就会去竞争锁（或者叫同步状态）了","先复制了一个newelements出来，然后改newelements,最后是把容器里维护的array指向newel","先看add","入队","入队和出队的过程","公众号二维码","公平与非公平","公平就是先尝试获取锁的线程会先得到多，非公平则是去竞争锁，默认是非公平的锁","公平性用reentrantlock实现的，公平也会降低并发效率。","公平的相比于非公平的会多判断一个","公平的锁多一次判断，导致性能损失，可以避免饥饿","公平锁和非公平锁释放时，最后都要写一个volatile变量state。","公平锁获取时，首先会去读volatile变量。","共享内存方式同步时显式的，需要手动指定方法或代码块在线程之间互斥","共享变量不会被频繁地写","共享和独占获取同步状态的区别其实是看你自己定义的规则是否允许几个线程同时获得同步状态","共享式同步状态的获取和释放","共享式超时同步状态获取","共享式释放同步状态；","共享式：指几个线程可以同时获得同步状态，独占式：指只能单独的线程获得同步状态","关于等待队列和同步队列","关于这些api的使用姿势感觉可以直接看aqs源码就好了，里边应该不少的。大雄不看了，用到再说，知道有这么个东西","关闭延迟：","关闭线程池","其他api","其他线程调用interrupt中断了当前线程","其他线程调用了该condition的sign","其实futuretask继承runnablefuture，而runnablefuture继承runnable和future，注意接口是可以多继承的","其实也就是tail就是最后一个节点","其实和独占差不多，不同的是可以同时有几个线程获得同步状态，而满足怎样的条件可以获取同步状态时通过重写tryacquireshared决定的。","具体步骤可以参考","内存屏障","内存屏障（memori","内存系统的重排序：由于处理器使用缓存和读/写缓冲区，这使得加载和存储操作看上去可能是在乱序执行","内存语义总结","内部是用object数组维护的","内部是链表维护","内部的entry结构","再来一个，复用了任务代码，继承thread就不行","再来看看threadlocal的get方法","再来看看threadlocal的set,","再看出队","再瞅瞅get","再返回队列","写final域的重排序规则","写final域的重排序规则对编译器和处理器增加了如下约束：在构造函数内对一个final引用的对象的成员域的写入，与随后在构造函数外把这个被构造对象的引用赋值给一个引用变量，这两个操作之间不能重排序","写到finally，保证释放锁","写命中","写操作，这是在多处理器中实现同步的关键","写缺失","写锁是一个支持重进入的排它锁。若写状态为0且读状态为0，直接获取写锁；若写状态大于0，看获取同步状态的线程是不是当前线程，是则写状态+1，否则，构建节点进入同步队列，自旋阻塞。","写锁的获取与释放","写锁的释放与reentrantlock的释放过程基本类似，每次释放写状态","决定两个task的time相同时谁排在前面，是用一个atomiclong搞出来的","准备开始跑了","减少上下文切换的方法：","出队","出队就head指针的改变，出队是首节点出队，而节点是获取同步状态的节点，而同步状态只有一个节点能获取到，所以出队是不用cas的","出队的很关键一点是，他需要唤醒他后边节点的线程，让他去拿同步状态","创建线程池的参数怎么给","创建线程池直接new","创建线程的三种方式","创建这个线程的那个线程，也就是父线程","初次读一个包含final域的对象的引用，与随后初次读这个final域，这两个操作之间不能重排序","删除了一些晦涩难懂，且大雄认为在开发中不是那么重要的内容","前置条件","前言","前面有一些方法声明了interruptedexception，","前面的“独占不可重入锁”演示了独占式获取同步锁，这个例子演示共享式","前面的例子中是拍脑袋给的参数，说要2个核心线程啥的，但是应该如何正确决策呢","前面讲的threadpoolexecutor其实是executor框架中的一员。从jdk","加worker是要加全局锁的","加上一个特定的正的超时时间调用如下方法会进入此状态","加入队列","加在静态方法上，锁为当前类的class","加锁","加锁不要放到try里边，因为如果在获取锁（自定义锁的实现）时发生了异常，异常抛出的同时，也会导致锁无故释放","加锁和解锁不需要额外的消耗，和执行非同步方法比仅存在纳秒级的差距。","包括future接口及其实现类futuretask，这个也是我们的老朋友了","包括runnable和callable，","即使是64位的long型和double型变量，只要它是volatile变量，对该变量的读/写就具有原子性。如果是多个volatile操作或类似于volatile++这种复合操作，这些操作整体上不具有原子","原子操作","原子操作的实现原理","原子类","原理","原理和copyonwritearraylist一样，区别就是写的时候会判断存不存在，存在直接返回false，不存在才会复制","原理是部分处理器缓存行是64字节宽，不支持部分填充缓存行。如果队头和队尾节点都不足64字节的话，他们会进到同一个缓存行，当一个处理器试图修改头节点时，会将整个缓存行锁定，那么在缓存一致性机制的作用下，会导致其他处理器不能访问自己高速缓存中的尾节。而首尾巴节点的访问时频繁的，放到同一个缓存行会频繁锁定，造成出队和入队效率低。因此可以采用追加字节的方式避免头节点和尾节点被放到同一个缓存行。","原理解析","去aqs里面搜locksupport，能出来一堆。locksupport定义了一组的公共静态方法，这些方法提供了最基本的线程阻塞和唤醒功能，而locksupport也成为构建同步组件的基础工具。","去看conditionobject，","参考了《疯狂java讲义》的提法，将如下内容归为控制线程。","参考资料","又看了下书，说为啥不是每次入队都直接更新tail呢，是为了减少cas操作，因为更新tail是要cas的，cas是耗cpu的。直接去cas更新也是没问题的。","及所有后续存储指令的存储。","及所有后续的存储指令刷新到内存","及所有后续装载指令的装载","及所有后续装载指令的装载。storeloadbarri","双向","发现conditionobject是aqs的内部类","发现他和threadlocal长得差不多，就是重写了三个方法，由此看来关键在inheritablethreadlocals是如何传递的","发现很简单，就是把父线程的东西到自己线程的inheritablethreadlocals里边","取消","取消任务","取消任务的情况","另一个是现在线程池的状态是啥","只有锁升级，没有锁降级","只要tryacquireshared返回值>=0,","可中断获取锁，在获取锁的过程中可以被中断，被中断后抛出异常返回","可以","可以充分利用多处理器核心","可以参看第05章的相关内容","可以发现execute方法就是完成了上边说的“线程池处理流程”这个图里描述的过程。","可以发现调用了signal","可以多个","可以实现元素的compareto方法指定排序规则，也可以在构造时传入comparator,","可以思考下为什么有人拿了读锁不能获取写锁","可以把aqs理解为管理状态的一个东西，然后你可以通过重写他的一些方法定义自己的规则","可以把线程放到组里，一起管理","可以看到和synchronized相比lock要灵活和强大，使用会稍微麻烦一点：","可以被重写的方法","可以通过重写他的一些方法制定自己的规则","可见conditionobject应该是实现了condition接口，去看一眼","可见他的排序是借助优先级队列做的","可见性的意思是当一个线程修改一个共享变量时，另外一个线程能读到这个修改的值","可重入","可重入原理","各种阻塞队列的特点与应用","同一进程中的多条线程将共享该进程中的全部系统资源，如虚拟地址空间，文件描述符和信号处理等等","同上","同步代码块","同步方法","同步是指程序中用于控制不同线程间操作发生相对顺序的机制","同步程序的顺序一致性效果","同步队列中的节点","同步队列为空，或者当前节点是头节点","同步队列（锁池）：假设线程a已经拥有了某个对象（注意:不是类）的锁，而其它的线程想要调用这个对象的某个synchronized方法(或者synchronized块)，由于这些线程在进入对象的synchronized方法之前必须先获得该对象的锁的拥有权，但是该对象的锁目前正被线程a拥有，所以这些线程就进入了该对象的同步队列（锁池）中，这些线程状态为blocked。","名字","后边的先传给你需要unparking，","后边的线程被阻塞(通过park)了，","向线程池提交任务","否则不加。","否则的话，也是加入同步队列里自旋，判断条件时tryacquireshared返回值>=0了，","含义","启动worker,","告知别人自己到达屏障了","呸呸呸，应该是时间，看秒的部分发现是符合预期的。","和transfer方法的区别是trytransfer方法无论消费者是否接收，方法立即返回，而transfer方法是必须等到消费者消费了才返回。","和wait类似，加入了超时时间，超时了还没被通知就直接返回","和入队差不多，出队了head指向的不一定是第一个节点","和普通队列一样，也是考虑tail","和独占式的区别就是，他的释放是需要保证原子性的，因为独占式释放的时候时天然的原子性，而共享式的可能有几个线程同时释放，所以就要通过自旋+cas保证原子性","唤醒所有等待在condition上的线程","唤醒生产者","唤醒等待中的一个或多个线程","唤醒等待在condition上的一个线程","唤醒等待的消费者","啃碎并发（二）：java线程的生命周期","回顾之前的线程的生命周期，我们有能力进block(阻塞)状态的。但是我们会发现他是需要synchronized的，所以不用synchronized想阻塞线程就没招了。我理解locksupport应该就是在这样的复杂背景下荣耀登场的吧。","因为0才是没被占用，所以我们期望0的时候可以获取，获取之后要改为非0","因为他的效率高，如果对实时性要求特别高，不允许读线程读到老数据，那就用reentrantreadwritelock","因为写状态是只有16位的","因为笔者也不是特别了解，所以只能提炼一下书中的内容，适当加入一些自己的理解。","因为自旋会消耗cpu，为了避免无用的自旋（比如获得锁的线程被阻塞住了），一旦锁升级成重量级锁，就不会再恢复到轻量级锁状态。当锁处于这个状态下，其他线程试图获取锁时，都会被阻塞住，当持有锁的线程释放锁之后会唤醒这些线程，被唤醒的线程就会进行新一轮的夺锁之争。","因为调用await是获取锁的","因此并不是线程越多越快，频繁的切换会损失性能","在githubjava","在idea怎么调试jdk源码","在jsr","在reentrantlock里边搜newcondit","在“大雄和你一起学编程”公众号留言","在一个线程中，初次读对象引用与初次读该对象包含的final域，jmm禁止处理器重排序这两个操作","在创建之前还会做一些校验。调用了worker里边线程的start后就要等待cpu调度执行worker的run方法了。","在单线程中，只要重排序两个操作的执行顺序，程序的执行结果就会被改变，称这两个操作具有数据依赖性。","在单线程程序中，对存在数据依赖的操作重排序，不会改变执行结果（这也是a","在多线程环境下，使用hashmap进行put操作会引起死循环，导致cpu利用率接近100%，所以在并发情况下不能使用hashmap","在对象引用为任意线程可见之前，对象的final域已经被正确初始化过了，而普通域不具有这个保障","在找到aqs的newcondition，发现这个是自己写的","在旧的内存模型中，volatile的写","在构造函数内对一个final域的写入，与随后把这个被构造对象的引用赋值给一个引用变量，这两个操作之间不能重排序","在第一次跑测试demo之前，一定先把文章中给出的可能出现的问题解决好了再跑，争取一次搞定，因为build一次非常慢非常耗费性能，另外，如果出现报错，一定及时杀死进程，因为有一个报错就跑不起来了","在第二章第5节已经说了conditon,","在要等待的地方调用countdownlatch.await()","在设置或者获取状态时需要做一些位运算","在读一个对象的final域之前，一定会先读包含这个final域的对象的引用。读到了引用，则这个final域一定被初始化了","在读多于写的情况下，读写锁能够提供比排它锁更好的并发性和吞吐量","在调用了object.wait重新进入同步块或者同步方法","在超时时间内获取到了锁，返回true2.","基于aqs实现一个独占不可重入锁，不可重入就是一个线程获取到了锁，然后他又来获取，这时会被阻塞","基于blockingqueue实现线程通信","基于condition的通信","基于copyonwrite的容器","基于双向链表实现的双向并发队列，可以分别对头尾进行操作，因此除了先进先出(fifo)，也可以先进后出（filo），当然先进后出的话应该叫它栈了。","基于此，通过参考这本书，结合网上的一些资料和自己的理解，写了此笔记。本笔记是《java并发编程艺术》的读书笔记，绝大部分内容来自这本书。希望帮助同学们快速掌握并发编程的门道，也希望借对此笔记的整理提高笔者自身对并发编程的理解、巩固相关的一些知识点。","基于等待通知模型的通信","基于线程组的操作","基于跳表的并发map","基于跳表的并发set","基于链表的并发队列，确实像书上说的那样，要是我去做的话估计一个synchronized完事，但是jdk里边是用cas做。","基本原理","增加worker数量失败就在来","声明共享变量为volatile。","处于该对象的等待池中的线程就会全部进入该对象的同步队列（锁池）中，准备争夺锁的拥有权。如果另外的一个线程调用了相同对象的notify()方法，那么","处理业务逻辑","处理器对原子操作的实现","处理器重排序","复杂","多个线程访问同一个资源可能会导致结果的不确定性，因此有时需要控制只有一个线程访问共享资源，此为线程同步。","多了trytransfer和transfer方法","多线程环境下如果i是共享的，这个操作就不是原子的。","大多数情况下，锁不仅不存在多线程竞争，而且总是由同一线程多次获得，为了让线程获得锁的代价更低而引入了偏向锁。","大家如果遇到，可以参考下变这篇文章排查","大雄不去具体研究状态的流转了，直接参考一些资料及上述翻译，搞一个前无古人、后有来者的线程生命周期图","大雄也懵了，遂在源码找到了如下一个枚举,","大雄只看了arrayblockingqueue,","大雄和你一起学编程","大雄和你一起学编程\");","大雄在搭建时还遇到了一个问题","大雄本身也在学习中，基础不是太好，各位同学如果发现有什么错漏的地方请不吝啬指出，有什么疑问的地方也欢迎交流。方式如下：","大雄看到这里还有几个疑问，一个是woker是如何创建并加入workers的，一个是worker是如何启动的，再就是worker是如何运行的","如果a","如果一个值原来是a，变成了b，又变成了a，那么使用cas进行检查时会发现它的值没有发生变化，但是实际上却变化了。","如果一个操作happen","如果你觉得此书有帮助到你，欢迎关注大雄的微信公众号","如果使用lock的话就要用condition了","如果入队的元素排在了第一个，就通知等待着的消费者","如果减到了0，表示释放成功了，否则没有释放成功","如果失败就阻塞","如果始终得不到锁竞争的线程使用自旋会消耗cpu。","如果当前有消费者正在等待接收元素（消费者使用take()方法或带时间限制的poll()方法时），transfer方法可以把生产者传入的元素立刻transfer（传输）给消费者。","如果当前状态值等于预期值，则以原子方式将同步状态设置为给定的更新值。此操作具有volatile读和写的内存语义。","如果当前节点变为了头节点，且拿到了同步状态","如果没有消费者在等待接收元素，transfer方法会将元素存放在队列的tail节点，并等到该元素被消费者消费了才返回","如果没有的话跳出去","如果没满，会招聘一个骨干程序员，招聘进来就让他不停的工作（很残酷啊），干完刚派过来的任务他会主动在需求池找下一个需求来做（好员工），如果需求池没有需求了，他就停止工作了，然后研发部会把他裁掉，如果裁掉后发现骨干程序员数量不够了，就会再招聘一个程序员。裁掉后，要是骨干程序员数量还够就不招聘了。","如果程序是正确同步的，程序的执行将具有顺序一致性（sequentiallyconsistent）——即程序的执行结果与该程序在顺序一致性内存模型中的执行结果相同。这对于程序员来说是一个极强的保证。","如果线程间存在锁竞争，会带来额外的锁撤销的消耗。","如果进行高速缓存行填充操作的内存位置任然是下次处理器访问的地址时，处理器从缓存中读取操作数，而不是从内存中读取。","如果骨干程序员数量满了，就看需求池满没满，如果需求池没满，就把需求扔进需求池里；如果需求池满了，就看程序员数量有没有达到上限，如果达到了，就对产品说，这个需求我们做不了，没资源；如果没达到，就招聘一个程序员，招聘进来就让他不停的工作，干完刚派过来的需求他会主动到需求池找下一个任务来做，如果需求池没有任务了，他就停止工作了，然后研发部会把他裁掉，如果裁掉后发现骨干程序员数量不够了，就会再招聘一个程序员。裁掉后，要是骨干程序员数量还够就不招聘了。","存数据的","它主要用来在给定的延迟之后运行任务，或者定期执行任务","它主要用来在给定的延迟之后运行任务，或者定期执行任务。","完成了几个任务","定义","定时任务调度：使用delayqueue保存当天将会执行的任务和执行时间，一旦从delayqueue中获取到任务就开始执行，比如timerqueue就是使用delayqueue实现的。","实在独占式的模式下","实时性不高，读线程可能会用老数据","实现runnabl","实现runnable接口","实现一个有界队列，当队列为空时阻塞消费线程，当队列满时阻塞生产线程","实现原理","实现方面非公平和公平的区别就tryacquire方法不一样","实现锁的时候直接调aqs的方法就好了","对一个volatile变量的读，总是能看到（任意线程）对这个volatile变量最后的写入。","对于一个拥有8级英语水品的6级没过的人来说，这段翻译太难了，但是翻译出来感觉很清晰了。","对于同步方法块，锁是synchonized括号里配置的对象。","对于数据库锁，加锁和解锁必须在一个数据库连接里，否则会出现解锁失败的情况","对于普通同步方法，锁是当前实例对象。","对于未同步或未正确同步的多线程程序，jmm只提供最小安全性：线程执行时读取到的值，要么是之前某个线程写入的值，要么是默认值","对于静态同步方法，锁是当前类的class对象。","对列元素要实现delayed接口，指定多久才能获取元素，只有到期的元素才能出队","对多个共享变量操作时，循环cas就无法保证操作的原子性，这个时候就可以用锁。","对读不加锁，可以提高读的效率，适用于读多写少的情况","对象.notify();","对象.wait()","对象头","将futuretask的实例作为thread构造参数","将会不满足条件了，所以await方法会返回","小于核心线程数就会再加个worker,","小结","尝试使用定时锁，使用lock.trylock（timeout）来替代使用内部锁机制","尝试非阻塞的获取锁，立即返回，拿到锁返回true，否则fals","就像跑步比赛一样，每个人都从各自的地方到达起跑线，到达后跟裁判说一声，当所有人到奇之后，裁判会发出信号，大家一起跑。","就是做了一个put相反的操作","就是成功获取到了同步状态了","就是支持重进入的锁，它表示该锁能够支持一个线程对资源的重复加锁。除此之外，该锁的还支持获取锁时的公平和非公平性选择。","就是有一个特定等待时间的线程","屏障类型","工作队列也是使用的linkedblockingqueu","工作队列使用synchronousqueue,","工作队列是使用的有界队列linkedblockingqueue，这个队列的界在inter.max_value,","工欲善其事，必先利其器。研究并发编程相关原理会经常看jdk源码，因此我们有必要在开发环境中安全的调试jdk源码。","带try的这种方法，就是拿的到就拿，拿不到就算了，会立即返回；这个就想学习一样，学的会就学，学不会就算了，当然这是错误的观点了。","带宽","带时间的阻塞有两种，一种是传一个相对时间，表示要阻塞多久；另一种是一个绝对时间，阻塞到啥时候","常见资源限制","并不是每次出队时都更新head节点，当head节点里有元素时，直接弹出head节点里的元素，而不会更新head节点。只有当head节点里没有元素时，出队操作才会更新head节点。这种做法也是通过hops变量来减少使用cas更新head节点的消耗，从而提高出队效率。","并发容器","并发容器之copyonwritearraylist","并发容器的代码大雄看的很少，只是简单的把书上的内容提炼一下，有疑问的地方找一些资料作为补充。","并发编程基础","并发编程存在两个关键性问题：","并发编程需要注意的问题","应对资源限制","应该是","废话不说，直接上代码","延迟执行","建议使用有界队列","当一个写线程访问时，所有其他线程阻塞","当一个线程访问同步块并获取锁时，会在对象头和栈帧中的锁记录里存储锁偏向的线程id，以后该线程在进入和退出同步块时不需要进行cas操作来加锁和解锁，只需简单地测试一下对象头的mark","当一个线程试图访问同步代码块时，它首先必须得到锁","当一个读线程访问时，其他读线程不会被阻塞","当产品给这个研发部提一个需求时（当然肯定不会只提一个，他们会不断的提需求。这里以提一个需求为例）","当前时间是否超出了deadline,","当前线程调用condition.await()方法，将会以当前线程构造节点，并将节点从尾部加入等待队列。","当前线程释放锁并进入等待状态","当前节点的线程的引用","当同步队列的首节点释放时就通知他的后继节点尝试获取同步状态，获取成功就把自己这只为首节点","当处理器将操作数写回到一个内存缓存的区域时，它首先会检查这个缓存的内存地址是否存在缓存行中，如果存在一个有效的缓存行，则处理器将这个操作数写回到缓存，而不是写回到内存，这个操作被称作写命中。","当处理器识别到从内存中读取操作是可缓存的。处理器读取整个高速缓存行到适当的缓存（l1","当对hashentry数组的数据进行修改时，必须首先获得与它对应的segment锁","当所有的任务都已关闭后，才表示线程池关闭成功，这时调用isterminaed方法会返回tru","当执行到monitorenter指令时会尝试获得对象对用的monitor的所有权，即获取锁","当时用condition做了一个有界队列。","当然这也不是绝对的（似乎说的矛盾了），一些细节的设计还是非常精妙值得学习的。还是这个位运算，为什么只用一个int表示线程池状态和worker的数量呢。","当然这里边可能会涉及记录哪些线程获取了读锁，我也没细看，感觉没什么难度。","当程序未正确同步时，就可能会存在数据竞争。","当阻塞队列不可用时（向满的队列插入，从空队列取数据），提供了四种处理方式","影响gc。写的时候拷贝一份，老的需要被gc掉。","待补充","很严谨","很关键，唤醒","很多人推荐方腾飞老师的《java并发编程艺术》，大雄（笔者名号）自感太菜，也花了一些时间去学习。发现其中有些知识点太难了，而对开发人员来讲并没有太大意义。一些内容也讲的不是特别好懂。","很容易想到，因为这个东西是跟着线程走的，所以应该是线程的一个属性，事实上也是这样，threadlocal和inheritablethreadlocal都是存储在thread里面的。","很显然，我们不能直接在你本地安装的jdk里边改源码，加注释。因此我们需要将jdk源码拷贝到项目中，配置项目运行的jdk为我们拷贝的jdk。这样就能愉快的加注释、打断点了。","很简单，不加锁，不cas啥的，直接读。","微信赞赏码","必须先释放读书","必须要获取锁","思路：使用四个状态，0","总之，个人觉得第一遍看是一定不能沉溺于细节的，他会让你迷惘和丧失信心；第二遍、第三遍可以关注一下细节，感受大师级的设计的美妙之处。当然笔者仅仅粗略看了一遍（逃~）","总线锁就是使用处理器提供的一个lock","总结一下","总结一下countdownlatch的用法：","总结下使用delayqueue的步骤","情况一：","感觉concurrenthashmap了解到这里已经够了，搞清楚他高效的原因就时用了分段锁","感觉应该是差不多的。如有错误，欢迎指出。","我一定是用aqs的共享式获取同步状态来做。","我们不是加了volatile吗，volatile就能保证内存可见性了，但是为什么要复制一份改变引用呢，请注意volatile并不能保证数组里元素变化的可见性，只能保证引用变化的可见性","我们会发现，一次入队后，tail并不一定是指向最后一个节点的，注释也说了，改变tail的cas失败了都是ok的，failur","我们发现，入队其实挺简单的，特殊的就是一个cas操作了。ca","我们同时启动了30个线程去打印，但是我们会发现一次只会有三个输出，三个之后，一会儿再输出。这就是semaphore带给我们的。","我们拿condition都是通过lock的newcondition接口拿的","我们自己的独占锁里边的tryacquir","我们规定，同步状态为0表示同步器没有被占用，非0表示被占用了","我写了一个很垃圾的例子，搞个定时任务,","我本来想着把我搞好的项目放到到github上边，但是看起来不现实，jdk代码太多了，add和commit时太费时间和性能了。","我没仔细看，这里大概的意思是会把这个节点从同步队列移除，并且释放锁","我没看源码，如果让我实现一个semaphore，","我特么才知道idea有个快捷键叫ctrl+f12","或signalal","所以,当前节点必须在他取消或者释放时unpark他后边的节点的线程","所以一定是原子的","所以核心是分析execut","所以，走到了【a】位置，暂停（假设线程1现在就卡在这里了），理一下此时的状态，p和t还有tail都是指向第三个节点的，第三个节点的next节点是指向新节点1号的","所属线程组","执行任务前调用一下beforeexecute，","执行具体的任务","执行完了结束的状态","执行完了调一下，里边可以拿到异常","执行时间不同的任务可以交给不同规模线程池处理","执行的futuretask的run，","抛出异常","拿两个condition,一个是非空，一个是不满","拿到线程组","指令示例","指令级并行的重排序：如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序","指内存区域如果被缓存在处理器的缓存行中，并且在lock操作期间被锁定，那么当它执行锁操作回写到内存时，处理器不在总线上声言lock","指定到某个时间还没被通知且没被中断直接返回，提前被通知了返回true，否则fals","指定期望多少人到达屏障在继续执行","按任务类型考虑","按优先级考虑","接下来就是看signal了，感觉能猜到他是怎么做的了","接着上边的例子","控制线程","提交任务主要有两种方式","提交任务有submit和execute,","提高响应速度","提高线程的可管理性","插入","搞一个类实现callable接口，重写call方法，在call执行任务","搞个可重入锁练手","支付宝收款码","支持","支持signal","支持优先级","支持公平与非公平","支持公平锁与非公平锁","支持大雄","支持延时获取元素","支持锁降级：遵循获取写锁、获取读锁再释放写锁的次序，写锁能够降级为读锁","改","改变条件","数据依赖性","数据依赖性仅针对单个处理器中执行的指令序列和单个线程中执行的操作，不同处理器之间和不同线程之间的数据依赖性不被编译器和处理器考虑","数据对其他处理器变得可见（指刷新到内存），之前于","数据对其他处理器可见（刷新到内存），之前于","数据库连接数","数据的装载，之前于","数据竞争与顺序一致性","数据装载，之前于","数组和链表实现的区别跟基础数据结构里边的数组和链表的区别一样，但是对队都是在首尾操作，感觉区别也不大","数组：","方式","方式1：excut","方式2：submit","方法","方法如下：","方法比较多，不要怕，通过下边的例子和之后对一些锁的实现原理分析就能理解了","无界","无界，不存储元素","无锁并发编程：例如把一堆数据分为几块，交给不同线程执行，避免用锁","既然是由返回值，那么任务就要用callable了","时间=\"","是一个以threadlocal对象为键、任意对象为值的存储结构。这个结构被附带在线程上，也就是说一个线程可以根据一个threadlocal对象查询到绑定在这个线程上的一个值。","是一组处理器命令，用于实现内存操作的顺序限制。","是否可以共享任务代码","是否可以再继承别的类","是否可以声明抛出异常","是否可以有返回值","是否是守护线程(daemon)","是在共享式的模式下","是操作系统能够进行运算调度的最小单位","是轻量级的进程，线程的创建和切换成本比进程低","普通对象：","普通看超没超过maximumpools","暂时不用condition,直接返回nul","更好的编程模型，例如可以使用生产者消费者模型进行解耦","更快的响应时间，可以将数据一致性要求不强的工作交给别的线程做","有四种方式创建","有多少活的线程","有界","有界，默认为integer.max_valu","有线程获取了锁，这个线程是自己","期望快速掌握并发编程核心内容的同学","期望更加深入了解并发编程的同学建议还是看看原书,","未同步程序的执行特性","本图源文件可以在github","本文转自xxx，欢迎关注微信公众号“大雄和你一些学编程”,共同学习探讨。","本来想着写一个情况二、三、四把所有分支走完，但是感觉没必要了，感觉类似这样梳理就能清楚了，就是两个线程并发执行的一个重现，想不明白就可以画图，还是挺有趣的，要写出这样的代码感觉不太难，但是细节需要抠的很仔细。","本章就是介绍一些多线程编程的基础知识，比如什么是线程，为什么要用多线程，如何创建线程，如何启动，如何同步，如何通信，线程的生命周期是怎样的等等，期望能够快速的把多线程跑起来。","术语","构建一个节点","构建了一个node放到等待队列的队尾","构造方法有几个重载，这个事参数最全的，如下分别介绍这些参数","查看","标识","标识没有cancel","标识线程取消，可能是因为超时或者被中断了，这是个终态，不会再block了","标识线程在condition等待，等待在condition队列，直到被转移到sync","标识这个任务是在哪个线程运行","校对工作","核心api","核心看超没超过corepoolsize,","核心线程数和最大线程数是相等的","核心线程数和最大线程数都是1","核心线程的数量，当提交一个任务到线程池时，当线程数量小于corepoolsize时，进来新任务都会创建新的线程。如果调用了线程池的prestartallcorethreads()方法，线程池会提前创建并启动所有核心线程，而不是等到任务进来","根据不同的资源限制调整程序的并发度，找到瓶颈，把瓶颈资源搞多一些，或者根据这个瓶颈调整线程数","根据锁降级还是比较难理解的，为啥要有这个东西，书上原文","模型","模拟生产数据","欢迎关注微信公众号","欢迎关注微信公众号'大雄和你一起学编程'fri","正在做面试准备，期望快速复习的同学","死锁","死锁就是线程之间因争夺资源处理不当出现的相互等待现象","每一个put操作必须等待一个take操作，否则不能继续添加元素，每一个take也必须等待一个put，因为没有元素","每一个线程执行完都调用countdownlatch.countdown()使得countdownlatch减一","每一章增加了总结思维导图，帮助回顾和记忆","每个segment守护着一个hashentry数组里的元素","比如cpu","比核心线程数多的话，执行完的worker直接移除就好","比较交换","没什么可写的了，列个标题，猜也能猜到怎么做的了","没有元素的话，等待","没有加超时参数","没有太大区别，就是他加入同步对队列后会算一个deadline,deatline=当前时间+你允许的超时时间，然后自旋的时候会每次都检查","没有核心线程，可以无限的创建线程","没被占用尝试释放，直接抛异常，也就是必须式获取了同步状态的线程才能释放他","注意&&是短路的，写的真骚气","注意一下p、t、q、newnode这些不是线程共享的，只有tail还有队列里的那些东西才是共享的","浪费内存。因为每次写都会拷贝一份","消息传递方式同步时隐式的，天然同步，消息的发送必须在消息的接收之前","混合型的任务：如果可以拆分，将其拆分成一个cpu密集型任务和一个io密集型任务，只要这两个任务执行的时间相差不是太大，那么分解后执行的吞吐量将高于串行执行的吞吐量","添加了一些感觉不太容易理解内容的个人理解","源码","源码不多，直接贴出来","源码解析","满了就放到notfull的等待队列","满了就等待","满了继续插入会抛出：illegalstateexcept","满了继续插入会返回fals","满了继续插入会阻塞，直到有空位或被中断","然后你会发现我们的compareto用了一个sequencernumber，这个呢是个原子自增的，用于处理两个过期时间一样的任务如何排序的问题，我的规则是谁先创建谁排前面","然后尝试原子acquire,","然后就是put和get时都需要先拿到segment,所以涉及如何定位segment的问题，按书上说的是对key做再散列。","然后是释放同步状态","然后里边节点有自己的状态，然后有共享还是独占的标识，有自己的状态。","版权声明","特别说明：第8章和第9章完全是从书上抄过来的。这些不太熟悉，所以将一些自己觉得很中要的东西抄下来了，背一背，哈哈。","特性","状态>0就表示同步器被占用了","状态是0表示没有被获取，进行cas并在cas成功时返回tru","独占式同步状态的获取与释放","独占式获取同步状态，在此方法中需要查询当前状态并判断是否符合预期，然后cas设置同步状态","独占式获取同步状态，获取成功则返回，否则进入同步队列等待，会调用重写的tryacquire(int","独占式超时同步状态获取","独占式释放同步状态，","理解volatile特性的一个好方法是把对volatile变量的单个读/写，看成是使用同一个锁对这些单个读/写操作做了同步","生产数据的线程","生产队列元素和消费队列元素，这和使用一个普通队列几乎没两样了","生活还要继续","用futuretask包装实现callable接口类的实例","用lamba也可以","用于下一次加入队列","用于保存等待执行的任务的阻塞队列。可以选择以下几个阻塞队列。arrayblockingqueue，linkedblockingqueue，synchronousqueue，priorityblockingqueu","由于volatile仅仅保证对单个volatile变量的读/写具有原子性，而锁的互斥执行的特性可以确保对整个临界区代码的执行具有原子性。在功能上，锁比volatile更强大；在可伸缩性和执行性能上，volatile更有优势","由于我们时独占锁，所以重写独占式同步状态获取和释放，以及同步器是否被占用的判断规则","的吞吐量高于linkedblockingqueue和arrayblockingqueu","监视器锁规则：对一个锁的解锁，happen","目前还不是特别明朗，继续看","直接从workers里边移除worker,","直接在thread里面搜inheritablethreadloc","直接搬书上的一个例子","直接用你提供的线程工厂搞个线程出来","相关api","相当于获取锁","相当于要等到state==0的时候才能获取到锁。","相比《java并发编程艺术》，本书有如下不同点：","看一下这个构造","看他的入队","看你是要创建核心worker还是普通work","看来现在得看看threadlocal.createinheritedmap这个方法了","看源码一定不要过分纠结细节，就像这个线程池，我看网上很多文章去算那几个位运算的十进制数，感觉是在浪费时间，没有抓住重点。","看现在有几个工作线程","看看put","看看take","睡觉方法，使得线程暂停一段时间，进入阻塞状态。","硬件资源限制","确保","确定排序规则，谁先到期谁排前面，同时到期的，看谁先创建，先创建的排在前面","碎碎念","磁盘读写速度","示例","禁用：","移除","移除后如果worker数量比核心线程数还少，就再加个worker,","移除掉worker（裁员）","程序的执行需要资源，比如数据库连接、带宽，可能会由于资源的限制，多个线程并不是并发，而是串行，不仅无优势，反而带来不必要的上下文切换损耗","程序顺序规则","程序顺序规则：一个线程中的每个操作，happen","空了就等","空了继续出队会抛出：nosuchelementexcept","空了继续出队会返回null","空了继续出队会阻塞，直到有元素或被中断","突然想到一个面试题，读写锁中读锁之多可以被多少个线程获取？写锁呢？这个是我自己想到的题。感觉能比较好的考察对读写锁原理的理解。","竞争的线程不会阻塞，提高了程序的响应速度。","章小结","笔者是科班出身，所以这一章，还有内存模型真的是看的头疼，本来打算放弃了，又了解了一下，这两章的东西是面试必考的，必须要搞啊。","第01章","第02章","第03章","第04章","第05章","第06章","第08章","第09章","第一个参标识","第三个，原来的状态与expect相等，则修改为update状态，否则返回fals","第二个是个偏移量，第三个是你期望他是什么值才改，第四个是你想改成什么","等价上面那个","等待/通知的相关方法是任意java对象都具备的，因为这些方法被定义在所有对象的超类java.lang.object上。","等待状态中不响应中断","等待者","等待获取同步状态的线程有机会拿到同步状态","等待通知模型的示例","等待队列","等待队列个数","等待队列（等待池）：假设一个线程a调用了某个对象的wait()方法，线程a就会释放该对象的锁（因为wait()方法必须出现在synchronized中，这样自然在执行wait()方法之前线程a就已经拥有了该对象的锁），同时","简单","简单理解，await就是根据当前线程信息构建node节点，加入等待队列，同时由于调用await的一定是获取锁的，所以我们要移除当前线程在同步队列的那个节点，其实就是首节点，首节点要变，首节点的线程就要释放锁，其实就是当前线程会释放锁。","级别是1","纳秒级，不常用","线程1继续执行，p!=t?发现是相等的，都是指向第三个节点，不进入if，返回true，入队成功，此时tail是指向第三个节点，也就是倒数第二个节点，而不是最后一个节点。","线程1，尝试入队新节点（新节点1号），q是tail的next，肯定==nul,","线程2继续执行，再次进到for循环，q=p.next,","线程a写一个volatile变量，实质上是线程a向接下来将要读这个volatile变量的某个线程发出了（其对共享变量所做修改的）消息","线程a写一个volatile变量，随后线程b读这个volatile变量，这个过程实质上是线程a通过主内存向线程b发送消息","线程a就进入到了该对象的等待队列（等待池）中，此时线程a状态为waiting。如果另外的一个线程调用了相同对象的notifyall()方法，那么","线程b读一个volatile变量，实质上是线程b接收了之前某个线程发出的（在写这个volatile变量之前对共享变量所做修改的）消息","线程与主内存之间的抽象关系：","线程之间协调工作的方式","线程之间的共享变量存储在主内存（main","线程之间的通信方式有两种：","线程优先级(priority)","线程保活时间单位","线程保活时间是0，就是说执行完，线程会被立即销毁","线程保活时间是0，就是说执行完，线程会被立即销毁，重新创建","线程同步","线程在执行同步块之前，jvm会先在当前线程的栈桢中创建用于存储锁记录的空间，并将对象头中的mark","线程工厂里给线程起了一个好听的名字","线程池与executor框架","线程池会返回一个future类型的对象，通过这个future对象可以判断任务是否执行成功，并且可以通过future的get()方法来获取返回值，get()方法会阻塞当前线程直到任务完成","线程池原理","线程池处理流程","线程池的创建","线程池的工作线程空闲后，保持存活的时间。所以，如果任务很多，并且每个任务执行的时间比较短，可以调大时间，提高线程的利用率。","线程的一些属性","线程的保活时间时60秒，意味着60秒没任务就会被销毁","线程的定义","线程的定义与意义","线程的定义和意义","线程的生命周期","线程竞争不使用自旋，不会消耗cpu。","线程间的通信","线程阻塞，响应时间缓慢。","结构","给以给线程取一个响亮的名字，便于排查问题，默认为thread","继承thread","继承thread是最容易的，但是也是最不灵活的","继承thread类","继承了threadlocal,","缓冲行","缓存命中","缓存系统的设计：可以用delayqueue保存缓存元素的有效期，使用一个线程循环查询delayqueue，一旦能从delayqueue中获取元素时，表示缓存有效期到了。","缓存行填充","缓存行非64字节宽的处理器","编译器不会对volatile读与volatile读后面的任意内存操作重排序；编译器不会对volatile写与volatile写前面的任意内存操作重排序。组合这两个条件，意味着为了同时实现volatile读和volatile写的内存语义，编译器不能对cas与cas前面和后面的任意内存操作重排序","编译器会在final域的写之后，构造函数return之前，插入一个storestore屏障。这个屏障禁止处理器把final域的写重排序到构造函数之外","编译器重排序：在不改变单线程程序语义的情况下，重新安排指令执行顺序","缺点","而且得提交任务过来，再就是workqueue不能是空的","而前面说了p已经指向了新节点1号，新节点1号的next是null,所以q==null,进入【第一个大if】，然后cas设置p的next为新节点2号，也就是新节点1号.next=新节点2号，然后p!=t?发现p是指向新节点1号的，t还是执行3号节点的，所以if成立，cas将tail指向新节点2号，返回true。","而在jmm中，临界区内的代码可以重排序。","而是自己封装了一个delayedworkqueue，这两者的区别笔者没有细看，一直从任务队列取到期的任务执行，同时把执行的任务再放回delayqueue。","自旋cas如果长时间不成功，会给cpu带来非常大的执行开销。","英文","获取","获取写锁","获取同步状态","获取同步状态失败时会构建一个节点放到同步队列，然后自旋获取同步状态，","获取同步队列里的线程","获取名字","获取和修改aqs状态的几个方法","获取失败的话会进入同步队列阻塞","获取所具有的内存语义。为了提供一种比锁更轻量级的线程之间通信的机制，jsr","获取有相同的内存效果：volatile写和锁的释放有相同的内存语义；volatile读与锁的获取有相同的内存语义。","获取的时候如果state==0，那么正常获取，同时记录拥有同步状态的是当前线程，cas更新状态为1；如果state!=0,就要看拥有同步状态的线程是不是和当前线程一样，一样的话，获取成功，同时cas对state+1，不一样则进入同步队列里边自旋阻塞","获取的话，前面api里变有，是","获取等待通知组件，只有拿到了锁，才能拿到这个对象，调用wait()方法，调用后释放锁","获取读锁","获取锁。调用方法会获取锁，直到锁获取后返回","获得对象的锁","补充","补充实现原理","表示剩余可以获得锁的线程数，0表示没有了，不能获取了，需要阻塞","表示可运行（大家的翻译应该是就绪）的线程","表示在jvm正在运行，但是他可能需要等操作系统分配资源","表示正在等待监视器锁以便重新进进入同步块或者同步方法","表示没有开始的线程","表示线程在等待监视器锁","被中断了，抛出异常返回3.","被中断的线程可以自已处理中断，也可以不处理或者抛出去。","要多多联想，还是这个位运算，他是不是和读写锁用一个int既表示写状态又表示读状态十分相似。worker继承aqs，是否能让你想起aqs的种种。","要改那个对象，","要是早点发现这篇文章的话，大雄也不用费劲在《java并发编程艺术》和《疯狂java讲义》以及各种博客找资料了。","要求：实现一把锁，至多三个（书上是两个，咱们变化下，哈哈）线程可以获得","要用notifi","解决办法","计算还有多久到执行时间点，这个delayed接口的getdelay方法一样","让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续运行。","让他等到countdownlatch减到0时继续执行","让他继续等待接收任务（招人）","让当前线程进入等待状态直到被通知或者被中断，当前线程重新进入运行状态且从await方法返回的情况如下","记录开始时间","记录耗时","设置","设置下一次要什么时候执行","设置名字","设置当前线程占用了这个访问的权限","设置线程最高优先级是多少","设置线程组","证明写的没问题","说实话，我已经忘了跳表了，回头复习下补充。todo:","说明","读final域的重排序规则","读final域的重排序规则可以确保：","读与锁的释放","读内存中的公共状态进行隐式通信","读写状态的设计","读写锁在同一时刻允许多个线程访问","读写锁有两个锁，而且他们是有关系的，显然是用一个aqs，但是一个aqs只有一个state。","读写锁维护了一对锁，一个读锁和一个写锁，通过分离读锁和写锁，使得并发性相比一般的排他锁有了很大提升。","读建立的happen","读没有锁的释放","读的内存语义","读的效率copyonwrite会更高。因为reentrantreadwritelock只要有一个线程获得写锁，所有线程都无法获得读锁，也就是读会被阻塞，但是copyonwrite不一样，不管有没有线程在写，他都能读","读锁是一个支持重进入的共享锁，它能够被多个线程同时获取，写状态位0时总能获取，写状态不为0，不会获取，获取成功读状态就+1。","读锁的获取与释放","谁适合读","调整了一些内容的排序，以便于更加容易理解","调用futuretask实例的get拿到返回值，调这一句会阻塞父线程","调用futuretask的get能拿到返回的值","调用join()","调用locksupport.park()","调用threadpoolexecutor里边的runworker方法","调用wait()方法后，线程状态由running变为waiting，并将当前线程放置到对象的等待队列，释放锁。","调用了join的在等待指定线程结束","调用了wait的在等待其他线程调用notify或者notifyal","调用任意一个isshutdown方法就会返回tru","调用关闭线程池方法后","调用如下方法之一会进入wait","调用方式","负数表示用fix","资源限制","超出了就直接返回fals","超时时间到，返回fals","超时的获取锁返回的情况1.","超时获取，就是会根据你给的超时时间算一个deadline,每次自旋都检查是否超出了deadline，超出了直接获取失败，返回fals","超时退出","超简单，我们的map不要threadlocals了，改为inheritablethreadloc","超级简单,不多说","超级简单~","跟我们使用aqs一样，也是继承他然后定义一些自己的规则","转载请在醒目位置注明如下信息:","软件资源限制","轻量级解锁时，会使用原子的cas操作将displac","轻量级锁","输出：","运行的结果如下","返回false，","返回false，tryacquire才可能返回true，保证了先来后到","返回n","返回特殊值","还是上面那个mythreadbyrunnable类","还是先说两嘴，这个生命周期的图我找到了不少版本，不仅图的形式不一样，里边的内容也有些出入","还有一个坑，大家注意，搞好了就不要随便修改maven依赖了，因为修改后整个又要重新编译，非常慢","还有两个是可以指定线程工厂","还有更狠的，sync","还有这个","这一段对节点的定义代码少，注释贼多，看了一下，惊奇的发现，《java并发编程艺术》里边的跟里边的注释差不多","这一段就是从书上借鉴（抄书不叫抄，叫借鉴）过来的，来个demo可能会更加清楚一些","这两个线程一定是一个线程执行完了另一个执行","这两方法，直接aqs源代码找就可以了","这两者的区别大家可以体会下","这个c里边有两个信息，一个是现在有多少worker,","这个parent就是","这个q是他内部维护的一个优先级队列，privat","这个state式实现锁内存语义的关键","这个while是必要的","这个也很有趣，一般init在初始化完成，但是他是在你取的时候去调","这个也很简单，他会调你重写的initialvalue方法，拿到一个值，set进去并且返回给你","这个也比较容易，就是不断的从workqueue取任务，执行，直到没任务了跳出来。接下来就是worker如何被销毁的问题了","这个例子里边，核心线程数2，最大线程数2，","这个初看了下，没太明白，后续再看看吧","这个可以思考下","这个图八成、没准、大概是没有太大问题的。此图中，原谅色是线程状态，紫色是引起状态变化的原因。","这个定时任务的核心就是使用delayqueue，但是他不是使用的concurrent包的那个delayqueue,","这个就是之前讲的出队的操作，他会唤醒当前节点的下一个不是cancel状态的节点","这个就是传说中的cas操作了","这个就是拿到的存在thread的threadlocals这个变量","这个我没看，感觉就是不必concurrentlinkedqueue多了两种情况，从队头入队，从队尾出队。有空再看看补充下","这个方法在threadlocal是直接抛出一个异常unsupportedoperationexcept","这个是书上列出来的，为了保持完成性，也简单列一下：","这个是公平性的保证，他记录了谁获取到同步状态","这个没有用原子类","这个测试例子，发现0","这个玩意儿是comparable接口里面的，因为delayed继承了compar","这个用了原子类","这个表示，如果返回的值","这个跟我们平时理解的runnable还不一样，可以体会下，他这个run就是一个普通的方法","这个问题多半是编译器和jdk版本不匹配导致的","这和priorityqueue是一样一样的","这意味着，提交一个任务必须要等这个任务被消费（可能创建新线程消费，也可能是被老线程消费），下一个任务才进去执行；线程从队列获取任务时，一定要阻塞到有任务提交进去。","这意味者他们可以被中断，中断后把异常抛给调用方，让调用方自己处理.","这意味这他通常不会因为任务数量过多拒绝任务","这是一个不存储元素的队列，","这是个循环数组","这是最复杂的一种方式，他可以有返回值，归纳一下步骤：","这样就可以达到一个校对的目的","这样就能保证写的过程中其他线程可以继续读旧的容器里的数据，他们不会变，写完之后再有线程读就可以读到最新的了。","这样正确的终止线程","这样的一个结构是我们访问时只用锁住一部分而不用锁住整个hashmap了","这段代码会在启动后3秒开始输出，然后每隔10+1秒输出一次","这段代码会在启动后3秒开始输出，然后每隔10秒输出一次","这段代码感觉很难理解，我是画图来理解的，关键是要明白到底是两个线程怎样的运行次序才会出现代码中的if，我在代码中标注了几个位置，试图用文字来阐述我的理解","这段代码解决了","这没啥好说的","这种threadlocal可以从父线程传到子线程，也就是子线程能访问父线程中的inheritablethreadloc","这篇文章写了非常详细的步骤，还有每一步的截图以及对一些错误的解决方法。","这篇文章写的非常好，建议看一下。","这里也是用了condit","这里先直接这么尝试一把，不行再enq","这里列个标题，后边说到了blockingqueue就明白怎么做了。","这里就是你加的节点一自旋获取同步状态","这里就是毫无难度的事情了","这里应该是一个加速吧，本来直接调enq就可以了，但是enq里边有自旋","这里我只想把这篇文章里一个图改一下贴到这里，细节部分大家可以参考上述这篇文章。","这里我找了很久首节点引用在哪修改的，但是没找到，奇怪（在后边找到了，一个节点进入到同步队列后就会开始自旋获取同步状态，获取到了就会改head引用的执行，指向自己）","这里最重要的点就是【欢迎关注微信公众号“大雄和你一起学编程”】，","这里有一些线程的状态，可以看完后边的线程的生命周期再回过头看看","这里用一个比喻来描述一下线程池，中间有一些名词你可能不是太清楚，后边源码解析的部分会讲到。","这里的同步是指广义上的同步，包括对常用同步原语（synchronized、volatile和final）的正确使用。","这里说的共享任务代码举个例子：","这里贴一下网上的一些描述","进入等待状态到将来的某个时间","追加字节能优化性能","追求吞吐量。同步块执行速度较长。","追求响应时间。同步块执行速度非常快。","适用于只有一个线程访问同步块场景。","适用场景","通信是指线程之间以何种机制来交换信息","通知一个对象上等待的线程，使其从wait方法返回，而返回的前提是该线程获取到了对象的锁","通知对象上所有等待的线程，使其从wait方法返回","通知等待的消费者，有元素可以消费了","通知者","通过总线锁保证原子性","遍历线程池中的工作线程，然后逐个调用线程的interrupt方法来中断线程，所以无法响应中断的任务可能永远无法终止","遗传算法","避免一个线程同时获取多个锁","避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源","避免死锁的方法：","那么任务执行完就开始下一次","那么同步状态就获取成功了。","那么将当前节点设置为头","配合以volatile的读/写和cas所具有的volatile读和写的内存语义来实现线程之间的通信","释放","释放的时候呢就是读状态","释放锁","释放锁进入超时等待状态","释放：释放的时候state","里面是用一个runnablescheduledfuture来存放任务的，","里面有一些注释，翻译了一下。","重写run方法执行任务","重写了三个方法","重排序","重排序对多线程的影响","重排序是指编译器和处理器为了优化程序性能而对指令序列进行重新排序的一种手段。","重排序的分类","重量级锁","链表","锁","锁一般式基于aqs实现的，aqs维护了一个volatile的state，","锁一般都是实现lock接口，所以了解lock接口的api，基本就会用锁了。","锁内存语义的实现","锁升级","锁对比","锁是实现线程同步，用来控制多个线程访问共享资源的方式。一般来说，一个锁能够防止多个线程同时访问共享资源（但是有些锁可以允许多个线程并发的访问共享资源，比如读写锁）。本章将介绍如何使用锁，锁的实现原理。","锁机制保证了只有获得锁的线程才能够操作锁定的内存区域。","锁的基本使用","锁级别低到高：无锁状态","锁降级","锁降级是指把持住（当前拥有的）写锁，再获取到读锁，随后释放（先前拥有的）写锁的过程。","队列","队列同步器abstractqueuedsynchronizer（aqs)是实现各种锁的关键，因此要了解锁的原理或者自己实现锁必须先了解aqs。","队列（条件队列或者等待队列）等待的节点","阻塞的姿势比较多，唤醒只有一种姿势。","阻塞队列","阻塞队列实现原理","阻塞队列就是当队列满了仍然尝试去入队会被阻塞，当队列为空时尝试去出队取元素也会被阻塞的队列。","阻塞队列常用于生产者消费者模型，生产者往队列丢数据，消费者从里面取数据。","阻塞队列的通用操作","阻塞队列都是实现blockingqueue接口的，因此他们方法都是一样的","阻止中断，知道runworker执行","降低资源消耗","除了偏向锁，jvm实现锁的方式都用了循环cas，即当一个线程想进入同步块的时候使用循环cas的方式来获取锁，当它退出同步块的时候使用循环cas释放锁。","集群化，增加资源","非公平的性能会更高，但是可能会产生饥饿","非公平锁获取时，首先会用cas更新volatile变量，这个操作同时具有volatile读和volatile写的内存语义。","非守护线程创建的线程默认为非守护线程，守护则默认为守护","非常适合传递性场景","项目","顺序一致性","顺序一致性内存模型","顺序一致性内存模型是一个理论参考模型，在设计的时候，处理器的内存模型和编程语言的内存模型都会以顺序一致性内存模型作为参照。","顺序一致性模型中，所有操作完全按程序的顺序串行执行。","首先他是双向队列的节点，所以prev,next,","首先会看骨干程序员招聘满了没。","首先加锁，如果不加锁，可能几个线程提交的任务同时进来了，会导致一些共享状态出问题","首先将数据分成一段一段地存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据的时候，其他段的数据也能被其他线程访问。","首先就是要定义你的队列元素，这个类需要实现delayed接口，需要实现里边的两个方法","首先是worker（程序员）","首先能够把多线程程序跑起来，感觉会有一些成就感，增加一些信心吧。","默认是空的","默认最大长度是integer.max_value，可以在构造里面指定","默认非公平，可以在构造指定","（\"queue","（1）aba问题","（2）循环时间长开销大","（3）只能保证一个共享变量的原子操作","（不管程序是否同步）所有线程都只能看到一个单一的操作执行顺序。在顺序一致性内存模型中，每个操作都必须原子执行且立刻对所有线程可见","，l2","，l3的或所有）"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"前言","keywords":"","body":"前言\n很多人推荐方腾飞老师的《Java并发编程艺术》，大雄（笔者名号）自感太菜，也花了一些时间去学习。发现其中有些知识点太难了，而对开发人员来讲并没有太大意义。一些内容也讲的不是特别好懂。\n基于此，通过参考这本书，结合网上的一些资料和自己的理解，写了此笔记。本笔记是《Java并发编程艺术》的读书笔记，绝大部分内容来自这本书。希望帮助同学们快速掌握并发编程的门道，也希望借对此笔记的整理提高笔者自身对并发编程的理解、巩固相关的一些知识点。\n特别说明：第8章和第9章完全是从书上抄过来的。这些不太熟悉，所以将一些自己觉得很中要的东西抄下来了，背一背，哈哈。\n不同点是什么\n相比《Java并发编程艺术》，本书有如下不同点：\n\n删除了一些晦涩难懂，且大雄认为在开发中不是那么重要的内容\n调整了一些内容的排序，以便于更加容易理解\n添加了一些感觉不太容易理解内容的个人理解\n每一章增加了总结思维导图，帮助回顾和记忆\n一些API的使用直接在demo说明，不单独说明\n\n谁适合读\n\n期望快速掌握并发编程核心内容的同学\n正在做面试准备，期望快速复习的同学\n不特别追求底层细节的同学\n\n期望更加深入了解并发编程的同学建议还是看看原书, 会有一种醍醐灌顶的感觉\n支持大雄\n如果你觉得此书有帮助到你，欢迎关注大雄的微信公众号 “大雄和你一起学编程”或者打赏或者github点个star。\n三种方式，总有一款适合你，三种都搞大雄要送你哆啦A梦。\n\n公众号二维码\n\n\n\n微信赞赏码\n\n\n\n支付宝收款码\n\n\n\ngit地址\n\njava-concurrent-programming-art-mini\n说明\n大雄本身也在学习中，基础不是太好，各位同学如果发现有什么错漏的地方请不吝啬指出，有什么疑问的地方也欢迎交流。方式如下：\n\n在“大雄和你一起学编程”公众号留言\n在githubjava-concurrent-programming-art-mini上边提issue\n\n版权声明\n转载请在醒目位置注明如下信息:\n本文转自xxx，欢迎关注微信公众号“大雄和你一些学编程”,共同学习探讨。\nxxx表示所转载文章的链接\n"},"第01章-在idea怎么调试jdk源码/":{"url":"第01章-在idea怎么调试jdk源码/","title":"第01章-在idea怎么调试jdk源码","keywords":"","body":"第01章-在idea怎么调试jdk源码\n工欲善其事，必先利其器。研究并发编程相关原理会经常看jdk源码，因此我们有必要在开发环境中安全的调试jdk源码。\n很显然，我们不能直接在你本地安装的jdk里边改源码，加注释。因此我们需要将jdk源码拷贝到项目中，配置项目运行的jdk为我们拷贝的jdk。这样就能愉快的加注释、打断点了。\n具体步骤可以参考\nidea查看jdk源码并在源码中写注释\n这篇文章写了非常详细的步骤，还有每一步的截图以及对一些错误的解决方法。\n从openjdk找的那两个类，直接拷贝下来在你的maven工程里边手动创建就可以了，可以直接在github下载,免得找\n在第一次跑测试demo之前，一定先把文章中给出的可能出现的问题解决好了再跑，争取一次搞定，因为build一次非常慢非常耗费性能，另外，如果出现报错，一定及时杀死进程，因为有一个报错就跑不起来了\n还有一个坑，大家注意，搞好了就不要随便修改maven依赖了，因为修改后整个又要重新编译，非常慢\n大雄在搭建时还遇到了一个问题\n\nError:java: Compilation failed: internal java compiler error\n\n这个问题多半是编译器和jdk版本不匹配导致的\n大家如果遇到，可以参考下变这篇文章排查\nError:java: Compilation failed: internal java compiler error 解决办法\n我本来想着把我搞好的项目放到到github上边，但是看起来不现实，jdk代码太多了，add和commit时太费时间和性能了。\n"},"第02章-并发编程基础/":{"url":"第02章-并发编程基础/","title":"第02章-并发编程基础","keywords":"","body":"第02章-并发编程基础\n首先能够把多线程程序跑起来，感觉会有一些成就感，增加一些信心吧。\n本章就是介绍一些多线程编程的基础知识，比如什么是线程，为什么要用多线程，如何创建线程，如何启动，如何同步，如何通信，线程的生命周期是怎样的等等，期望能够快速的把多线程跑起来。\n"},"第02章-并发编程基础/01-线程的定义和意义.html":{"url":"第02章-并发编程基础/01-线程的定义和意义.html","title":"01-线程的定义和意义","keywords":"","body":"线程的定义与意义\n线程的定义\n\n是轻量级的进程，线程的创建和切换成本比进程低\n同一进程中的多条线程将共享该进程中的全部系统资源，如虚拟地址空间，文件描述符和信号处理等等\n是操作系统能够进行运算调度的最小单位\njava程序至少有一个线程main，main线程由JVM创建\n\n为什么要有多线程\n\n可以充分利用多处理器核心\n更快的响应时间，可以将数据一致性要求不强的工作交给别的线程做\n更好的编程模型，例如可以使用生产者消费者模型进行解耦\n\n并发编程需要注意的问题\n上下文切换\ncpu通过时间分片来执行任务，多个线程在cpu上争抢时间片执行，线程切换需要保存一些状态，再次切换回去需要恢复状态，此为上下文切换成本。\n因此并不是线程越多越快，频繁的切换会损失性能\n减少上下文切换的方法：\n\n无锁并发编程：例如把一堆数据分为几块，交给不同线程执行，避免用锁\n使用CAS算法：用自旋不用锁可以减少线程竞争切换，但是可能会更加耗cpu\n使用最少的线程\n使用协程：在一个线程里执行多个任务\n\n死锁\n死锁就是线程之间因争夺资源处理不当出现的相互等待现象\n避免死锁的方法：\n\n避免一个线程同时获取多个锁\n避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源\n尝试使用定时锁，使用lock.tryLock（timeout）来替代使用内部锁机制\n对于数据库锁，加锁和解锁必须在一个数据库连接里，否则会出现解锁失败的情况\n\n资源限制\n程序的执行需要资源，比如数据库连接、带宽，可能会由于资源的限制，多个线程并不是并发，而是串行，不仅无优势，反而带来不必要的上下文切换损耗\n常见资源限制\n\n硬件资源限制\n带宽\n磁盘读写速度\ncpu处理速度\n\n\n软件资源限制\n数据库连接数\nsocket连接数\n\n\n\n应对资源限制\n\n集群化，增加资源\n根据不同的资源限制调整程序的并发度，找到瓶颈，把瓶颈资源搞多一些，或者根据这个瓶颈调整线程数\n\n"},"第02章-并发编程基础/02-创建线程的三种方式.html":{"url":"第02章-并发编程基础/02-创建线程的三种方式.html","title":"02-创建线程的三种方式","keywords":"","body":"创建线程的三种方式\n废话不说，直接上代码\n继承Thread类\n// 继承Thread\nclass MyThread extends Thread {\n    // 重写run方法执行任务\n    @Override\n    public void run() {\n        for (int i = 0; i \n实现Runnable\n// 实现Runnable接口\nclass MyThreadByRunnable implements Runnable {\n\n    @Override\n    public void run() {\n        for (int i = 0; i \n用lamba也可以\nnew Thread(() -> {\n    System.out.println(\"Runnable是函数式接口， java8也可以使用lamba\");\n}).start();\n\n使用Callable和Future\n// 使用Callable\nclass MyThreadByCallable implements Callable {\n\n    @Override\n    public Integer call() throws Exception {\n        int sum = 0;\n        for (int i = 0; i  futureTask = new FutureTask<>(new MyThreadByCallable());\n        new Thread(futureTask).start();\n        try {\n            // 调用futureTask的get能拿到返回的值\n            System.out.println(futureTask.get());\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n这是最复杂的一种方式，他可以有返回值，归纳一下步骤：\n\n搞一个类实现Callable接口，重写call方法，在call执行任务\n用FutureTask包装实现Callable接口类的实例\n将FutureTask的实例作为Thread构造参数\n调用FutureTask实例的get拿到返回值，调这一句会阻塞父线程\n\nCallable也是函数式接口，所以也能用lamba\n为啥Thread构造里边能方Runnable，也能放FutureTask? 其实FutureTask继承RunnableFuture，而RunnableFuture继承Runnable和Future，注意接口是可以多继承的\n三种方式比较\n\n\n\n方式\n使用简易程度\n是否可以共享任务代码\n是否可以有返回值\n是否可以声明抛出异常\n是否可以再继承别的类\n\n\n\n\n继承Thread\n简单\n不能\n不能\n不能\n不能\n\n\nRunnable\n中等\n可以\n不能\n不能\n可以\n\n\nCallable\n复杂\n可以\n可以\n可以\n可以\n\n\n\n继承Thread是最容易的，但是也是最不灵活的\n使用Callable时最复杂的，但是也是最灵活的\n这里说的共享任务代码举个例子：\n还是上面那个MyThreadByRunnable类\nMyThreadByRunnable myThreadByRunnable = new MyThreadByRunnable();\nThread thread = new Thread(myThreadByRunnable);\nthread.start();\n// 再来一个，复用了任务代码，继承Thread就不行\nThread thread2 = new Thread(myThreadByRunnable);\nthread2.start();\n\n"},"第02章-并发编程基础/03-线程的一些属性.html":{"url":"第02章-并发编程基础/03-线程的一些属性.html","title":"03-线程的一些属性","keywords":"","body":"线程的一些属性\n名字\n给以给线程取一个响亮的名字，便于排查问题，默认为Thread-${一个数字}这个样子\n\n设置名字\n\nthreadA.setName(\"欢迎关注微信公号'大雄和你一起学编程'\");\n\n\n获取名字\n\nthreadA.getName();\n\n是否是守护线程(daemon)\n为其他线程服务的线程可以是守护线程，守护线程的特点是如果所有的前台线程死亡，则守护线程自动死亡。\n非守护线程创建的线程默认为非守护线程，守护则默认为守护\n\nset\n\nthreadA.setDaemon(true);\n\n\nget\n\nthreadA.isDaemon();\n\n线程优先级(priority)\n优先级高的线程可以得到更多cpu资源, 级别是1-10，默认优先级和创建他的父线程相同\nset\nthreadA.setPriority(Thread.NORM_PRIORITY);\n\nget\nthreadA.getPriority()\n\n所属线程组\n可以把线程放到组里，一起管理\n设置线程组\nThread的构造里边可以指定\nThreadGroup threadGroup = new ThreadGroup(\"欢迎关注微信公号'大雄和你一起学编程'\");\nThread thread = new Thread(threadGroup, () -> {\n    System.out.println(\"欢迎关注微信公号'大雄和你一起学编程'\");\n});\n\n拿到线程组\nthread.getThreadGroup()\n基于线程组的操作\nThreadGroup threadGroup1 = thread.getThreadGroup();\nSystem.out.println(threadGroup1.activeCount()); // 有多少活的线程\nthreadGroup1.interrupt();                       // 中断组里所有线程\nthreadGroup1.setMaxPriority(10);                // 设置线程最高优先级是多少\n\n"},"第02章-并发编程基础/04-线程同步.html":{"url":"第02章-并发编程基础/04-线程同步.html","title":"04-线程同步","keywords":"","body":"线程同步\n多个线程访问同一个资源可能会导致结果的不确定性，因此有时需要控制只有一个线程访问共享资源，此为线程同步。\n一个是可以使用synchronized同步，一个是可以使用Lock。synchronized是也是隐式的锁。\n同步方法\nclass Account {\n    private Integer total;\n\n    public Account(int total) {\n        this.total = total;\n    }\n\n    public synchronized void draw(int money) {\n        if (total >= money) {\n            this.total = this.total - money;\n            System.out.println(Thread.currentThread().getName() + \"剩下\" + this.total);\n        } else {\n            System.out.println(Thread.currentThread().getName() + \"不够了\");\n        }\n    }\n\n    public synchronized int getTotal() {\n        return total;\n    }\n}\n\npublic class Demo_02_04_1_ThreadSync {\n    public static void main(String[] args) {\n        Account account = new Account(100);\n        Runnable runnable = new Runnable() {\n            @Override\n            public void run() {\n                while (account.getTotal() >= 10) {\n                    account.draw(10);\n                    try {\n                        Thread.sleep(1);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        };\n        Thread A = new Thread(runnable);\n        A.setName(\"A\");\n        Thread B = new Thread(runnable);\n        B.setName(\"B\");\n        A.start();\n        B.start();\n    }\n}\n\n假设AB两个人从同一个账户里取钱，直接在draw这个方法加synchronized关键字，防止两个人同时进入draw\nsychronized加在普通方法上，锁为当前实例对象\n加在静态方法上，锁为当前类的Class\n同步代码块\npublic  void draw(int money) {\n    synchronized (total) {\n        if (total >= money) {\n            this.total = this.total - money;\n            System.out.println(Thread.currentThread().getName() + \"剩下\" + this.total);\n        } else {\n            System.out.println(Thread.currentThread().getName() + \"不够了\");\n        }\n    }\n}\n\nsynchronized同步块，锁为()里边的对象\n锁\nLock lock = new ReentrantLock();\npublic void draw(int money) {\n    lock.lock();\n    try {\n        if (total >= money) {\n            this.total = this.total - money;\n            System.out.println(Thread.currentThread().getName() + \"剩下\" + this.total);\n        } else {\n            System.out.println(Thread.currentThread().getName() + \"不够了\");\n        }\n    } finally {\n        lock.unlock();\n    }\n}\n\n使用比较简单，进方法加锁，执行完释放，后面会专门介绍锁。\n"},"第02章-并发编程基础/05-线程间的通信.html":{"url":"第02章-并发编程基础/05-线程间的通信.html","title":"05-线程间的通信","keywords":"","body":"线程间的通信\n线程之间协调工作的方式\n基于等待通知模型的通信\n等待/通知的相关方法是任意Java对象都具备的，因为这些方法被定义在所有对象的超类java.lang.Object上。\n相关API\n\nnotify: 通知一个对象上等待的线程，使其从wait方法返回，而返回的前提是该线程获取到了对象的锁\nnotifyAll: 通知对象上所有等待的线程，使其从wait方法返回\nwait: 使线程进入WAITING（后面线程的生命周期讲）状态，只有等待另一个线程通知或者被中断才返回，需要注意的是，调用wait方法后需要释放对象的锁\nwait(long): 和wait类似，加入了超时时间，超时了还没被通知就直接返回\nwait(long, int): 纳秒级，不常用\n\n一些需要注意的点：\n\n使用wait()、notify()和notifyAll()时需要先对调用对象加锁。\n调用wait()方法后，线程状态由RUNNING变为WAITING，并将当前线程放置到对象的等待队列，释放锁。\nnotify()或notifyAll()方法调用后，等待线程不会立即从wait()返回，需要调用notify()或notifAll()的线程释放锁之后，等待线程才有机会从wait()返回。\nnotify()方法将等待队列中的一个等待线程从等待队列中移到同步队列中，而notifyAll()方法则是将等待队列中所有的线程全部移到同步队列，被移动的线程状态由WAITING变为BLOCKED。\n从wait()方法返回的前提是获得了调用对象的锁。\n\n关于等待队列和同步队列\n\n同步队列（锁池）：假设线程A已经拥有了某个对象（注意:不是类）的锁，而其它的线程想要调用这个对象的某个synchronized方法(或者synchronized块)，由于这些线程在进入对象的synchronized方法之前必须先获得该对象的锁的拥有权，但是该对象的锁目前正被线程A拥有，所以这些线程就进入了该对象的同步队列（锁池）中，这些线程状态为Blocked。\n等待队列（等待池）：假设一个线程A调用了某个对象的wait()方法，线程A就会释放该对象的锁（因为wait()方法必须出现在synchronized中，这样自然在执行wait()方法之前线程A就已经拥有了该对象的锁），同时 线程A就进入到了该对象的等待队列（等待池）中，此时线程A状态为Waiting。如果另外的一个线程调用了相同对象的notifyAll()方法，那么 处于该对象的等待池中的线程就会全部进入该对象的同步队列（锁池）中，准备争夺锁的拥有权。如果另外的一个线程调用了相同对象的notify()方法，那么 仅仅有一个处于该对象的等待池中的线程（随机）会进入该对象的同步队列（锁池）。\n\n以上来自啃碎并发（二）：Java线程的生命周期\n等待通知模型的示例\nclass WaitNotifyModel {\n    Object lock = new Object();\n    boolean flag = false;\n\n    public void start() {\n        Thread A = new Thread(() -> {\n            synchronized (lock) {\n                while (!flag) {\n                    try {\n                        System.out.println(Thread.currentThread().getName()+\"：等待通知\");\n                        lock.wait();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                System.out.println(Thread.currentThread().getName()+ \"：收到通知，处理业务逻辑\");\n            }\n        });\n        A.setName(\"我是等待者\");\n        Thread B = new Thread(() -> {\n            synchronized (lock) {\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                flag = true;\n                System.out.println(Thread.currentThread().getName()+\":发出通知\");\n                lock.notify();\n            }\n        });\n        B.setName(\"通知者\");\n        A.start();\n        B.start();\n    }\n}\n\n模型\n等待者\n synchronized (对象) {\n    while (不满足条件) {\n        对象.wait()\n    }\n    处理业务逻辑\n}\n\n通知者\nsynchronized (对象) {\n    改变条件\n    对象.notify();\n}\n\n基于Condition的通信\n上述的这种等待通知需要使用synchronized, 如果使用Lock的话就要用Condition了\nCondition接口也提供了类似Object的监视器方法，与Lock配合可以实现等待/通知模式\nCondition与Object监视器的区别\n\n\n\n项目\nObject的监视器方法\nCondition\n\n\n\n\n前置条件\n获得对象的锁\nLock.lock()获取锁Lock.newCondition()获取Condition\n\n\n调用方式\nobj.wait()\ncondition.await()\n\n\n等待队列个数\n一个\n可以多个\n\n\n当前线程释放锁并进入等待状态\n支持\n支持\n\n\n等待状态中不响应中断\n不支持\n支持\n\n\n释放锁进入超时等待状态\n支持\n支持\n\n\n进入等待状态到将来的某个时间\n不支持\n支持\n\n\n唤醒等待中的一个或多个线程\n支持 notify notifyAll\n支持signal signalAll\n\n\n\n这里有一些线程的状态，可以看完后边的线程的生命周期再回过头看看\n示例\n一般都会将Condition对象作为成员变量。当调用await()方法后，当前线程会释放锁并在此等待，而其他线程调用Condition对象的signal()方法，通知当前线程后，当前线程才从await()方法返回，并且在返回前已经获取了锁。\n实现一个有界队列，当队列为空时阻塞消费线程，当队列满时阻塞生产线程\nclass BoundList {\n    private LinkedList list;\n    private int size;\n    private Lock lock = new ReentrantLock();\n    // 拿两个condition,一个是非空，一个是不满\n    private Condition notEmpty = lock.newCondition();\n    private Condition notFullCondition = lock.newCondition();\n\n    public BoundList(int size) {\n        this.size = size;\n        list = new LinkedList<>();\n    }\n\n    public void push(T x) throws InterruptedException {\n        lock.lock();\n        try {\n            while (list.size() >= size) {\n                // 满了就等待\n                notFullCondition.await();\n            }\n            list.push(x);\n            // 唤醒等待的消费者\n            notEmpty.signalAll();\n\n        } finally {\n            lock.unlock();\n        }\n    }\n\n    public T get() throws InterruptedException {\n        lock.lock();\n        try {\n            while (list.isEmpty()) {\n                // 空了就等\n                notEmpty.await();\n            }\n            T x = list.poll();\n            // 唤醒生产者\n            notFullCondition.signalAll();\n            return x;\n        } finally {\n            lock.unlock();\n        }\n    }\n\n}\n\npublic class Demo_02_05_1_Condition {\n    public static void main(String[] args) {\n        BoundList list = new BoundList<>(10);\n        // 生产数据的线程\n        new Thread(() -> {\n            for (int i = 0; i  {\n            for (int i = 0; i \n基于BlockingQueue实现线程通信\n这里列个标题，后边说到了BlockingQueue就明白怎么做了。\n可以参看第05章的相关内容\n"},"第02章-并发编程基础/06-控制线程.html":{"url":"第02章-并发编程基础/06-控制线程.html","title":"06-控制线程","keywords":"","body":"控制线程\n参考了《疯狂java讲义》的提法，将如下内容归为控制线程。\njoin\n主线程join一个线程，那么主线程会阻塞直到join进来的线程执行完，主线程继续执行， join如果带超时时间的话，那么如果超时的话主线程也会不再等join进去的线程而继续执行.\njoin实际就是判断join进来的线程存活状态，如果活着就调用wait(0),如果带超时时间了的话，wait里边的时间会算出来\nwhile (isAlive()) {\n    wait(0);\n}\n\nAPI\n\npublic final void join() throws InterruptedException\npublic final synchronized void join(long millis, int nanos)\npublic final synchronized void join(long millis)\n\n例子\npublic class Demo_02_06_1_join extends Thread {\n    @Override\n    public void run() {\n        for (int i = 0; i \nsleep\n睡觉方法，使得线程暂停一段时间，进入阻塞状态。\nAPI\n\npublic static native void sleep(long millis) throws InterruptedException\npublic static void sleep(long millis, int nanos) throws InterruptedException\n\n示例\npublic class Demo_02_06_2_sleep extends Thread {\n    @Override\n    public void run() {\n        for (int i = 0; i \nyield\n也是让线程暂停一下，但是是进入就绪状态，让系统重新开始一次新的调度过程\nThread.yield()\n中断\nJava中断机制是一种协作机制，也就是说通过中断并不能直接终止另一个线程，而需要被中断的线程自己处理中断。\n前面有一些方法声明了InterruptedException， 这意味者他们可以被中断，中断后把异常抛给调用方，让调用方自己处理. \n被中断的线程可以自已处理中断，也可以不处理或者抛出去。\npublic class Demo_02_06_3_interrupt extends Thread {\n\n    static class MyCallable implements Callable {\n        @Override\n        public Integer call() throws InterruptedException {\n            for (int i = 0; i  futureTask = new FutureTask<>(new MyCallable());\n        Thread thread = new Thread(futureTask);\n        thread.start();\n        for (int i = 0; i \n"},"第02章-并发编程基础/07-线程的生命周期.html":{"url":"第02章-并发编程基础/07-线程的生命周期.html","title":"07-线程的生命周期","keywords":"","body":"线程的生命周期\n啃碎并发（二）：Java线程的生命周期\n 这篇文章写的非常好，建议看一下。\n要是早点发现这篇文章的话，大雄也不用费劲在《java并发编程艺术》和《疯狂java讲义》以及各种博客找资料了。\n这里我只想把这篇文章里一个图改一下贴到这里，细节部分大家可以参考上述这篇文章。\n还是先说两嘴，这个生命周期的图我找到了不少版本，不仅图的形式不一样，里边的内容也有些出入\n\n《疯狂java讲义》里边只有5中状态，缺少WAITING和TIMED_WAITING\n《java并发编程艺术》里边有7中状态\n上边的那篇文章，文字描述有7中状态，但是图里边只有6种\n\n大雄也懵了，遂在源码找到了如下一个枚举, 里面有一些注释，翻译了一下。\n public enum State {\n        // 表示没有开始的线程\n        NEW,\n\n        // 表示可运行（大家的翻译应该是就绪）的线程\n        // 表示在JVM正在运行，但是他可能需要等操作系统分配资源\n        // 比如CPU\n        RUNNABLE,\n\n         // 表示线程在等待监视器锁\n         // 表示正在等待监视器锁以便重新进进入同步块或者同步方法 \n         // OR 在调用了Object.wait重新进入同步块或者同步方法\n        BLOCKED,\n\n         // 调用如下方法之一会进入WAITING\n         // 1. Object.wait() 没有加超时参数\n         // 2. 调用join() 没有加超时参数\n         // 3. 调用LockSupport.park()\n         // WAITING状态的线程在等待别的线程做一个特殊的事情（action）例如\n         // 1. 调用了wait的在等待其他线程调用notify或者notifyAll\n         // 2. 调用了join的在等待指定线程结束\n        WAITING,\n\n         // 就是有一个特定等待时间的线程\n         // 加上一个特定的正的超时时间调用如下方法会进入此状态\n         // 1. Thread.sleep\n         // 2. Thread.join(long)\n         // 3. LockSupport.parkNanos\n         // 4. LockSupport.parkUntil\n        TIMED_WAITING,\n\n        // 执行完了结束的状态\n        TERMINATED;\n    }\n\n对于一个拥有8级英语水品的6级没过的人来说，这段翻译太难了，但是翻译出来感觉很清晰了。\n应该是 7种状态！！！\n大雄不去具体研究状态的流转了，直接参考一些资料及上述翻译，搞一个前无古人、后有来者的线程生命周期图\n\n这个图八成、没准、大概是没有太大问题的。此图中，原谅色是线程状态，紫色是引起状态变化的原因。\n"},"第02章-并发编程基础/08-ThreadLocal.html":{"url":"第02章-并发编程基础/08-ThreadLocal.html","title":"08-ThreadLocal","keywords":"","body":"ThereadLocal\n是一个以ThreadLocal对象为键、任意对象为值的存储结构。这个结构被附带在线程上，也就是说一个线程可以根据一个ThreadLocal对象查询到绑定在这个线程上的一个值。\n使用示例\nclass Profiler {\n    // ThreadLocal的创建\n    private static ThreadLocal threadLocal = new ThreadLocal(){\n        @Override\n        protected Long initialValue() {\n            return System.currentTimeMillis();\n        }\n\n    };\n\n    // 记录开始时间\n    public static void begin() {\n        threadLocal.set(System.currentTimeMillis());\n    }\n\n    // 记录耗时\n    public static Long end() {\n        return System.currentTimeMillis() - threadLocal.get();\n    }\n}\npublic class Demo_02_08_1_ThreadLocal {\n    public static void main(String[] args) {\n        new Thread(() -> {\n            Profiler.begin();\n            long sum = 1;\n            for (int i = 1; i  {\n            Profiler.begin();\n            int sum = 1;\n            for (int i = 1; i \nInheritableThreadLocal\n这种ThreadLocal可以从父线程传到子线程，也就是子线程能访问父线程中的InheritableThreadLocal\npublic class Demo_02_08_2_ThreadLocalInherit {\n    static class TestThreadLocalInherit extends Thread{\n        @Override\n        public void run() {\n            System.out.println(threadLocal.get()); // null \n            System.out.println(inheritableThreadLocal.get()); // 欢迎关注微信公众号 大雄和你一起学编程\n        }\n    }\n\n    public static ThreadLocal threadLocal = new ThreadLocal();\n    public static InheritableThreadLocal inheritableThreadLocal = new InheritableThreadLocal<>();\n    public static void main(String[] args) {\n        inheritableThreadLocal.set(\"欢迎关注微信公众号 大雄和你一起学编程\");\n        threadLocal.set(\"ddd\");\n        new TestThreadLocalInherit().start();\n    }\n}\n\n实现原理\n很容易想到，因为这个东西是跟着线程走的，所以应该是线程的一个属性，事实上也是这样，ThreadLocal和InheritableThreadLocal都是存储在Thread里面的。\n/* ThreadLocal values pertaining to this thread. This map is maintained\n * by the ThreadLocal class. */\nThreadLocal.ThreadLocalMap threadLocals = null;\n\n/*\n * InheritableThreadLocal values pertaining to this thread. This map is\n * maintained by the InheritableThreadLocal class.\n */\nThreadLocal.ThreadLocalMap inheritableThreadLocals = null;\n\n上边这个就是Thread的两个成员变量，其实两个是一样的类型。\nThreadLocalMap是ThreadLocal的内部类，他里边是一个用一个Entry数组来存数据的。set时讲ThreadLocal作为key，要存的值传进去，他会对key做一个hash，构建Entry,放到Entry数组里边。\n// 伪码\nstatic class ThreadLocalMap {\n    // 内部的Entry结构\n    static class Entry {...}\n    // 存数据的\n    private Entry[] table;\n    // set\n    private void set(ThreadLocal key, Object value) {\n        int i = key.threadLocalHashCode & (len-1);\n        tab[i] = new Entry(key, value);\n    }\n    // get\n    private Entry getEntry(ThreadLocal key) {\n        int i = key.threadLocalHashCode & (table.length - 1);\n        Entry e = table[i];\n        if (e != null && e.get() == key)\n            return e;\n        else\n            return getEntryAfterMiss(key, i, e);\n    }\n}\n\n再来看看ThreadLocal的get方法\npublic T get() {\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t); // 这个就是拿到的存在Thread的threadLocals这个变量\n    if (map != null) {\n        // 这里就是毫无难度的事情了\n        ThreadLocalMap.Entry e = map.getEntry(this);\n        if (e != null) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T)e.value;\n            return result;\n        }\n    }\n    // 这个也很简单，他会调你重写的initialValue方法，拿到一个值，set进去并且返回给你\n    // 这个也很有趣，一般init在初始化完成，但是他是在你取的时候去调\n    return setInitialValue();\n}\n\n再来看看ThreadLocal的set, 超级简单,不多说\npublic void set(T value) {\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null)\n        map.set(this, value);\n    else\n        createMap(t, value);\n}\n\nThreadLocal看完了，再来瞅瞅InheritableThreadLocals,看看他是怎么可以从父线程那里拿东西的\n// 继承了ThreadLocal, 重写了三个方法\npublic class InheritableThreadLocal extends ThreadLocal {\n    // 这个方法在ThreadLocal是直接抛出一个异常UnsupportedOperationException\n    protected T childValue(T parentValue) {\n        return parentValue;\n    }\n    // 超简单，我们的Map不要threadLocals了，改为inheritableThreadLocals\n    ThreadLocalMap getMap(Thread t) {\n       return t.inheritableThreadLocals;\n    }\n    // 同上\n    void createMap(Thread t, T firstValue) {\n        t.inheritableThreadLocals = new ThreadLocalMap(this, firstValue);\n    }\n}\n\n发现他和ThreadLocal长得差不多，就是重写了三个方法，由此看来关键在inheritableThreadLocals是如何传递的\n直接在Thread里面搜inheritableThreadLocals\n你会发现他是在init方法中赋值的，而init实在Thread的构造方法中调用的\n// 这个parent就是 创建这个线程的那个线程，也就是父线程\nif (inheritThreadLocals && parent.inheritableThreadLocals != null)\nthis.inheritableThreadLocals = ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n\n看来现在得看看ThreadLocal.createInheritedMap这个方法了\n// parentMap就是父线程的inheritableThreadLocals\nstatic ThreadLocalMap createInheritedMap(ThreadLocalMap parentMap) {\n    return new ThreadLocalMap(parentMap);\n}\n// 发现很简单，就是把父线程的东西到自己线程的inheritableThreadLocals里边\nprivate ThreadLocalMap(ThreadLocalMap parentMap) {\n    Entry[] parentTable = parentMap.table;\n    int len = parentTable.length;\n    setThreshold(len);\n    table = new Entry[len];\n\n    for (int j = 0; j  key = (ThreadLocal) e.get();\n            if (key != null) {\n                Object value = key.childValue(e.value);\n                Entry c = new Entry(key, value);\n                int h = key.threadLocalHashCode & (len - 1);\n                while (table[h] != null)\n                    h = nextIndex(h, len);\n                table[h] = c;\n                size++;\n            }\n        }\n    }\n}\n\n总结一下\nThreadLocal和InheritableThreadLocal是基于在Thread里边的两个变量实现的，这两个变量类似于一个HashMap的结构ThreadLocalMap，里边的Entry key为ThreadLocal, value为你存的值. InheritableThreadLocal的实现主要是在线程创建的时候，如果父线程有inheritableThreadLocal, 会被拷贝到子线程。\n"},"第02章-并发编程基础/09-原子类.html":{"url":"第02章-并发编程基础/09-原子类.html","title":"09-原子类","keywords":"","body":"原子类\n一个简单的i++操作, 多线程环境下如果i是共享的，这个操作就不是原子的。\n为此，java.util.concurrent.atomic这个包下边提供了一些原子类，这些原子操作类提供了一种用法简单、性能高效、线程安全地更新一个变量的方式。\n\n一个使用的例子\npublic class Demo_04_01_1_Atomic {\n    static class Counter {\n        private AtomicInteger atomicInteger = new AtomicInteger(0);\n        public int increment() {\n            return atomicInteger.getAndIncrement();\n        }\n        public int get() {\n            return atomicInteger.get();\n        }\n    }\n    static class Counter2 {\n        private int value = 0;\n        public int increment() {\n            return value++;\n        }\n        public int get() {\n            return value;\n        }\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        // 这个用了原子类\n        Counter counter = new Counter();\n        // 这个没有用原子类\n        Counter2 counter2 = new Counter2();\n        for (int i = 0; i  {\n                for (int j = 0; j \n超级简单~\n"},"第02章-并发编程基础/10-章小结.html":{"url":"第02章-并发编程基础/10-章小结.html","title":"10-章小结","keywords":"","body":"章小结\n\n本图源文件可以在github java-concurrent-programming-art-mini对应章下面找到\n"},"第03章-锁/":{"url":"第03章-锁/","title":"第03章-锁","keywords":"","body":"锁\n锁是实现线程同步，用来控制多个线程访问共享资源的方式。一般来说，一个锁能够防止多个线程同时访问共享资源（但是有些锁可以允许多个线程并发的访问共享资源，比如读写锁）。本章将介绍如何使用锁，锁的实现原理。\n"},"第03章-锁/01-锁的基本使用.html":{"url":"第03章-锁/01-锁的基本使用.html","title":"01-锁的基本使用","keywords":"","body":"锁的基本使用\n锁一般都是实现Lock接口，所以了解Lock接口的API，基本就会用锁了。\nLock接口\n\n\n\n方法\n说明\n\n\n\n\nvoid lock()\n获取锁。调用方法会获取锁，直到锁获取后返回\n\n\nvoid lockInterruptibly() throws InterruptedException\n可中断获取锁，在获取锁的过程中可以被中断，被中断后抛出异常返回\n\n\nboolean tryLock()\n尝试非阻塞的获取锁，立即返回，拿到锁返回true，否则false\n\n\nboolean tryLock(long time, TimeUnit unit) throws InterruptedException\n超时的获取锁返回的情况1. 在超时时间内获取到了锁，返回true2. 被中断了，抛出异常返回3. 超时时间到，返回false\n\n\nvoid unlock()\n释放锁\n\n\nCondition newCondition()\n获取等待通知组件，只有拿到了锁，才能拿到这个对象，调用wait()方法，调用后释放锁\n\n\n\n带try的这种方法，就是拿的到就拿，拿不到就算了，会立即返回；这个就想学习一样，学的会就学，学不会就算了，当然这是错误的观点了。\n可以看到和synchronized相比Lock要灵活和强大，使用会稍微麻烦一点：\n\nsynchronized是隐式获取释放锁，比较简单和固定，Lock是需要手动获取锁和释放，比较灵活\nLock可以尝试非阻塞获取锁、能被中断的获取锁、能够带超时的获取锁， synchronized不能做到\n\n一个例子\nstatic class Account {\n    // 搞个可重入锁练手\n    private Lock lock = new ReentrantLock();\n    private Integer money;\n\n    public Account(Integer money) {\n        this.money = money;\n    }\n\n    public boolean draw(int count) {\n        // 加锁不要放到try里边，因为如果在获取锁（自定义锁的实现）时发生了异常，异常抛出的同时，也会导致锁无故释放\n        lock.lock();\n        try {\n            if (money >= count) {\n                System.out.println(\"取走\" + count);\n                money -= count;\n                return true;\n            } else {\n                System.out.println(\"钱不够了，去关注微信公号‘大雄和你一起学编程’吧\");\n                return false;\n            }\n        } finally {\n            // 写到finally，保证释放锁\n            lock.unlock();\n        }\n    }\n}\n\n"},"第03章-锁/02-AQS.html":{"url":"第03章-锁/02-AQS.html","title":"02-AQS","keywords":"","body":"AQS\n队列同步器AbstractQueuedSynchronizer（AQS)是实现各种锁的关键，因此要了解锁的原理或者自己实现锁必须先了解AQS。\nAQS的使用\nAPI\n获取和修改AQS状态的几个方法\n\nprotected final int getState()： 获取同步状态\nprotected final void setState(int newState)：设置同步状态\nprotected final boolean compareAndSetState(int expect, int update)：原子的设置同步状态\n\n第三个，原来的状态与expect相等，则修改为update状态，否则返回false\n可以被重写的方法\n\nprotected boolean tryAcquire(int arg): 独占式获取同步状态，在此方法中需要查询当前状态并判断是否符合预期，然后CAS设置同步状态\nprotected boolean tryRelease(int arg)： 独占式释放同步状态，  等待获取同步状态的线程有机会拿到同步状态\nprotected int tryAcquireShared(int arg)：共享式获取同步状态，返回>=0表示获取成功，否则表示获取失败\nprotected boolean tryReleaseShared(int arg)：共享式释放同步状态\nprotected boolean isHeldExclusively()：当前同步器是否在独占模式下被线程占用\n\nAQS提供的模板方法\n\npublic final void acquire(int arg)： 独占式获取同步状态，获取成功则返回，否则进入同步队列等待，会调用重写的tryAcquire(int arg)\npublic final void acquireInterruptibly(int arg)：独占是获取同步状态，但是能响应中断，被中断抛异常\npublic final boolean tryAcquireNanos(int arg, long nanosTimeout)：独占是获取同步状态，能响应中断，且有超时，超时返回false\npublic final void acquireShared(int arg)：共享式获取同步状态，没获取到则进入同步队列，同一时刻可以有多个线程获取到同步状态\npublic final void acquireSharedInterruptibly(int arg)：可以被中断\npublic final boolean tryAcquireSharedNanos(int arg, long nanosTimeout)：带超时，且能被中断\npublic final boolean release(int arg)：独占式释放同步状态，释放后会将同步队列第一个节点唤醒\npublic final boolean releaseShared(int arg): 共享式释放同步状态；\npublic final Collection getQueuedThreads(): 获取同步队列里的线程\n\n一些说明：\n\n可以把AQS理解为管理状态的一个东西，然后你可以通过重写他的一些方法定义自己的规则\n共享式：指几个线程可以同时获得同步状态，独占式：指只能单独的线程获得同步状态\n方法比较多，不要怕，通过下边的例子和之后对一些锁的实现原理分析就能理解了\n\n一个使用AQS的例子\n基于AQS实现一个独占不可重入锁，不可重入就是一个线程获取到了锁，然后他又来获取，这时会被阻塞\npublic class Demo_03_02_1_AQS {\n    static class DaxiongLock implements Lock {\n        // AQS就是这么用的，继承他，然后根据需要重写他的方法\n        // 由于我们时独占锁，所以重写独占式同步状态获取和释放，以及同步器是否被占用的判断规则\n        // 我们规定，同步状态为0表示同步器没有被占用，非0表示被占用了\n        private class Sync extends AbstractQueuedSynchronizer {\n            @Override\n            protected boolean tryAcquire(int arg) {\n                // 因为0才是没被占用，所以我们期望0的时候可以获取，获取之后要改为非0\n                if (compareAndSetState(0, 1)) {\n                    // 设置当前线程占用了这个访问的权限\n                    setExclusiveOwnerThread(Thread.currentThread());\n                    return true;\n                }\n                return false;\n            }\n\n            @Override\n            protected boolean tryRelease(int arg) {\n                if (getState() == 0) {  // 没被占用尝试释放，直接抛异常，也就是必须式获取了同步状态的线程才能释放他\n                    throw new IllegalMonitorStateException();\n                }\n                // 为什么这里不需要用原子操作？因为释放的时候说明那个线程占用同步器，而同步器只会被一个线程占用\n                // 所以一定是原子的\n                setState(0);\n                setExclusiveOwnerThread(null);\n                return true;\n            }\n\n            @Override\n            protected boolean isHeldExclusively() {\n                // 状态>0就表示同步器被占用了\n                return getState() > 0;\n            }\n\n            Condition newCondition() {\n                return new ConditionObject();\n            }\n        }\n\n        private final Sync sync = new Sync();\n\n        @Override\n        public void lock() {\n            // 获取失败的话会进入同步队列阻塞\n            sync.acquire(1);\n        }\n\n        @Override\n        public void lockInterruptibly() throws InterruptedException {\n            sync.acquireInterruptibly(1);\n        }\n\n        @Override\n        public boolean tryLock() {\n            return sync.tryAcquire(1);\n        }\n\n        @Override\n        public boolean tryLock(long time, TimeUnit unit) throws InterruptedException {\n            return sync.tryAcquireNanos(1, unit.toNanos(time));\n        }\n\n        @Override\n        public void unlock() {\n            sync.release(1);\n        }\n\n        @Override\n        public Condition newCondition() {\n            return sync.newCondition();\n        }\n    }\n\n    public static void main(String[] args) {\n        Lock lock = new DaxiongLock();\n        // 这两个线程一定是一个线程执行完了另一个执行\n        new Thread(() -> {\n            lock.lock();\n            try {\n                for (int i = 0; i  {\n            lock.lock();\n            try {\n                for (int i = 0; i \n代码比较多，关键处有注释。AQS就是这么用的，直接继承他，按你的需要去重写他的方法，定义自己的规则，什么样的情况下能获取，什么情况不能等等。\n实现锁的时候直接调AQS的方法就好了\nAQS的原理\nAQS依赖内部的同步队列来完成同步状态的管理，当前线程获取同步状态失败时，AQS会将当前线程以及等待状态等信息构造成为一个节点（Node）并将其加入同步队列，同时会阻塞当前线程，当同步状态释放时，会把首节点中的线程唤醒，使其再次尝试获取同步状态。\nNode\n同步队列中的节点\nstatic final class Node {\n    // 标识 是在共享式的模式下\n    static final Node SHARED = new Node();\n    // 标识 实在独占式的模式下\n    static final Node EXCLUSIVE = null;\n\n    // 标识线程取消，可能是因为超时或者被中断了，这是个终态，不会再block了\n    static final int CANCELLED =  1;\n    // 后边的先传给你需要unparking， 后边的线程被阻塞(通过park)了，\n    // 所以,当前节点必须在他取消或者释放时unpark他后边的节点的线程\n    // 为了避免竞争，acquire方法必须首先标识他需要signal\n    // 然后尝试原子acquire, 如果失败就阻塞\n    static final int SIGNAL    = -1;\n    // 标识线程在condition等待，等待在condition队列，直到被转移到sync 队列\n    static final int CONDITION = -2;\n    // 标识 acquireShared需要无条件传播\n    static final int PROPAGATE = -3;\n    volatile int waitStatus;\n    volatile Node prev;\n    volatile Node next;\n\n    // 当前节点的线程的引用\n    volatile Thread thread;\n    // 下一个在condition 队列（条件队列或者等待队列）等待的节点\n    Node nextWaiter;\n    final boolean isShared() {\n        return nextWaiter == SHARED;\n    }\n    final Node predecessor() throws NullPointerException {\n        Node p = prev;\n        if (p == null)\n            throw new NullPointerException();\n        else\n            return p;\n    }\n\n    Node() {    // Used to establish initial head or SHARED marker\n    }\n\n    Node(Thread thread, Node mode) {     // Used by addWaiter\n        this.nextWaiter = mode;\n        this.thread = thread;\n    }\n\n    Node(Thread thread, int waitStatus) { // Used by Condition\n        this.waitStatus = waitStatus;\n        this.thread = thread;\n    }\n}\n\n这一段对节点的定义代码少，注释贼多，看了一下，惊奇的发现，《java并发编程艺术》里边的跟里边的注释差不多\n首先他是双向队列的节点，所以prev,next, 然后里边节点有自己的状态，然后有共享还是独占的标识，有自己的状态。\n目前还不是特别明朗，继续看\n入队和出队的过程\n入队\n和普通队列一样，也是考虑tail head都是null怎么处理，有元素怎么处理，无非就是引用指来指去，不同的是，他需要保证原子性\nprivate Node enq(final Node node) {\n    // compareAndSetTail或者Head失败就自旋\n    for (;;) {\n        Node t = tail;\n        if (t == null) { // Must initialize\n            if (compareAndSetHead(new Node()))\n                tail = head;\n        } else {\n            node.prev = t;\n            if (compareAndSetTail(t, node)) {\n                t.next = node;\n                return t;\n            }\n        }\n    }\n}\nprivate Node addWaiter(Node mode) {\n    Node node = new Node(Thread.currentThread(), mode);\n    // Try the fast path of enq; backup to full enq on failure\n    Node pred = tail;\n    // 这里应该是一个加速吧，本来直接调enq就可以了，但是enq里边有自旋\n    // 这里先直接这么尝试一把，不行再enq\n    // 不得不说，牛逼啊！~\n    if (pred != null) {\n        node.prev = pred;\n        if (compareAndSetTail(pred, node)) {\n            pred.next = node;\n            return node;\n        }\n    }\n    enq(node);\n    return node;\n}\n// 这个就是传说中的CAS操作了\nprivate final boolean compareAndSetTail(Node expect, Node update) {\n    return unsafe.compareAndSwapObject(this, tailOffset, expect, update);\n}\n// 还有这个\nprivate final boolean compareAndSetHead(Node update) {\n    return unsafe.compareAndSwapObject(this, headOffset, null, update);\n}\n\n我们发现，入队其实挺简单的，特殊的就是一个CAS操作了。CAS compareAndSet 比较交换\nCAS底层是sun.misc.Unsafe里边提供的，都是些native方法\npublic final native boolean compareAndSwapObject(Object var1, long var2, Object var4, Object var5);\n\npublic final native boolean compareAndSwapInt(Object var1, long var2, int var4, int var5);\n\npublic final native boolean compareAndSwapLong(Object var1, long var2, long var4, long var6);\n\n第一个参标识 要改那个对象， 第二个是个偏移量，第三个是你期望他是什么值才改，第四个是你想改成什么\n举个例子，A线程拿到的变量值是1，想改为3，但是在你还没改的时候B线程给他改成2了，compareAndSwapInt(obj,3333, 1, 3)就是false\n出队\n出队就head指针的改变，出队是首节点出队，而节点是获取同步状态的节点，而同步状态只有一个节点能获取到，所以出队是不用cas的\n出队的很关键一点是，他需要唤醒他后边节点的线程，让他去拿同步状态\nprivate void unparkSuccessor(Node node) {\n    int ws = node.waitStatus;\n    // 标识没有canceled\n    if (ws  0) {\n        s = null;\n        // 从后往前找，找到第一个没有被取消的节点\n        for (Node t = tail; t != null && t != node; t = t.prev)\n            if (t.waitStatus \n这里我找了很久首节点引用在哪修改的，但是没找到，奇怪（在后边找到了，一个节点进入到同步队列后就会开始自旋获取同步状态，获取到了就会改head引用的执行，指向自己）\n独占式同步状态的获取与释放\n获取的话，前面api里变有，是 tryAcquire(int arg) acquire(int arg) 这两方法，直接AQS源代码找就可以了\n我特么才知道idea有个快捷键叫ctrl+F12\npublic final void acquire(int arg) {\n    // 注意&&是短路的，写的真骚气\n    if (!tryAcquire(arg) &&\n        acquireQueued(addWaiter(Node.EXCLUSIVE), arg))\n        selfInterrupt();\n}\n// tryAcquire是你自己要重写的，传说中的模板方法模式啊，比如我们之前那个独占锁\nprotected boolean tryAcquire(int arg) {\n    throw new UnsupportedOperationException();\n}\n// 我们自己的独占锁里边的tryAcquire\nprotected boolean tryAcquire(int arg) {\n    // 因为0才是没被占用，所以我们期望0的时候可以获取，获取之后要改为非0\n    if (compareAndSetState(0, 1)) {\n        // 设置当前线程占用了这个访问的权限\n        setExclusiveOwnerThread(Thread.currentThread());\n        return true;\n    }\n    return false;\n}\n\naddWaiter前面说了，就是进入同步对队列，看看acquireQueued\n    final boolean acquireQueued(final Node node, int arg) {\n        boolean failed = true;\n        try {\n            boolean interrupted = false;\n            for (;;) {\n                // p是当前节点的前驱节点\n                final Node p = node.predecessor();\n                if (p == head && tryAcquire(arg)) {\n                    // 如果当前节点变为了头节点，且拿到了同步状态\n                    // 那么将当前节点设置为头\n                    setHead(node);\n                    p.next = null; // help GC\n                    failed = false;\n                    return interrupted;\n                }\n                if (shouldParkAfterFailedAcquire(p, node) &&\n                    parkAndCheckInterrupt())\n                    interrupted = true;\n            }\n        } finally {\n            if (failed)\n                cancelAcquire(node);\n        }\n    }\n\n这里就是你加的节点一自旋获取同步状态\n然后是释放同步状态\npublic final boolean release(int arg) {\n    if (tryRelease(arg)) {\n        Node h = head;\n        if (h != null && h.waitStatus != 0)\n        // 这个就是之前讲的出队的操作，他会唤醒当前节点的下一个不是Cancel状态的节点\n            unparkSuccessor(h);\n        return true;\n    }\n    return false;\n}\n// tryRelease也是需要重写的\n\n《java并发编程艺术》里边有个图，对这个独占式同步状态获取流程说的比较清晰\n\n共享式同步状态的获取和释放\n获取\n其实和独占差不多，不同的是可以同时有几个线程获得同步状态，而满足怎样的条件可以获取同步状态时通过重写tryAcquireShared决定的。\n只要tryAcquireShared返回值>=0, 就是成功获取到了同步状态了\n否则的话，也是加入同步队列里自旋，判断条件时tryAcquireShared返回值>=0了， 那么同步状态就获取成功了。\n释放\n和独占式的区别就是，他的释放是需要保证原子性的，因为独占式释放的时候时天然的原子性，而共享式的可能有几个线程同时释放，所以就要通过自旋+CAS保证原子性\n独占式超时同步状态获取\n没有太大区别，就是他加入同步对队列后会算一个deadline,deatline=当前时间+你允许的超时时间，然后自旋的时候会每次都检查\n当前时间是否超出了deadline, 超出了就直接返回false\n共享式超时同步状态获取\n没什么可写的了，列个标题，猜也能猜到怎么做的了\n一个共享式获取同步状态的例子\n前面的“独占不可重入锁”演示了独占式获取同步锁，这个例子演示共享式\n要求：实现一把锁，至多三个（书上是两个，咱们变化下，哈哈）线程可以获得\n思路：使用四个状态，0-3， 表示剩余可以获得锁的线程数，0表示没有了，不能获取了，需要阻塞\npublic class Demo_03_02_2_TripleLock {\n    static class TripleLock implements Lock {\n\n        static private class Sync extends AbstractQueuedSynchronizer {\n            public Sync() {\n                super();\n                setState(3);\n            }\n\n            @Override\n            protected int tryAcquireShared(int arg) {\n                for (; ; ) {\n                    int currentState = getState();\n                    int newState = currentState - arg;\n                    if (newState = 3) {\n                        throw new IllegalStateException();\n                    }\n                    int newState = currentState + arg;\n                    if (compareAndSetState(currentState, newState)) {\n                        return true;\n                    }\n                }\n            }\n\n            @Override\n            protected boolean isHeldExclusively() {\n                return getState() = 0;\n        }\n\n        @Override\n        public boolean tryLock(long time, TimeUnit unit) throws InterruptedException {\n            return sync.tryAcquireSharedNanos(1, unit.toNanos(time));\n        }\n\n        @Override\n        public void unlock() {\n            sync.releaseShared(1);\n        }\n\n        @Override\n        public Condition newCondition() {\n            // 暂时不用condition,直接返回null\n            return null;\n        }\n\n    }\n\n    public static void main(String[] args) {\n        TripleLock tripleLock = new TripleLock();\n        // 这个测试例子，发现0-9一下都启动了，但是每一批都只有三个线程在执行，因为只有三个线程能拿到锁\n        // 三个有一个执行完了，后边的才能拿到锁\n        // 证明写的没问题\n        for (int i = 0; i  {\n                tripleLock.lock();\n\n                try {\n                    for (int j = 0; j \n小结\nAQS写太多了，贴了不少代码，但是回头看，几句话就能概括AQS。\n\nAQS是同步状态管理的工具\n可以通过重写他的一些方法制定自己的规则\n获取同步状态失败时会构建一个节点放到同步队列，然后自旋获取同步状态， 当同步队列的首节点释放时就通知他的后继节点尝试获取同步状态，获取成功就把自己这只为首节点\n共享和独占获取同步状态的区别其实是看你自己定义的规则是否允许几个线程同时获得同步状态\n超时获取，就是会根据你给的超时时间算一个deadline,每次自旋都检查是否超出了deadline，超出了直接获取失败，返回false\n\n"},"第03章-锁/03-ReentrantLock.html":{"url":"第03章-锁/03-ReentrantLock.html","title":"03-ReentrantLock","keywords":"","body":"ReentrantLock\n就是支持重进入的锁，它表示该锁能够支持一个线程对资源的重复加锁。除此之外，该锁的还支持获取锁时的公平和非公平性选择。\n原理\n可重入原理\n\n获取的时候如果state==0，那么正常获取，同时记录拥有同步状态的是当前线程，cas更新状态为1；如果state!=0,就要看拥有同步状态的线程是不是和当前线程一样，一样的话，获取成功，同时cas对state+1，不一样则进入同步队列里边自旋阻塞\n释放：释放的时候state-1, 如果减到了0，表示释放成功了，否则没有释放成功\n\n公平与非公平\n公平就是先尝试获取锁的线程会先得到多，非公平则是去竞争锁，默认是非公平的锁\n公平的锁多一次判断，导致性能损失，可以避免饥饿\n非公平的性能会更高，但是可能会产生饥饿\n实现方面非公平和公平的区别就tryAcquire方法不一样\n公平的相比于非公平的会多判断一个 !hasQueuedPredecessors()，hasQueuedPredecessors是判断当前节点是否有前驱节点，如果有，证明有比当前节点等待时间长的节点，所以此时失败，返回false，继续等\n// 同步队列为空，或者当前节点是头节点 返回false， 返回false，tryAcquire才可能返回true，保证了先来后到\npublic final boolean hasQueuedPredecessors() {\n    Node t = tail; // Read fields in reverse initialization order\n    Node h = head;\n    Node s;\n    return h != t &&\n        ((s = h.next) == null || s.thread != Thread.currentThread());\n}\n\n源码\n源码不多，直接贴出来\npublic class ReentrantLock implements Lock, java.io.Serializable {\n    private static final long serialVersionUID = 7373984872572414699L;\n    private final Sync sync;\n\n    // 跟我们使用AQS一样，也是继承他然后定义一些自己的规则\n    abstract static class Sync extends AbstractQueuedSynchronizer {\n        private static final long serialVersionUID = -5179523762034025860L;\n\n        abstract void lock();\n\n        final boolean nonfairTryAcquire(int acquires) {\n            final Thread current = Thread.currentThread();\n            int c = getState();\n            // 状态是0表示没有被获取，进行CAS并在CAS成功时返回true\n            if (c == 0) {\n                if (compareAndSetState(0, acquires)) {\n                    // 这个是公平性的保证，他记录了谁获取到同步状态\n                    setExclusiveOwnerThread(current);\n                    return true;\n                }\n            }\n            else if (current == getExclusiveOwnerThread()) {\n                // 有线程获取了锁，这个线程是自己\n                int nextc = c + acquires;\n                // 很严谨\n                if (nextc  getQueuedThreads() {\n        return sync.getQueuedThreads();\n    }\n\n    public boolean hasWaiters(Condition condition) {\n        if (condition == null)\n            throw new NullPointerException();\n        if (!(condition instanceof AbstractQueuedSynchronizer.ConditionObject))\n            throw new IllegalArgumentException(\"not owner\");\n        return sync.hasWaiters((AbstractQueuedSynchronizer.ConditionObject)condition);\n    }\n    public int getWaitQueueLength(Condition condition) {\n        if (condition == null)\n            throw new NullPointerException();\n        if (!(condition instanceof AbstractQueuedSynchronizer.ConditionObject))\n            throw new IllegalArgumentException(\"not owner\");\n        return sync.getWaitQueueLength((AbstractQueuedSynchronizer.ConditionObject)condition);\n    }\n\n    protected Collection getWaitingThreads(Condition condition) {\n        if (condition == null)\n            throw new NullPointerException();\n        if (!(condition instanceof AbstractQueuedSynchronizer.ConditionObject))\n            throw new IllegalArgumentException(\"not owner\");\n        return sync.getWaitingThreads((AbstractQueuedSynchronizer.ConditionObject)condition);\n    }\n    public String toString() {\n        Thread o = sync.getOwner();\n        return super.toString() + ((o == null) ?\n                                   \"[Unlocked]\" :\n                                   \"[Locked by thread \" + o.getName() + \"]\");\n    }\n}\n\n"},"第03章-锁/04-ReentrantReadWriteLock.html":{"url":"第03章-锁/04-ReentrantReadWriteLock.html","title":"04-ReentrantReadWriteLock","keywords":"","body":"ReentrantReadWriteLock\n\n读写锁在同一时刻允许多个线程访问\n当一个写线程访问时，所有其他线程阻塞\n当一个读线程访问时，其他读线程不会被阻塞\n读写锁维护了一对锁，一个读锁和一个写锁，通过分离读锁和写锁，使得并发性相比一般的排他锁有了很大提升。\n在读多于写的情况下，读写锁能够提供比排它锁更好的并发性和吞吐量\n\n特性\n\n支持公平锁与非公平锁\n可重入\n支持锁降级：遵循获取写锁、获取读锁再释放写锁的次序，写锁能够降级为读锁\n\n核心API\n\nReentrantReadWriteLock.ReadLock  readLock()： 获取读锁\nReentrantReadWriteLock.WriteLock writeLock()： 获取写锁\nint getReadLockCount()：返回当前读锁被获取到的次数，与线程数无关，同一个线程获取n次 返回n\nint getReadHoldCount()：返回当前线程获取读锁的次数\nboolean isWriteLocked()：判断读锁是否被获取了\nint getWriteHoldCount()：获取当前写锁被获取的次数\n\n原理\n读写状态的设计\n读写锁有两个锁，而且他们是有关系的，显然是用一个AQS，但是一个AQS只有一个state。\n为了用一个state表示两种锁的状态就需要对状态拆分，int是32位，所以拆成两个部分，高16位标识读状态，低16位标识写状态。\n在设置或者获取状态时需要做一些位运算\n写锁的获取与释放\n写锁是一个支持重进入的排它锁。若写状态为0且读状态为0，直接获取写锁；若写状态大于0，看获取同步状态的线程是不是当前线程，是则写状态+1，否则，构建节点进入同步队列，自旋阻塞。\n写锁的释放与ReentrantLock的释放过程基本类似，每次释放写状态-1，当写状态为0时表示写锁已被释放，唤醒同步队列里的线程，同时前次写线程的修改对后续读写线程可见。\nfinal boolean tryWriteLock() {\n    Thread current = Thread.currentThread();\n    int c = getState();\n    if (c != 0) {\n        int w = exclusiveCount(c); // c与0x0000FFFF求与\n        // c！=0但是低16位为0表示有人拿了读锁，有人拿了读锁是不能获取写锁的\n        if (w == 0 || current != getExclusiveOwnerThread())\n            return false;\n        // MAX_COUNT是0xffff, 因为写状态是只有16位的\n        if (w == MAX_COUNT)\n            throw new Error(\"Maximum lock count exceeded\");\n    }\n    if (!compareAndSetState(c, c + 1))\n        return false;\n    setExclusiveOwnerThread(current);\n    return true;\n}\n// 这没啥好说的\nprotected final boolean tryRelease(int releases) {\n    if (!isHeldExclusively())\n        throw new IllegalMonitorStateException();\n    int nextc = getState() - releases;\n    boolean free = exclusiveCount(nextc) == 0;\n    if (free)\n        setExclusiveOwnerThread(null);\n    setState(nextc);\n    return free;\n}\n\n可以思考下为什么有人拿了读锁不能获取写锁\n读锁的获取与释放\n读锁是一个支持重进入的共享锁，它能够被多个线程同时获取，写状态位0时总能获取，写状态不为0，不会获取，获取成功读状态就+1。\n释放的时候呢就是读状态-1，减到0就是读锁释放了。\n当然这里边可能会涉及记录哪些线程获取了读锁，我也没细看，感觉没什么难度。\n锁降级\n锁降级是指把持住（当前拥有的）写锁，再获取到读锁，随后释放（先前拥有的）写锁的过程。\n直接搬书上的一个例子\nclass Process {\n    private ReentrantReadWriteLock reentrantReadWriteLock = new ReentrantReadWriteLock();\n    private ReentrantReadWriteLock.ReadLock readLock = reentrantReadWriteLock.readLock();\n    private ReentrantReadWriteLock.WriteLock writeLock = reentrantReadWriteLock.writeLock();\n    private boolean isUpdate = false;\n    private LinkedList linkedList = new LinkedList<>();\n\n    public void processData() {\n        readLock.lock();\n        if (!isUpdate) {\n            // 必须先释放读书\n            readLock.unlock();\n            writeLock.lock();\n            try {\n                if (!isUpdate) {\n                    // 模拟生产数据\n                    for (int i = 0; i  {\n                process.processData();\n            }).start();\n        }\n    }\n}\n\n根据锁降级还是比较难理解的，为啥要有这个东西，书上原文\n\n主要是为了保证数据的可见性，如果当前线程不获取读锁而是直接释放写锁， 假设此刻另一个线程（记作线程T）获取了写锁并修改了数据，那么当前线程无法感知线程T的数据更新。如果当前线程获取读锁，即遵循锁降级的步骤，则线程T将会被阻塞，直到当前线程使用数据并释放读锁之后，线程T才能获取写锁进行数据更新。\n\n假设1不加读锁的话，线程A执行到2这个位置，写锁已经释放了，读锁也没有，所可能恰好此时有别的线程（线程B）获取到了写锁，又修改了数据，此时线程A或的数据还是之前的，这就是他没有感知到线程B对数据的更新。\n碎碎念\n突然想到一个面试题，读写锁中读锁之多可以被多少个线程获取？写锁呢？这个是我自己想到的题。感觉能比较好的考察对读写锁原理的理解。\n"},"第03章-锁/05-LockSupport.html":{"url":"第03章-锁/05-LockSupport.html","title":"05-LockSupport","keywords":"","body":"LockSupport\n去AQS里面搜LockSupport，能出来一堆。LockSupport定义了一组的公共静态方法，这些方法提供了最基本的线程阻塞和唤醒功能，而LockSupport也成为构建同步组件的基础工具。\n回顾之前的线程的生命周期，我们有能力进Block(阻塞)状态的。但是我们会发现他是需要synchronized的，所以不用synchronized想阻塞线程就没招了。我理解LockSupport应该就是在这样的复杂背景下荣耀登场的吧。\n还有更狠的，sync 要用notify notifyAll唤醒，但是notify notifyAll不支持指定具体唤醒哪个线程，阻塞也只能阻塞当前线程，不能阻塞别人。所以说sync虽好，但是太死板了。\nAPI\npublic static void unpark(Thread thread)\npublic static void park()\npublic static void park(Object blocker)\npublic static void parkNanos(Object blocker, long nanos)\npublic static void parkNanos(long nanos)\npublic static void parkUntil(long deadline)\npublic static void parkUntil(Object blocker, long deadline)\n\n阻塞的姿势比较多，唤醒只有一种姿势。\nbroker表示阻塞对象，多用于系统监控可问题排查，书上说的，我也不知道\n带时间的阻塞有两种，一种是传一个相对时间，表示要阻塞多久；另一种是一个绝对时间，阻塞到啥时候\n关于这些API的使用姿势感觉可以直接看AQS源码就好了，里边应该不少的。大雄不看了，用到再说，知道有这么个东西\n"},"第03章-锁/06-Condition.html":{"url":"第03章-锁/06-Condition.html","title":"06-Condition","keywords":"","body":"Condition\n在第二章第5节已经说了Conditon, 当时用Condition做了一个有界队列。\nCondition是Lock的附属物，Condition定义了等待/通知两种类型的方法，当前线程调用这些方法时，需要提前获取到Condition对象关联的锁。\n一个锁可以搞多个Condition\nCondition的API\npublic interface Condition {\n    /**\n     * 让当前线程进入等待状态直到被通知或者被中断，当前线程重新进入运行状态且从await方法返回的情况如下\n     * 1. 其他线程调用了该Condition的signal 或signalAll\n     * 2. 其他线程调用interrupt中断了当前线程\n     * @throws InterruptedException\n     */\n    void await() throws InterruptedException;\n    /**\n     * 等价上面那个\n     * @param time\n     * @param unit\n     * @return\n     * @throws InterruptedException\n     */\n    boolean await(long time, TimeUnit unit) throws InterruptedException;\n    /**\n     * 指定到某个时间还没被通知且没被中断直接返回，提前被通知了返回true，否则false\n     * @param deadline\n     * @return\n     * @throws InterruptedException\n     */\n    boolean awaitUntil(Date deadline) throws InterruptedException;\n    /**\n     * 唤醒等待在Condition上的一个线程\n     */\n    void signal();\n    /**\n     * 唤醒所有等待在Condition上的线程\n     */\n    void signalAll();\n}\n\n基本原理\n在ReentrantLock里边搜newCondition\n// 我们拿Condition都是通过Lock的newCondition接口拿的\n// 但是我们发现他是掉的AQS的newCondition方法\npublic Condition newCondition() {\n    return sync.newCondition();\n}\n\n// 在找到AQS的newCondition，发现这个是自己写的\nfinal ConditionObject newCondition() {\n    return new ConditionObject();\n}\n\n可见ConditionObject应该是实现了Condition接口，去看一眼\n发现ConditionObject是AQS的内部类\n等待队列\n去看ConditionObject， 会发现里边也和AQS同步队列类似，有一个队列结构，队列节点居然和之前说的同步队列的节点是一样的，世间真奇妙\nConditionObject里边有两个重要成员变量firstWaiter，lastWaiter，对比AQS，AQS有head和tail，这个是双向队列的模板，太巧了\n当前线程调用Condition.await()方法，将会以当前线程构造节点，并将节点从尾部加入等待队列。\npublic final void await() throws InterruptedException {\n    if (Thread.interrupted())\n        throw new InterruptedException();\n    // 构建了一个Node放到等待队列的队尾\n    Node node = addConditionWaiter();\n    // 我没仔细看，这里大概的意思是会把这个节点从同步队列移除，并且释放锁\n    //   因为调用await是获取锁的\n    int savedState = fullyRelease(node);\n    int interruptMode = 0;\n    while (!isOnSyncQueue(node)) {\n        LockSupport.park(this);\n        if ((interruptMode = checkInterruptWhileWaiting(node)) != 0)\n            break;\n    }\n    if (acquireQueued(node, savedState) && interruptMode != THROW_IE)\n        interruptMode = REINTERRUPT;\n    if (node.nextWaiter != null) // clean up if cancelled\n        unlinkCancelledWaiters();\n    if (interruptMode != 0)\n        reportInterruptAfterWait(interruptMode);\n}\n\n简单理解，await就是根据当前线程信息构建Node节点，加入等待队列，同时由于调用await的一定是获取锁的，所以我们要移除当前线程在同步队列的那个节点，其实就是首节点，首节点要变，首节点的线程就要释放锁，其实就是当前线程会释放锁。\n上边这段描述是我看简单搂了一眼源码写的，发现竟然和书上意思一样，开心~\n接下来就是看signal了，感觉能猜到他是怎么做的了\npublic final void signal() {\n    // 必须要获取锁\n    if (!isHeldExclusively())\n        throw new IllegalMonitorStateException();\n    Node first = firstWaiter;\n    if (first != null)\n        doSignal(first);\n}\nprivate void doSignal(Node first) {\n    do {\n        if ( (firstWaiter = first.nextWaiter) == null)\n            lastWaiter = null;\n        first.nextWaiter = null;\n    } while (!transferForSignal(first) &&\n                (first = firstWaiter) != null);\n}\nfinal boolean transferForSignal(Node node) {\n    if (!compareAndSetWaitStatus(node, Node.CONDITION, 0))\n        return false;\n    // enq前面分析过，就是同步队列的入队\n    Node p = enq(node);\n    int ws = p.waitStatus;\n    if (ws > 0 || !compareAndSetWaitStatus(p, ws, Node.SIGNAL))\n        // 很关键，唤醒\n        LockSupport.unpark(node.thread);\n    return true;\n}\n``\n\n做了几个事，等待队列首节点出队，将这个首节点入队到同步队列，唤醒这个首节点的线程，唤醒之后就会去竞争锁（或者叫同步状态）了\n\nawait方法里面的while (!isOnSyncQueue(node)), 将会不满足条件了，所以await方法会返回\n\n可以发现调用了signal 不是await的地方会立即执行的，需要先抢到锁才会继续执行\n\nsignalAll就是把等待队列中的所有节点都转移到同步队列，并唤醒\n\n```java\nprivate void doSignalAll(Node first) {\n    lastWaiter = firstWaiter = null;\n    do {\n        Node next = first.nextWaiter;\n        first.nextWaiter = null;\n        transferForSignal(first);\n        first = next;\n    } while (first != null);\n}\n\n"},"第04章-并发容器/":{"url":"第04章-并发容器/","title":"第04章-并发容器","keywords":"","body":"并发容器\njava.util包下提供的容器类是非线程安全的，并发共享访问会出现问题。java.util.concurrent包下提供了一些线程安全的容器类。\n并发容器的代码大雄看的很少，只是简单的把书上的内容提炼一下，有疑问的地方找一些资料作为补充。\n"},"第04章-并发容器/01-ConcurrentHashMap.html":{"url":"第04章-并发容器/01-ConcurrentHashMap.html","title":"01-ConcurrentHashMap","keywords":"","body":"ConcurrentHashMap\nConcurrentHashMap是线程安全且高效的HashMap\n为什么使用\nHashMap线程不安全。\n在多线程环境下，使用HashMap进行put操作会引起死循环，导致CPU利用率接近100%，所以在并发情况下不能使用HashMap\nHashTable效率低下\nHashTable是util包下边的,去源码搜一个get，一个put，发现他的线程安全使用synchronized实现的，这种就是有一个线程在put时，大家都要等，有一个线程在get时也是这样。因此效率低。\npublic synchronized V put(K key, V value)\npublic synchronized V get(Object key)\n\nConcurrentHashMap效率高\n使用分段锁技术提高并发访问效率。\n首先将数据分成一段一段地存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据的时候，其他段的数据也能被其他线程访问。\n原理\n结构\n\nConcurrentHashMap是由Segment数组结构和HashEntry数组结构组成\nSegment是一种可重入锁\nHashEntry用于存储键值对数据\n一个ConcurrentHashMap里包含一个Segment数组。Segment的结构和HashMap类似，是一种数组和链表结构。\n一个Segment里包含一个HashEntry数组\n每个Segment守护着一个HashEntry数组里的元素\n当对HashEntry数组的数据进行修改时，必须首先获得与它对应的Segment锁\n这样的一个结构是我们访问时只用锁住一部分而不用锁住整个HashMap了\n\n\n感觉ConcurrentHashMap了解到这里已经够了，搞清楚他高效的原因就时用了分段锁\n然后就是put和get时都需要先拿到Segment,所以涉及如何定位Segment的问题，按书上说的是对key做再散列。\n"},"第04章-并发容器/02-ConcurrentLinkedQueue.html":{"url":"第04章-并发容器/02-ConcurrentLinkedQueue.html","title":"02-ConcurrentLinkedQueue","keywords":"","body":"ConcurrentLinkedQueue\n基于链表的并发队列，确实像书上说的那样，要是我去做的话估计一个synchronized完事，但是jdk里边是用CAS做。\n原理\n入队\npublic boolean offer(E e) {\n    checkNotNull(e);\n    // 构建一个节点\n    final Node newNode = new Node(e);\n\n    for (Node t = tail, p = t;;) {\n        Node q = p.next; // tail的next\n        if (q == null) {    // 【第一个大if】 tail.next == null\n            // 其实也就是tail就是最后一个节点\n            if (p.casNext(null, newNode)) { // cas设置tail.next=加进来的节点\n                // 【A】\n                if (p != t)\n                    casTail(t, newNode);  // Failure is OK. 这个可以思考下\n                //【B】\n                return true;\n            }\n        }\n        else if (p == q)    // 【第二个大if】\n            // 【C】\n            p = (t != (t = tail)) ? t : head;\n        else    // 【大else】\n            // 【D】\n            p = (p != t && t != (t = tail)) ? t : q;\n    }\n}\n\n这段代码感觉很难理解，我是画图来理解的，关键是要明白到底是两个线程怎样的运行次序才会出现代码中的if，我在代码中标注了几个位置，试图用文字来阐述我的理解\n假设队列已经有三个节点了，此时没有任何线程在操作队列。\n情况一：\n线程1，尝试入队新节点（新节点1号），q是tail的next，肯定==nul, 所以，走到了【A】位置，暂停（假设线程1现在就卡在这里了），理一下此时的状态，p和t还有tail都是指向第三个节点的，第三个节点的next节点是指向新节点1号的\n\n与此同时，线程2开始尝试插入节点（新节点2号），进入for，显然，此时的tail,t,p都是指向第三个节点的，注意此时的q，q是第三个节点的next节点，所以q==新节点1号，不满足【第一个大if】，而且p是指向第三个节点的，也不满足【第二个大if】，所以进入到【大else】，所以执行这个三元操作，看一个条件p!=t? p和t都是执行第三个节点的，他们相等，短路操作，后边不走了，三元条件是false，所以p指向q，暂停（假设线程2卡在这里了），梳理一下此时的状态：tail和t都是指向第三个节点，p指向q，q指向新节点1号。\n\n线程1继续执行，p!=t?发现是相等的，都是指向第三个节点，不进入if，返回true，入队成功，此时tail是指向第三个节点，也就是倒数第二个节点，而不是最后一个节点。\n\n线程2继续执行，再次进到for循环，q=p.next, 而前面说了p已经指向了新节点1号，新节点1号的next是null,所以q==null,进入【第一个大if】，然后cas设置p的next为新节点2号，也就是新节点1号.next=新节点2号，然后p!=t?发现p是指向新节点1号的，t还是执行3号节点的，所以if成立，cas将tail指向新节点2号，返回true。\n本来想着写一个情况二、三、四把所有分支走完，但是感觉没必要了，感觉类似这样梳理就能清楚了，就是两个线程并发执行的一个重现，想不明白就可以画图，还是挺有趣的，要写出这样的代码感觉不太难，但是细节需要抠的很仔细。\n注意一下p、t、q、newNode这些不是线程共享的，只有tail还有队列里的那些东西才是共享的\n我们会发现，一次入队后，tail并不一定是指向最后一个节点的，注释也说了，改变tail的cas失败了都是ok的，Failure is OK，所以最后一个节点并不是就是tail指的节点，得验证tail一直往下找才行\n又看了下书，说为啥不是每次入队都直接更新tail呢，是为了减少CAS操作，因为更新tail是要CAS的，CAS是耗CPU的。直接去CAS更新也是没问题的。\n出队\n不说了，直接引用书上的话。\n\n并不是每次出队时都更新head节点，当head节点里有元素时，直接弹出head节点里的元素，而不会更新head节点。只有当head节点里没有元素时，出队操作才会更新head节点。这种做法也是通过hops变量来减少使用CAS更新head节点的消耗，从而提高出队效率。\n\n和入队差不多，出队了head指向的不一定是第一个节点\n"},"第04章-并发容器/03-ConcurrentLinkedDeque.html":{"url":"第04章-并发容器/03-ConcurrentLinkedDeque.html","title":"03-ConcurrentLinkedDeque","keywords":"","body":"ConcurrentLinkedDeque\n基于双向链表实现的双向并发队列，可以分别对头尾进行操作，因此除了先进先出(FIFO)，也可以先进后出（FILO），当然先进后出的话应该叫它栈了。\n这个我没看，感觉就是不必ConcurrentLinkedQueue多了两种情况，从队头入队，从队尾出队。有空再看看补充下\nTODO: 补充实现原理\n"},"第04章-并发容器/04-两个基于跳表的容器.html":{"url":"第04章-并发容器/04-两个基于跳表的容器.html","title":"04-两个基于跳表的容器","keywords":"","body":"两个基于跳表的容器\n说实话，我已经忘了跳表了，回头复习下补充。TODO: 补充\n这里贴一下网上的一些描述\nConcurrentSkipListMap\n基于跳表的并发Map\nSkipList即跳表，跳表是一种空间换时间的数据结构，通过冗余数据，将链表一层一层索引，达到类似二分查找的效果。\nConcurrentSkipListSet\n基于跳表的并发Set\n参考资料\n\n14个Java并发容器，你用过几个？\n\n"},"第04章-并发容器/05-CopyOnWrite系列.html":{"url":"第04章-并发容器/05-CopyOnWrite系列.html","title":"05-CopyOnWrite系列","keywords":"","body":"CopyOnWrite系列\n什么是CopyOnWrite\nCopyOnWrite就是写时复制，就是在写操作时，不是直接操作原数据容器，而是先复制一份，在复制的这一份里写，写完再将引用指向复制的这一份。\n这样就能保证写的过程中其他线程可以继续读旧的容器里的数据，他们不会变，写完之后再有线程读就可以读到最新的了。\n基于CopyOnWrite的容器\n\nCopyOnWriteArrayList\nCopyOnWriteArraySet\n\n原理\nCopyOnWriteArrayList\nprivate transient volatile Object[] array;\n\nCopyOnWriteArrayList里边核心就是维护这样的一个数组，注意这里加了volatile\n先看add\npublic boolean add(E e) {\n    final ReentrantLock lock = this.lock;\n    lock.lock();\n    try {\n        Object[] elements = getArray();\n        int len = elements.length;\n        Object[] newElements = Arrays.copyOf(elements, len + 1);\n        newElements[len] = e;\n        setArray(newElements);\n        return true;\n    } finally {\n        lock.unlock();\n    }\n}\n\nadd的话先加锁，如果不加锁，可能拷贝几份出来，而且会有线程安全问题。\n先复制了一个newElements出来，然后改newElements,最后是把容器里维护的array指向newElements\n我们不是加了volatile吗，volatile就能保证内存可见性了，但是为什么要复制一份改变引用呢，请注意volatile并不能保证数组里元素变化的可见性，只能保证引用变化的可见性\n再瞅瞅get\npublic E get(int index) {\n    return get(getArray(), index);\n}\n\n很简单，不加锁，不cas啥的，直接读。\nCopyOnWriteArraySet\n原理和CopyOnWriteArrayList一样，区别就是写的时候会判断存不存在，存在直接返回false，不存在才会复制->修改数据->改引用\nCopyOnWrite的好处\n对读不加锁，可以提高读的效率，适用于读多写少的情况\nCopyOnWrite的缺点\n\n浪费内存。因为每次写都会拷贝一份\n实时性不高，读线程可能会用老数据\n影响GC。写的时候拷贝一份，老的需要被GC掉。\n\nCopyOnWrite于ReentrantReadWriteLock的对比\n\n他们都适用读多写少的情况\n\n读的效率CopyOnWrite会更高。因为ReentrantReadWriteLock只要有一个线程获得写锁，所有线程都无法获得读锁，也就是读会被阻塞，但是CopyOnWrite不一样，不管有没有线程在写，他都能读\n\n他们写的效率是差不多的，写的时候都是需要获取独占锁的。\n\nCopyOnWrite读数据实时性要比ReentrantReadWriteLock差。因为当CopyOnWrite读到一批数据在消费时，恰好有别的线程修改了数据，此时读线程还是使用的老的数据；但是ReentrantReadWriteLock不一样，只要有人读，你就不能写，只要有人写，你就不能读\n\n\n从上边分析可以看出，我们选型的时候应该要优先CopyOnWrite, 因为他的效率高，如果对实时性要求特别高，不允许读线程读到老数据，那就用ReentrantReadWriteLock\n参考资料\n\n并发容器之CopyOnWriteArrayList\n\n\n"},"第05章-阻塞队列/":{"url":"第05章-阻塞队列/","title":"第05章-阻塞队列","keywords":"","body":"阻塞队列\n阻塞队列就是当队列满了仍然尝试去入队会被阻塞，当队列为空时尝试去出队取元素也会被阻塞的队列。\n阻塞队列常用于生产者消费者模型，生产者往队列丢数据，消费者从里面取数据。\njdk提供的阻塞队列有7个，如下所示。\n\n他们都是实现BlockingQueue接口，下面一一介绍。\n"},"第05章-阻塞队列/01-阻塞队列的通用操作.html":{"url":"第05章-阻塞队列/01-阻塞队列的通用操作.html","title":"01-阻塞队列的通用操作","keywords":"","body":"阻塞队列的通用操作\n阻塞队列都是实现BlockingQueue接口的，因此他们方法都是一样的\nAPI和不可用的处理方式\n当阻塞队列不可用时（向满的队列插入，从空队列取数据），提供了四种处理方式\n\n\n\n方法\n抛出异常\n返回特殊值\n一直阻塞\n超时退出\n\n\n\n\n插入\nboolean add(E e)\nboolean offer(E e)\nvoid put(E e) throws InterruptedException\nboolean offer(E e, long timeout, TimeUnit unit) throws InterruptedException\n\n\n移除\nvoid remove()\npoll()\nE take() throws InterruptedException\nE poll(long timeout, TimeUnit unit) throws InterruptedException\n\n\n查看\nelement()\npeek()\n不可用\n不可用\n\n\n\n抛出异常\n\n满了继续插入会抛出：IllegalStateException （\"Queue full\"）\n空了继续出队会抛出：NoSuchElementException\n\n返回特殊值\n\n满了继续插入会返回false\n空了继续出队会返回null\n\n一直阻塞\n\n满了继续插入会阻塞，直到有空位或被中断\n空了继续出队会阻塞，直到有元素或被中断\n\n超时退出\n也是会阻塞，但是达到一定时间还没成功就返回特殊值了\n"},"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html":{"url":"第05章-阻塞队列/02-各种阻塞队列的特点与应用.html","title":"02-各种阻塞队列的特点与应用","keywords":"","body":"各种阻塞队列的特点与应用\n一共有7个阻塞队列：\n\nArrayBlockingQueue：一个由数组结构组成的有界阻塞队列。\nLinkedBlockingQueue：一个由链表结构组成的有界阻塞队列。\nPriorityBlockingQueue：一个支持优先级排序的无界阻塞队列。\nDelayQueue：一个使用优先级队列实现的无界阻塞队列。\nSynchronousQueue：一个不存储元素的阻塞队列。\nLinkedTransferQueue：一个由链表结构组成的无界阻塞队列。\nLinkedBlockingDeque：一个由链表结构组成的双向阻塞队列。\n\nArrayBlockingQueue\n\n有界\n内部是用Object数组维护的\n默认非公平，可以在构造指定\n\npublic ArrayBlockingQueue(int capacity, boolean fair)\n\n公平性用ReentrantLock实现的，公平也会降低并发效率。\nLinkedBlockingQueue\n\n有界\n内部是链表维护\n默认最大长度是Integer.MAX_VALUE，可以在构造里面指定\n\n数组和链表实现的区别跟基础数据结构里边的数组和链表的区别一样，但是对队都是在首尾操作，感觉区别也不大\nPriorityBlockingQueue\n\n无界\n支持优先级\n可以实现元素的compareTo方法指定排序规则，也可以在构造时传入Comparator, 这和PriorityQueue是一样一样的\n\nDelayQueue\n\n无界\n支持延时获取元素\n对列元素要实现Delayed接口，指定多久才能获取元素，只有到期的元素才能出队\n\n使用场景\n\n缓存系统的设计：可以用DelayQueue保存缓存元素的有效期，使用一个线程循环查询DelayQueue，一旦能从DelayQueue中获取元素时，表示缓存有效期到了。\n定时任务调度：使用DelayQueue保存当天将会执行的任务和执行时间，一旦从DelayQueue中获取到任务就开始执行，比如TimerQueue就是使用DelayQueue实现的。\n\n我写了一个很垃圾的例子，搞个定时任务, 严格来讲并不是一个定时任务\nclass Schedule {\n    private DelayQueue delayQueue = new DelayQueue<>();\n    private Thread thread;\n    private boolean shoudRun = true;\n\n    public Schedule() {\n        thread = new Thread(() -> {\n            while (shoudRun) {\n                try {\n                    Task task = delayQueue.take();\n                    System.out.println(\"我开始处理任务了\" + task.getTaskName() + \"-时间=\" + new Date());\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    public void start() {\n        thread.start();\n    }\n\n    public void submit(Task task) {\n        delayQueue.put(task);\n    }\n\n    // 这样正确的终止线程\n    public void stop() {\n        shoudRun = false;\n    }\n}\n\nclass Task implements Delayed {\n    private AtomicInteger sequencer = new AtomicInteger(0);\n    private String taskName;\n    private int sequencerNumber = 0;\n    private long time;\n\n    public String getTaskName() {\n        return taskName;\n    }\n\n    public void setTaskName(String taskName) {\n        this.taskName = taskName;\n    }\n\n    public Task(String taskName, long second) {\n        this.sequencerNumber = sequencer.getAndIncrement();\n        this.taskName = taskName;\n        this.time = System.currentTimeMillis() + (second > 0 ? TimeUnit.SECONDS.toMillis(second) : 0);\n    }\n\n    @Override\n    public long getDelay(TimeUnit unit) {\n        //  0) {\n                return 1;\n            } else if (sequencerNumber \n这里最重要的点就是【欢迎关注微信公众号“大雄和你一起学编程”】， 呸呸呸，应该是时间，看秒的部分发现是符合预期的。\n总结下使用DelayQueue的步骤\n\n首先就是要定义你的队列元素，这个类需要实现Delayed接口，需要实现里边的两个方法\n\nlong getDelay(TimeUnit unit)\n\n\n这个表示，如果返回的值\n\npublic int compareTo(Delayed o)\n\n这个玩意儿是Comparable接口里面的，因为Delayed继承了Comparable\n他就是定义排序规则，在DelayQueue里边，我们一般喜欢把快要过期的、甚至已经过期的老元素放到前面，其实你也可以用Comparator接口，会更灵活\n然后你会发现我们的compareTo用了一个sequencerNumber，这个呢是个原子自增的，用于处理两个过期时间一样的任务如何排序的问题，我的规则是谁先创建谁排前面\n\n生产队列元素和消费队列元素，这和使用一个普通队列几乎没两样了\n\nSynchronousQueue\n\n无界，不存储元素\n每一个put操作必须等待一个take操作，否则不能继续添加元素，每一个take也必须等待一个put，因为没有元素\n支持公平与非公平\n非常适合传递性场景\n的吞吐量高于LinkedBlockingQueue和ArrayBlockingQueue\n\nLinkedTransferQueue\n\n无界\n链表\n多了tryTransfer和transfer方法\n\ntransfer方法\n\n如果当前有消费者正在等待接收元素（消费者使用take()方法或带时间限制的poll()方法时），transfer方法可以把生产者传入的元素立刻transfer（传输）给消费者。\n如果没有消费者在等待接收元素，transfer方法会将元素存放在队列的tail节点，并等到该元素被消费者消费了才返回\n\n(原文引用)\ntryTransfer方法\n\ntryTransfer方法是用来试探生产者传入的元素是否能直接传给消费者。如果没有消费者等待接收元素，则返回false。\n和transfer方法的区别是tryTransfer方法无论消费者是否接收，方法立即返回，而transfer方法是必须等到消费者消费了才返回。\n\n(原文引用)\nLinkedBlockingDeque\n\n有界，默认为Integer.MAX_VALUE\n链表\n双向\n\n他的特点就是从队首队尾插入都行，从队首队尾出队都行\n"},"第05章-阻塞队列/03-阻塞队列实现原理.html":{"url":"第05章-阻塞队列/03-阻塞队列实现原理.html","title":"03-阻塞队列实现原理","keywords":"","body":"阻塞队列实现原理\n大雄只看了ArrayBlockingQueue, 感觉应该是差不多的。如有错误，欢迎指出。\n一句话可以说明白，ArrayBlockingQueue是基于ReentrantLock及其Condition实现的。说到这里，你可能已经知道怎么搞了。\n看一下这个构造\npublic ArrayBlockingQueue(int capacity, boolean fair) {\n    if (capacity \n似曾相识的感觉，我们在第二章第5节实现的BoundList就是这么搞的\n看看put\npublic void put(E e) throws InterruptedException {\n    checkNotNull(e);\n    final ReentrantLock lock = this.lock;\n    lock.lockInterruptibly();\n    try {\n        // 这个while是必要的\n        while (count == items.length)\n            // 满了就放到notFull的等待队列\n            notFull.await();\n        enqueue(e);\n    } finally {\n        lock.unlock();\n    }\n}\n\nprivate void enqueue(E x) {\n    final Object[] items = this.items;\n    items[putIndex] = x;\n    // 这是个循环数组\n    if (++putIndex == items.length)\n        putIndex = 0;\n    count++;\n    // 通知等待的消费者，有元素可以消费了\n    notEmpty.signal();\n}\n\n看看take\npublic E take() throws InterruptedException {\n    final ReentrantLock lock = this.lock;\n    lock.lockInterruptibly();\n    try {\n        while (count == 0)\n            notEmpty.await();\n        return dequeue();\n    } finally {\n        lock.unlock();\n    }\n}\nprivate E dequeue() {\n    final Object[] items = this.items;\n    @SuppressWarnings(\"unchecked\")\n    E x = (E) items[takeIndex];\n    items[takeIndex] = null;\n    if (++takeIndex == items.length)\n        takeIndex = 0;\n    count--;\n    if (itrs != null)\n        itrs.elementDequeued();\n    notFull.signal();\n    return x;\n}\n// 就是做了一个put相反的操作\n\nDelayQueue\nDelayQueue是有他的特殊之处的,所以看一看\n看他的入队\npublic boolean offer(E e) {\n    final ReentrantLock lock = this.lock;\n    lock.lock();\n    try {\n        // 这个q是他内部维护的一个优先级队列，private final PriorityQueue q = new PriorityQueue();\n        // 可见他的排序是借助优先级队列做的\n        q.offer(e);\n        if (q.peek() == e) {\n            leader = null;\n            // 如果入队的元素排在了第一个，就通知等待着的消费者\n            // 这里也是用了Condition\n            available.signal();\n        }\n        return true;\n    } finally {\n        lock.unlock();\n    }\n}\n\n再看出队\npublic E take() throws InterruptedException {\n    final ReentrantLock lock = this.lock;\n    lock.lockInterruptibly();\n    try {\n        for (;;) {\n            E first = q.peek();\n            if (first == null)\n                // 没有元素的话，等待\n                available.await();\n            else {\n                long delay = first.getDelay(NANOSECONDS);\n\n                // \nSynchronousQueue\n这个初看了下，没太明白，后续再看看吧\nTODO: 待补充\n"},"第06章-线程池与Executor框架/":{"url":"第06章-线程池与Executor框架/","title":"第06章-线程池与Executor框架","keywords":"","body":"线程池与Executor框架\n与数据库连接类似，线程也是珍贵资源，线程的创建和销毁都会损失性能，所以和数据库链接池思路类似，我们也可以将线程放到一个池子里，用的时候去取，用完还回去，这个池子就是线程池。\n使用线程池能够\n\n降低资源消耗\n提高响应速度\n提高线程的可管理性\n\n"},"第06章-线程池与Executor框架/01-使用线程池.html":{"url":"第06章-线程池与Executor框架/01-使用线程池.html","title":"01-使用线程池","keywords":"","body":"使用线程池\n线程池的创建\n创建线程池直接new ThreadPoolExecutor这个类就好了\npublic ThreadPoolExecutor(int corePoolSize,\n                              int maximumPoolSize,\n                              long keepAliveTime,\n                              TimeUnit unit,\n                              BlockingQueue workQueue,\n                              ThreadFactory threadFactory,\n                              RejectedExecutionHandler handler)\n\n构造方法有几个重载，这个事参数最全的，如下分别介绍这些参数\n\ncorePoolSize: 核心线程的数量，当提交一个任务到线程池时，当线程数量小于corePoolSize时，进来新任务都会创建新的线程。如果调用了线程池的prestartAllCoreThreads()方法，线程池会提前创建并启动所有核心线程，而不是等到任务进来\nmaximumPoolSize：最大线程数量，如果队列满了，已有线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是，如果使用了无界的任务队列这个参数就没什么效果。\nkeepAliveTime： 线程池的工作线程空闲后，保持存活的时间。所以，如果任务很多，并且每个任务执行的时间比较短，可以调大时间，提高线程的利用率。\nunit： 线程保活时间单位\nworkQueue： 用于保存等待执行的任务的阻塞队列。可以选择以下几个阻塞队列。ArrayBlockingQueue，LinkedBlockingQueue，SynchronousQueue，PriorityBlockingQueue\nthreadFactory：用于设置创建线程的工厂，可以通过线程工厂给每个创建出来的线程设置更有意义的名字。要实现ThreadFactory接口\nhandler：拒绝策略，当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是AbortPolicy，表示无法处理新任务时抛出异常。jdk有几种默认策略，也可以自定义策略，默认策略如下\nAbortPolicy：直接抛出异常。\nCallerRunsPolicy：只用调用者所在线程来运行任务。\nDiscardOldestPolicy：丢弃队列里最近的一个任务，并执行当前任务。\nDiscardPolicy：不处理，丢弃掉。\n\n\n\n这一段就是从书上借鉴（抄书不叫抄，叫借鉴）过来的，来个demo可能会更加清楚一些\nThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(2, 2, 10, TimeUnit.SECONDS, new ArrayBlockingQueue<>(3), new ThreadFactory() {\n    @Override\n    public Thread newThread(Runnable r) {\n        Thread thread = new Thread(r);\n        thread.setName(\"欢迎关注微信公众号“大雄和你一起学编程”\" + atomicInteger.getAndIncrement());\n        return thread;\n    }\n}, new RejectedExecutionHandler() {\n    @Override\n    public void rejectedExecution(Runnable r, ThreadPoolExecutor executor) {\n        System.out.println(\"任务被拒绝了哦，欢迎关注微信公众号“大雄和你一起学编程”\");\n    }\n});\n\n这个例子里边，核心线程数2，最大线程数2， 保活时间10秒，工作队列长度位3的ArrayBlokingQueue, 线程工厂里给线程起了一个好听的名字 “欢迎关注微信公众号“大雄和你一起学编程”数字”，拒绝测试时打印一段非常有意思的一段话 \"任务被拒绝了哦，欢迎关注微信公众号“大雄和你一起学编程”\"\n向线程池提交任务\n方式1：excute\nexecute()方法用于提交不需要返回值的任务，所以无法判断任务是否被线程池执行成功。\n接着上边的例子\nfor (int i = 0; i  {\n        try {\n            Thread.sleep(1000);\n            System.out.println(\"任务\" + finalI + \"执行完了，欢迎关注大雄和你一起学编程\");\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    });\n}\n// 运行的结果如下\n\n// 任务被拒绝了哦，欢迎关注微信公众号“大雄和你一起学编程”\n// 任务1执行完了，欢迎关注大雄和你一起学编程\n// 任务0执行完了，欢迎关注大雄和你一起学编程\n// 任务2执行完了，欢迎关注大雄和你一起学编程\n// 任务3执行完了，欢迎关注大雄和你一起学编程\n// 任务4执行完了，欢迎关注大雄和你一起学编程\n\n方式2：submit\n\nsubmit()方法用于提交需要返回值的任务\n\n线程池会返回一个future类型的对象，通过这个future对象可以判断任务是否执行成功，并且可以通过future的get()方法来获取返回值，get()方法会阻塞当前线程直到任务完成\n\n使用get（longtimeout，TimeUnit unit）方法则会阻塞当前线程一段时间后立即返回，这时候有可能任务没有执行完\n\n\n既然是由返回值，那么任务就要用Callable了\nfor (int i = 0; i  future = threadPoolExecutor.submit(new Callable() {\n        @Override\n        public Integer call() throws Exception {\n            int sum = 0;\n            for (int j = 0; j \n关闭线程池\n调用关闭线程池方法后\n遍历线程池中的工作线程，然后逐个调用线程的interrupt方法来中断线程，所以无法响应中断的任务可能永远无法终止\nshutdown\nshutdown只是将线程池的状态设置成SHUTDOWN状态，然后中断所有没有正在执行任务的线程\nshutdownNow\nshutdownNow首先将线程池的状态设置成STOP，然后尝试停止所有的正在执行或暂停任务的线程，并返回等待执行任务的列表\n\n调用任意一个isShutdown方法就会返回true\n当所有的任务都已关闭后，才表示线程池关闭成功，这时调用isTerminaed方法会返回true\n创建线程池的参数怎么给\n前面的例子中是拍脑袋给的参数，说要2个核心线程啥的，但是应该如何正确决策呢\ncpu核心数通过Runtime.getRuntime().availableProcessors()获得\n按任务类型考虑\ncpu密集型：核心线程数=核心数+1\nio密集型：核心线程数=2*核心数\n混合型的任务：如果可以拆分，将其拆分成一个CPU密集型任务和一个IO密集型任务，只要这两个任务执行的时间相差不是太大，那么分解后执行的吞吐量将高于串行执行的吞吐量\n按优先级考虑\n优先级不同的任务可以使用优先级队列PriorityBlockingQueue来处理。它可以让优先级高的任务先执行。\n一些原则\n\n执行时间不同的任务可以交给不同规模线程池处理\n\n依赖数据库连接池的任务：线程数可以适当给多一些\n\n建议使用有界队列\n\n\n"},"第06章-线程池与Executor框架/02-线程池原理.html":{"url":"第06章-线程池与Executor框架/02-线程池原理.html","title":"02-线程池原理","keywords":"","body":"线程池原理\n线程池处理流程\n\n原理解析\n互联网公司与线程池的关系\n这里用一个比喻来描述一下线程池，中间有一些名词你可能不是太清楚，后边源码解析的部分会讲到。\n你可以把线程池看作是一个研发部门，研发部门有很多程序员（Worker), 他们在一个大办公室里（HashSet workers)。程序员干不完的需求（Runnable/Callable)放在需求池（workQueue）里排队。每个研发部都配置有骨干程序员数量（corePoolSize）和最大能容纳的程序员数量（maximumPoolSize）。具体要做的任务就是产品的需求。\nnew 一个线程池相当于创建了一个研发部，创建研发部时需要指定骨干程序员数量，最大能容纳的程序员数量，需求池用哪种（BlockingQueue）,如果忙不过来的需求怎么给产品回复（拒绝策略）等等内容。刚开始这个研发部一个程序员也没有。\n当产品给这个研发部提一个需求时（当然肯定不会只提一个，他们会不断的提需求。这里以提一个需求为例）\n首先会看骨干程序员招聘满了没。\n如果没满，会招聘一个骨干程序员，招聘进来就让他不停的工作（很残酷啊），干完刚派过来的任务他会主动在需求池找下一个需求来做（好员工），如果需求池没有需求了，他就停止工作了，然后研发部会把他裁掉，如果裁掉后发现骨干程序员数量不够了，就会再招聘一个程序员。裁掉后，要是骨干程序员数量还够就不招聘了。\n如果骨干程序员数量满了，就看需求池满没满，如果需求池没满，就把需求扔进需求池里；如果需求池满了，就看程序员数量有没有达到上限，如果达到了，就对产品说，这个需求我们做不了，没资源；如果没达到，就招聘一个程序员，招聘进来就让他不停的工作，干完刚派过来的需求他会主动到需求池找下一个任务来做，如果需求池没有任务了，他就停止工作了，然后研发部会把他裁掉，如果裁掉后发现骨干程序员数量不够了，就会再招聘一个程序员。裁掉后，要是骨干程序员数量还够就不招聘了。\n源码解析\n首先是worker（程序员）\nWorker被装在一个HashSet（workers）里边， 他是用来执行任务的，他们的职责就是不断的从workQueue里边取任务，然后执行。当workQueue（需求池）里边拿不到任务，或者线程池达到特定状态，worker就会从workers里边移走（被裁）。\n下边是Worker源码，移除了非关键的东西\nprivate final class Worker\n    extends AbstractQueuedSynchronizer\n    implements Runnable\n{\n\n    // 标识这个任务是在哪个线程运行\n    final Thread thread;\n    Runnable firstTask;\n    // 完成了几个任务\n    volatile long completedTasks;\n\n    Worker(Runnable firstTask) {\n        // 阻止中断，知道runWorker执行\n        setState(-1); // inhibit interrupts until runWorker\n        this.firstTask = firstTask;\n        // 直接用你提供的线程工厂搞个线程出来\n        this.thread = getThreadFactory().newThread(this);\n    }\n\n    // 调用ThreadPoolExecutor里边的runWorker方法\n    public void run() {\n        runWorker(this);\n    }\n\n    // 以下这些是AQS相关的东西\n\n    // 0代表没有加锁\n    // 1代表加锁了\n    protected boolean isHeldExclusively() {\n        return getState() != 0;\n    }\n\n    protected boolean tryAcquire(int unused) {\n        if (compareAndSetState(0, 1)) {\n            setExclusiveOwnerThread(Thread.currentThread());\n            return true;\n        }\n        return false;\n    }\n\n    protected boolean tryRelease(int unused) {\n        setExclusiveOwnerThread(null);\n        setState(0);\n        return true;\n    }\n\n    public void lock()        { acquire(1); }\n    public boolean tryLock()  { return tryAcquire(1); }\n    public void unlock()      { release(1); }\n    public boolean isLocked() { return isHeldExclusively(); }\n\n    void interruptIfStarted() {\n        Thread t;\n        if (getState() >= 0 && (t = thread) != null && !t.isInterrupted()) {\n            try {\n                t.interrupt();\n            } catch (SecurityException ignore) {\n            }\n        }\n    }\n}\n\nWorker实现了Runnable接口，所以他是个任务，有run方法；同时有继承了AQS，所以他也是一把锁。\n下边是提交任务的过程\n提交任务有submit和execute, submit就是首先将Callable或者Runnable包装成FutureTask，然后调用execute, 所以核心是分析execute\npublic void execute(Runnable command) {\n    if (command == null)\n        throw new NullPointerException();\n    // 这个c里边有两个信息，一个是现在有多少worker, 另一个是现在线程池的状态是啥\n    // workerCountOf方法就是从里边提取 worker的数量的\n    int c = ctl.get();\n    if (workerCountOf(c) \n可以发现execute方法就是完成了上边说的“线程池处理流程”这个图里描述的过程。 大雄看到这里还有几个疑问，一个是Woker是如何创建并加入workers的，一个是worker是如何启动的，再就是worker是如何运行的\n生活还要继续\nprivate boolean addWorker(Runnable firstTask, boolean core) {\n    retry:\n    for (;;) {\n        int c = ctl.get();\n        int rs = runStateOf(c);\n\n        // 做一些校验，线程池的状态要满足一定条件\n        // 而且得提交任务过来，再就是workQueue不能是空的\n        if (rs >= SHUTDOWN &&\n            ! (rs == SHUTDOWN &&\n                firstTask == null &&\n                ! workQueue.isEmpty()))\n            return false;\n\n        for (;;) {\n            int wc = workerCountOf(c);\n            // 看你是要创建核心worker还是普通worker\n            // 核心看超没超过corePoolSize, 普通看超没超过maximumPoolSize\n            if (wc >= CAPACITY ||\n                wc >= (core ? corePoolSize : maximumPoolSize))\n                return false;\n            if (compareAndIncrementWorkerCount(c))\n            // 增加worker数量失败就在来\n                break retry;\n            c = ctl.get();  // Re-read ctl\n            if (runStateOf(c) != rs)\n                // 中途线程池状态发生变化了\n                continue retry;\n        }\n    }\n\n    boolean workerStarted = false;\n    boolean workerAdded = false;\n    Worker w = null;\n    try {\n        // worker就是这么创建的\n        w = new Worker(firstTask);\n        final Thread t = w.thread;\n        if (t != null) {\n            final ReentrantLock mainLock = this.mainLock;\n            // 加worker是要加全局锁的\n            mainLock.lock();\n            try {\n                int rs = runStateOf(ctl.get());\n\n                if (rs  largestPoolSize)\n                        largestPoolSize = s;\n                    workerAdded = true;\n                }\n            } finally {\n                mainLock.unlock();\n            }\n            if (workerAdded) {\n                // worker是在这里启动的\n                t.start();\n                workerStarted = true;\n            }\n        }\n    } finally {\n        if (! workerStarted)\n            addWorkerFailed(w);\n    }\n    return workerStarted;\n}\n\n这段代码解决了 Woker是如何创建并加入workers的以及worker是如何启动的的问题。\naddWorker做的核心工作就是，创建worker, 启动worker, 在创建之前还会做一些校验。调用了worker里边线程的start后就要等待cpu调度执行worker的run方法了。\npublic void run() {\n    runWorker(this);\n}\n\nfinal void runWorker(Worker w) {\n    Thread wt = Thread.currentThread();\n    Runnable task = w.firstTask;\n    w.firstTask = null;\n    w.unlock(); // allow interrupts\n    boolean completedAbruptly = true;\n    try {\n        // task是创建worker带进去的任务，会先执行他，然后从workQueue里边取\n        // 如果没有的话跳出去\n        while (task != null || (task = getTask()) != null) {\n            w.lock();   // 首先加锁，如果不加锁，可能几个线程提交的任务同时进来了，会导致一些共享状态出问题\n\n            // 做一些状态的校验\n            if ((runStateAtLeast(ctl.get(), STOP) ||\n                    (Thread.interrupted() &&\n                    runStateAtLeast(ctl.get(), STOP))) &&\n                !wt.isInterrupted())\n                wt.interrupt();\n            try {\n                // 执行任务前调用一下beforeExecute， 默认是空的\n                beforeExecute(wt, task);\n                Throwable thrown = null;\n                try {\n                    // 这个跟我们平时理解的Runnable还不一样，可以体会下，他这个run就是一个普通的方法\n                    // 他直接调run是要执行任务，线程的start只是把worker里边的那个run跑起来了\n                    task.run();\n                } catch (RuntimeException x) {\n                    thrown = x; throw x;\n                } catch (Error x) {\n                    thrown = x; throw x;\n                } catch (Throwable x) {\n                    thrown = x; throw new Error(x);\n                } finally {\n                    // 执行完了调一下，里边可以拿到异常\n                    afterExecute(task, thrown);\n                }\n            } finally {\n                task = null;\n                w.completedTasks++;\n                w.unlock();\n            }\n        }\n        completedAbruptly = false;\n    } finally {\n        // 从while跳出来表明没有任务可以执行了\n        processWorkerExit(w, completedAbruptly);\n    }\n}\n\n这个也比较容易，就是不断的从workQueue取任务，执行，直到没任务了跳出来。接下来就是worker如何被销毁的问题了\nprivate void processWorkerExit(Worker w, boolean completedAbruptly) {\n    if (completedAbruptly) // If abrupt, then workerCount wasn't adjusted\n        decrementWorkerCount();\n\n    final ReentrantLock mainLock = this.mainLock;\n    mainLock.lock();\n    try {\n        completedTaskCount += w.completedTasks;\n        // 移除掉worker（裁员）\n        workers.remove(w);\n    } finally {\n        mainLock.unlock();\n    }\n\n    tryTerminate();\n\n    int c = ctl.get();\n    if (runStateLessThan(c, STOP)) {\n        if (!completedAbruptly) {\n            int min = allowCoreThreadTimeOut ? 0 : corePoolSize;\n            if (min == 0 && ! workQueue.isEmpty())\n                min = 1;\n            // 比核心线程数多的话，执行完的Worker直接移除就好\n            if (workerCountOf(c) >= min)\n                return; // replacement not needed\n        }\n        // 小于核心线程数就会再加个Worker, 让他继续等待接收任务（招人）\n        addWorker(null, false);\n    }\n}\n\n直接从workers里边移除worker, 移除后如果worker数量比核心线程数还少，就再加个worker, 否则不加。\n一些体会\n看源码一定不要过分纠结细节，就像这个线程池，我看网上很多文章去算那几个位运算的十进制数，感觉是在浪费时间，没有抓住重点。\n当然这也不是绝对的（似乎说的矛盾了），一些细节的设计还是非常精妙值得学习的。还是这个位运算，为什么只用一个int表示线程池状态和worker的数量呢。\n要多多联想，还是这个位运算，他是不是和读写锁用一个int既表示写状态又表示读状态十分相似。Worker继承AQS，是否能让你想起AQS的种种。\n总之，个人觉得第一遍看是一定不能沉溺于细节的，他会让你迷惘和丧失信心；第二遍、第三遍可以关注一下细节，感受大师级的设计的美妙之处。当然笔者仅仅粗略看了一遍（逃~）\n"},"第06章-线程池与Executor框架/03-Executor.html":{"url":"第06章-线程池与Executor框架/03-Executor.html","title":"03-Executor","keywords":"","body":"Executor框架\n前面讲的ThreadPoolExecutor其实是Executor框架中的一员。从JDK 5开始，把工作单元与执行机制分离开来。工作单元（可执行的任务）包括Runnable和Callable，而执行机制由Executor提供。\nExecutor框架成员及其体系\n\n以上就是Executor框架的一个简版UML，生成此图时发现其中还有其他成员，直接参考《java并发编程艺术》移除了。\nExecutor框架共有三大成员+一工具类\nExecutor\n他负责任务的执行, 主要包括如下两个实现类\nThreadPoolExecutor\n使用Executors可以创建三种ThreadPoolExecutor,分别如下：\n\nSingleThreadExecutor：创建只有单个线程的线程池\nFixedThreadPool：用于创建固定线程数量的线程池\nCachedThreadPool：创建一个会根据需要创建新线程的线程池\n\nScheduledThreadPoolExecutor\n它主要用来在给定的延迟之后运行任务，或者定期执行任务\nScheduledThreadPoolExecutor适用于需要多个后台线程执行周期任务，同时为了满足资源管理的需求而需要限制后台线程的数量的应用场景。\n任务\n包括Runnable和Callable， 一个表示没有返回结果的任务，一个表示有返回结果的任务，这个我们太熟悉了\n任务执行结果\n包括Future接口及其实现类FutureTask，这个也是我们的老朋友了\nExecutors\n他是一个工具类，就像Arrays和Collections, 他是一个创建各种ThreadPoolExecutor的工具\nThreadPoolExecutor详解\nThreadPoolExecutor的创建前面已经讲过了，里边涉及到很多的参数，这里不再赘述。这里主要是探讨Excutors为我们提供了几种实用ThreadPoolExecutor\nFixedThreadPool\n他的源码如下：\npublic static ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory) {\n    return new ThreadPoolExecutor(nThreads, nThreads,\n                                    0L, TimeUnit.MILLISECONDS,\n                                    new LinkedBlockingQueue(),\n                                    threadFactory);\n}\n\n他的特点是\n\n核心线程数和最大线程数是相等的\n线程保活时间是0，就是说执行完，线程会被立即销毁\n工作队列是使用的有界队列LinkedBlockingQueue，这个队列的界在Inter.MAX_VALUE, 这意味这他通常不会因为任务数量过多拒绝任务\n\nSingleThreadExecutor\n他的源码如下：\npublic static ExecutorService newSingleThreadExecutor(ThreadFactory threadFactory) {\n    return new FinalizableDelegatedExecutorService\n        (new ThreadPoolExecutor(1, 1,\n                                0L, TimeUnit.MILLISECONDS,\n                                new LinkedBlockingQueue(),\n                                threadFactory));\n}\n\n他的特点是：\n\n核心线程数和最大线程数都是1\n线程保活时间是0，就是说执行完，线程会被立即销毁，重新创建\n工作队列也是使用的LinkedBlockingQueue\n\nCachedThreadPool\npublic static ExecutorService newCachedThreadPool(ThreadFactory threadFactory) {\n    return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                                    60L, TimeUnit.SECONDS,\n                                    new SynchronousQueue(),\n                                    threadFactory);\n}\n\n他的特点是：\n\n没有核心线程，可以无限的创建线程\n工作队列使用SynchronousQueue, 这是一个不存储元素的队列，  这意味着，提交一个任务必须要等这个任务被消费（可能创建新线程消费，也可能是被老线程消费），下一个任务才进去执行；线程从队列获取任务时，一定要阻塞到有任务提交进去。\n线程的保活时间时60秒，意味着60秒没任务就会被销毁\n\nScheduledThreadPoolExecutor\n它主要用来在给定的延迟之后运行任务，或者定期执行任务。\n两个示例\n以一定的周期执行任务\npublic class Demo_06_02_1_Exexutors {\n    public static void main(String[] args) {\n        ScheduledExecutorService scheduledExecutorService = Executors.newScheduledThreadPool(4);\n        scheduledExecutorService.scheduleAtFixedRate(() -> {\n            System.out.println(\"欢迎关注微信公众号'大雄和你一起学编程'\"+new Date());\n            try {\n                Thread.sleep(10000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }, 3, 1, TimeUnit.SECONDS);\n    }\n}\n// 这段代码会在启动后3秒开始输出，然后每隔10秒输出一次\n// 欢迎关注微信公众号'大雄和你一起学编程'Fri May 08 09:36:50 CST 2020\n// 欢迎关注微信公众号'大雄和你一起学编程'Fri May 08 09:37:00 CST 2020\n// 欢迎关注微信公众号'大雄和你一起学编程'Fri May 08 09:37:10 CST 2020\n// 欢迎关注微信公众号'大雄和你一起学编程'Fri May 08 09:37:20 CST 2020\n\npublic class Demo_06_02_2_Exexutors {\n    public static void main(String[] args) {\n        ScheduledExecutorService scheduledExecutorService = Executors.newScheduledThreadPool(4);\n        scheduledExecutorService.scheduleWithFixedDelay(() -> {\n            System.out.println(\"欢迎关注微信公众号'大雄和你一起学编程'\"+new Date());\n            try {\n                Thread.sleep(10000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }, 3, 1, TimeUnit.SECONDS);\n    }\n}\n// 这段代码会在启动后3秒开始输出，然后每隔10+1秒输出一次\n// 欢迎关注微信公众号'大雄和你一起学编程'Fri May 08 09:40:18 CST 2020\n// 欢迎关注微信公众号'大雄和你一起学编程'Fri May 08 09:40:29 CST 2020\n// 欢迎关注微信公众号'大雄和你一起学编程'Fri May 08 09:40:40 CST 2020\n// 欢迎关注微信公众号'大雄和你一起学编程'Fri May 08 09:40:51 CST 2020\n\n这两者的区别大家可以体会下\nScheduledThreadPool 有四种方式创建\npublic static ScheduledExecutorService newScheduledThreadPool(int corePoolSize)\npublic static ExecutorService newSingleThreadExecutor()\n// 还有两个是可以指定线程工厂\n\n提交任务主要有两种方式\n// 他会每间隔一个固定时间执行一次，如果你的任务执行时间你给的period, 那么任务执行完就开始下一次\npublic ScheduledFuture scheduleAtFixedRate(Runnable command,\n                                                  long initialDelay,\n                                                  long period,\n                                                  TimeUnit unit)\n// 他不管你的任务执行时间，任务执行完了再隔delay时间执行下一次任务\npublic ScheduledFuture scheduleWithFixedDelay(Runnable command,\n                                                     long initialDelay,\n                                                     long delay,\n                                                     TimeUnit unit)\n\n原理\n这个定时任务的核心就是使用DelayQueue，但是他不是使用的concurrent包的那个DelayQueue, 而是自己封装了一个DelayedWorkQueue，这两者的区别笔者没有细看，一直从任务队列取到期的任务执行，同时把执行的任务再放回DelayQueue。\nRunnableScheduledFuture\nDelayedWorkQueue 里面是用一个RunnableScheduledFuture来存放任务的， ScheduledFutureTask就是RunnableScheduledFuture的一个实现类\n他的成员变量如下：\n// 决定两个Task的time相同时谁排在前面，是用一个AtomicLong搞出来的\nprivate final long sequenceNumber;\n\n// Task下一次将要被执行的具体时间\nprivate long time;\n\n// 任务执行的间隔时间，正数表示用fixed-rate（scheduleAtFixedRate）方式， 负数表示用fixed-delay（scheduleWithFixedDelay）方式\nprivate final long period;\n\n// 用于下一次加入队列\nRunnableScheduledFuture outerTask = this;\n\n// 优化用的\nint heapIndex;\n\n方法如下：\npublic long getDelay(TimeUnit unit) {\n    return unit.convert(time - now(), NANOSECONDS);\n}\n\n计算还有多久到执行时间点，这个Delayed接口的getDelay方法一样\npublic int compareTo(Delayed other) {\n    if (other == this) // compare zero if same object\n        return 0;\n    if (other instanceof ScheduledFutureTask) {\n        ScheduledFutureTask x = (ScheduledFutureTask)other;\n        long diff = time - x.time;\n        if (diff  0)\n            return 1;\n        else if (sequenceNumber  0) ? 1 : 0;\n}\n\n确定排序规则，谁先到期谁排前面，同时到期的，看谁先创建，先创建的排在前面\n// 设置下一次要什么时候执行\nprivate void setNextRunTime() {\n    long p = period;\n    if (p > 0)\n        time += p;  // 以固定频率执行的任务走这里\n    else    // 以固定时间间隔执行的走这里\n        time = triggerTime(-p);\n}\n\n// 取消任务\npublic boolean cancel(boolean mayInterruptIfRunning) {\n    boolean cancelled = super.cancel(mayInterruptIfRunning);\n    if (cancelled && removeOnCancel && heapIndex >= 0)\n        remove(this);\n    return cancelled;\n}\n\npublic void run() {\n    boolean periodic = isPeriodic();\n    if (!canRunInCurrentRunState(periodic))\n        // 取消\n        cancel(false);\n    else if (!periodic)\n        // 不是周期任务，直接run就好, 执行的FutureTask的run， 执行具体的任务\n        ScheduledFutureTask.super.run();\n    else if (ScheduledFutureTask.super.runAndReset()) { // runAndReset()可以理解为就是开始执行任务\n        // 设置 下一次执行时间，注意固定频率和固定间隔的区别\n        setNextRunTime();\n        // 再返回队列\n        reExecutePeriodic(outerTask);\n    }\n}\n\nscheduleAtFixedRate的执行流程\npublic ScheduledFuture scheduleAtFixedRate(Runnable command,\n                                                long initialDelay,\n                                                long period,\n                                                TimeUnit unit) {\n    // 一些参数校验\n    if (command == null || unit == null)\n        throw new NullPointerException();\n    if (period  sft =\n        new ScheduledFutureTask(command,\n                                        null,\n                                        //\n                                        triggerTime(initialDelay, unit),\n                                        unit.toNanos(period));\n    RunnableScheduledFuture t = decorateTask(command, sft);\n    // 下一次加到队列的任务设置好\n    sft.outerTask = t;\n    // 延迟执行\n    delayedExecute(t);\n    return t;\n}\n\nprivate void delayedExecute(RunnableScheduledFuture task) {\n    if (isShutdown())\n        reject(task);\n    else {\n        // 加入队列\n        super.getQueue().add(task);\n        if (isShutdown() &&\n            !canRunInCurrentRunState(task.isPeriodic()) &&\n            remove(task))\n            // 取消任务的情况\n            task.cancel(false);\n        else\n            // 准备开始跑了\n            ensurePrestart();\n    }\n}\n\nvoid ensurePrestart() {\n    // 看现在有几个工作线程\n    int wc = workerCountOf(ctl.get());\n    if (wc \nscheduleWithFixedDelay和scheduleAtFixedRate是类似的，只是他计算下一次执行的时间的方式不同。\n"},"第07章-并发工具类/01-CountDownLatch.html":{"url":"第07章-并发工具类/01-CountDownLatch.html","title":"01-CountDownLatch","keywords":"","body":"CountDownLatch\n他跟join比较类似，但是比join来的灵活，join用于让当前执行线程等待join线程执行结束。\nCountDownLatch允许一个或多个线程等待其他线程完成操作。\n下面这个例子要实现的就是同时开三个线程，主线程需要等待这三个线程执行完后继续执行。\npublic class TestCountDownLatch implements Runnable {\n    CountDownLatch countDownLatch;\n    public TestCountDownLatch(CountDownLatch countDownLatch) {\n        this.countDownLatch = countDownLatch;\n    }\n    @Override\n    public void run() {\n        System.out.println(Thread.currentThread().getName() + \"执行完了\");\n        countDownLatch.countDown();\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        int THREAD_COUNT = 3;\n        CountDownLatch countDownLatch = new CountDownLatch(THREAD_COUNT);\n        for (int i = 0; i \n总结一下CountDownLatch的用法：\n\nnew CountDownLatch(要等待几个线程)\n在要等待的地方调用countDownLatch.await() 让他等到countDownLatch减到0时继续执行\n每一个线程执行完都调用countDownLatch.countDown()使得countDownLatch减一\n\n基本原理\nCountDownLatch其实时根据AQS共享式获取同步状态实现的，要等待的线程的个数就是state，countDown相当于state-1, await() 相当于要等到state==0的时候才能获取到锁。\n"},"第07章-并发工具类/02-CyclicBarrier.html":{"url":"第07章-并发工具类/02-CyclicBarrier.html","title":"02-CyclicBarrier","keywords":"","body":"CyclicBarrier\n让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续运行。\nCyclicBarrier默认的构造方法是CyclicBarrier（int parties），其参数表示屏障拦截的线程数量，每个线程调用await方法告诉CyclicBarrier我已经到达了屏障，然后当前线程被阻塞。\n就像跑步比赛一样，每个人都从各自的地方到达起跑线，到达后跟裁判说一声，当所有人到奇之后，裁判会发出信号，大家一起跑。\n使用Demo\npublic class Demo_07_02_1_CylicBarrier {\n    public static void main(String[] args) throws BrokenBarrierException, InterruptedException {\n        CyclicBarrier cyclicBarrier = new CyclicBarrier(2);\n        new Thread(() -> {\n            for (int i = 0; i \n使用CyclicBarrier步骤如下：\n\nnew CyclicBarrier(2) 指定期望多少人到达屏障在继续执行\ncyclicBarrier.await() 告知别人自己到达屏障了\n\n使用场景\nCyclicBarrier可以用于多线程并行计算数据，等到所有线程都计算完再合并。\n"},"第07章-并发工具类/03-Semaphore.html":{"url":"第07章-并发工具类/03-Semaphore.html","title":"03-Semaphore","keywords":"","body":"Semaphore\nSemaphore（信号量）是用来控制同时访问特定资源的线程数量，它通过协调各个线程，以保证合理的使用公共资源。\n使用示例\npublic class Demo_07_03_1_Semaphore {\n    private static Semaphore semaphore = new Semaphore(3);\n\n    public static void main(String[] args) {\n        for (int i = 0; i  {\n                try {\n                    semaphore.acquire();    // 相当于获取锁\n                    System.out.println(Thread.currentThread().getName() + \"执行了\");\n                    try {\n                        Thread.sleep(1000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } finally {\n                    semaphore.release();    // 释放锁\n                }\n\n            }).start();\n        }\n    }\n}\n\n我们同时启动了30个线程去打印，但是我们会发现一次只会有三个输出，三个之后，一会儿再输出。这就是Semaphore带给我们的。\n他相当于是一个数量有限的共享锁，没有达到限制就能获得锁，否则阻塞，而这个限制是在构造方法里面指定的。\n我没看源码，如果让我实现一个Semaphore， 我一定是用AQS的共享式获取同步状态来做。\n其他API\n这个是书上列出来的，为了保持完成性，也简单列一下：\n\nintavailablePermits()：返回此信号量中当前可用的许可证数。\nintgetQueueLength()：返回正在等待获取许可证的线程数。\nbooleanhasQueuedThreads()：是否有线程正在等待获取许可证。\nvoid reducePermits（int reduction）：减少reduction个许可证，是个protected方法。\nCollection getQueuedThreads()：返回所有等待获取许可证的线程集合，是个protected方法。\n\n"},"第07章-并发工具类/04-Exchanger.html":{"url":"第07章-并发工具类/04-Exchanger.html","title":"04-Exchanger","keywords":"","body":"Exchanger\n\nExchanger用于进行线程间的数据交换。它提供一个同步点，在这个同步点，两个线程可以交换彼此的数据。这两个线程通过exchange方法交换数据，如果第一个线程先执行exchange()方法，它会一直等待第二个线程也执行exchange方法，当两个线程都到达同步点时，这两个线程就可以交换数据，将本线程生产出来的数据传递给对方。(原文复制)\n\n使用场景\n遗传算法\n不懂这是个啥玩意儿\n校对工作\n例如将纸制银行流水通过人工的方式录入成电子银行流水，为了避免错误，采用AB岗两人进行录入，录入到Excel之后，系统需要加载这两个Excel，并对两个Excel数据进行校对，看看是否录入一致。\npublic class Demo_07_04_1_Exchanger {\n    static Exchanger exchanger = new Exchanger<>();\n    public static void main(String[] args) {\n        new Thread(() -> {\n            try {\n                exchanger.exchange(\"第1个线程里的值\");\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }).start();\n\n        new Thread(() -> {\n            try {\n                String B = \"第2个线程里的值\";\n                String A = exchanger.exchange(B);\n                System.out.println(\"A:\"+A);\n                System.out.println(\"B:\"+B);\n                System.out.println(A.equals(B));\n\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }).start();\n    }\n}\n// 输出：\n\n// A:第1个线程里的值\n// B:第2个线程里的值\n// false\n\n这样就可以达到一个校对的目的\n"},"第08章-Java并发机制的底层实现原理/":{"url":"第08章-Java并发机制的底层实现原理/","title":"第08章-Java并发机制的底层实现原理","keywords":"","body":"Java并发机制的底层实现原理\n笔者是科班出身，所以这一章，还有内存模型真的是看的头疼，本来打算放弃了，又了解了一下，这两章的东西是面试必考的，必须要搞啊。\n因为笔者也不是特别了解，所以只能提炼一下书中的内容，适当加入一些自己的理解。\n"},"第08章-Java并发机制的底层实现原理/01-volatile.html":{"url":"第08章-Java并发机制的底层实现原理/01-volatile.html","title":"01-volatile","keywords":"","body":"volatile\n\nvolatile是轻量级的synchronized，不会引起线程上下文切换和调度\n保证了多线程环境下共享变量的“可见性”\n\n可见性的意思是当一个线程修改一个共享变量时，另外一个线程能读到这个修改的值\n实现原理\n一些CPU术语\n\n\n\n术语\n英文\n含义\n\n\n\n\n内存屏障\nmemory Barries\n是一组处理器命令，用于实现内存操作的顺序限制。\n\n\n缓冲行\n\nCPU高速缓存中可以分配最小的存储单位。处理器填写缓存行时会加载整个缓存行 。\n\n\n原子操作\natomic operation\n不可中断的一个或者一系列操作\n\n\n缓存行填充\ncache line fill\n当处理器识别到从内存中读取操作是可缓存的。处理器读取整个高速缓存行到适当的缓存（L1 ，L2 ，L3的或所有）\n\n\n缓存命中\ncache hit\n如果进行高速缓存行填充操作的内存位置任然是下次处理器访问的地址时，处理器从缓存中读取操作数，而不是从内存中读取。\n\n\n写命中\nwrite hit\n当处理器将操作数写回到一个内存缓存的区域时，它首先会检查这个缓存的内存地址是否存在缓存行中，如果存在一个有效的缓存行，则处理器将这个操作数写回到缓存，而不是写回到内存，这个操作被称作写命中。\n\n\n写缺失\nwrite misses the cache\n一个有效的缓存行被写入到不存在的内存区域\n\n\n\nvolatile原理\nvolatile声明的变量，转变为汇编会有一个lock指令\nlock指令可以实现如下功能：\n\n1）将当前处理器缓存行的数据写回到系统内存。\n2）这个写回内存的操作会使在其他CPU里缓存了该内存地址的数据无效。\n\nvolatile的两条实现原则：\n\n1）Lock前缀指令会引起处理器缓存回写到内存\n2）一个处理器的缓存回写到内存会导致其他处理器的缓存无效\n\nvolatile使用优化\n追加字节能优化性能\n原理是部分处理器缓存行是64字节宽，不支持部分填充缓存行。如果队头和队尾节点都不足64字节的话，他们会进到同一个缓存行，当一个处理器试图修改头节点时，会将整个缓存行锁定，那么在缓存一致性机制的作用下，会导致其他处理器不能访问自己高速缓存中的尾节。而首尾巴节点的访问时频繁的，放到同一个缓存行会频繁锁定，造成出队和入队效率低。因此可以采用追加字节的方式避免头节点和尾节点被放到同一个缓存行。\n不适用的场景：\n\n缓存行非64字节宽的处理器\n共享变量不会被频繁地写\njava7以下\n\n"},"第08章-Java并发机制的底层实现原理/02-synchronized.html":{"url":"第08章-Java并发机制的底层实现原理/02-synchronized.html","title":"02-synchronized","keywords":"","body":"synchronized\nsynchronized实现同步的基础：Java中的每一个对象都可以作为锁。\n三种形式：\n\n对于普通同步方法，锁是当前实例对象。\n对于静态同步方法，锁是当前类的Class对象。\n对于同步方法块，锁是Synchonized括号里配置的对象。\n\n原理\n当一个线程试图访问同步代码块时，它首先必须得到锁\nJVM基于进入和退出Monitor对象来实现方法同步和代码块同步，但两者的实现细节不一样。代码块同步是使用monitorenter和monitorexit指令实现的，同步方法不知道\nmonitorenter指令是在编译后插入到同步代码块的开始位置，而monitorexit是插入到方法结束处和异常处。当一个monitor被持有后他就被锁定了。\n当执行到monitorenter指令时会尝试获得对象对用的monitor的所有权，即获取锁\n对象头\nsynchronized用的锁是存在Java对象头里的。\n32位情况下对象头的结构\n数组：\n|---------------------------------------------------------------------------------|\n|                                 Object Header (96 bits)                         |\n|--------------------------------|-----------------------|------------------------|\n|        Mark Word(32bits)       |    Klass Word(32bits) |  array length(32bits)  |\n|--------------------------------|-----------------------|------------------------|\n\n普通对象：\n|--------------------------------------------------------------|\n|                     Object Header (64 bits)                  |\n|------------------------------------|-------------------------|\n|        Mark Word (32 bits)         |    Klass Word (32 bits) |\n|------------------------------------|-------------------------|\n\nmark word:\n|-------------------------------------------------------|--------------------|\n|                  Mark Word (32 bits)                  |       State        |\n|-------------------------------------------------------|--------------------|\n| identity_hashcode:25 | age:4 | biased_lock:1 | lock:2 |       Normal       |\n|-------------------------------------------------------|--------------------|\n|  thread:23 | epoch:2 | age:4 | biased_lock:1 | lock:2 |       Biased(偏向锁)       |\n|-------------------------------------------------------|--------------------|\n|               ptr_to_lock_record:30          | lock:2 | Lightweight Locked |\n|-------------------------------------------------------|--------------------|\n|               ptr_to_heavyweight_monitor:30  | lock:2 | Heavyweight Locked |\n|-------------------------------------------------------|--------------------|\n|                                              | lock:2 |    Marked for GC   |\n|-------------------------------------------------------|--------------------|\n\n锁升级\n锁级别低到高：无锁状态->偏向锁状态->轻量级锁状态->重量级锁状态\n只有锁升级，没有锁降级\n偏向锁\n大多数情况下，锁不仅不存在多线程竞争，而且总是由同一线程多次获得，为了让线程获得锁的代价更低而引入了偏向锁。\n当一个线程访问同步块并获取锁时，会在对象头和栈帧中的锁记录里存储锁偏向的线程ID，以后该线程在进入和退出同步块时不需要进行CAS操作来加锁和解锁，只需简单地测试一下对象头的Mark Word里是否存储着指向当前线程的偏向锁。如果测试成功，表示线程已经获得了锁。如果测试失败，则需要再测试一下Mark Word中偏向锁的标识是否设置成1（表示当前是偏向锁）：如果没有设置，则使用CAS竞争锁；如果设置了，则尝试使用CAS将对象头的偏向锁指向当前线程。\n偏向锁的撤销\n偏向锁的撤销，需要等待全局安全点（在这个时间点上没有正在执行的字节码）。它会首先暂停拥有偏向锁的线程，然后检查持有偏向锁的线程是否活着，如果线程不处于活动状态，则将对象头设置成无锁状态；如果线程仍然活着，拥有偏向锁的栈会被执行，遍历偏向对象的锁记录，栈中的锁记录和对象头的Mark Word要么重新偏向于其他线程，要么恢复到无锁或者标记对象不适合作为偏向锁，最后唤醒暂停的线程。\n偏向锁相关jvm参数\n\n关闭延迟：-XX:BiasedLockingStartupDelay=0\n禁用：-XX:-UseBiasedLocking=false\n\n轻量级锁\n加锁\n线程在执行同步块之前，JVM会先在当前线程的栈桢中创建用于存储锁记录的空间，并将对象头中的Mark Word复制到锁记录中，官方称为Displaced MarkWord。然后线程尝试使用CAS将对象头中的Mark Word替换为指向锁记录的指针。如果成功，当前线程获得锁，如果失败，表示其他线程竞争锁，当前线程便尝试使用自旋来获取锁。\n释放锁\n轻量级解锁时，会使用原子的CAS操作将Displaced Mark Word替换回到对象头，如果成功，则表示没有竞争发生。如果失败，表示当前锁存在竞争，锁就会膨胀成重量级锁。\n因为自旋会消耗CPU，为了避免无用的自旋（比如获得锁的线程被阻塞住了），一旦锁升级成重量级锁，就不会再恢复到轻量级锁状态。当锁处于这个状态下，其他线程试图获取锁时，都会被阻塞住，当持有锁的线程释放锁之后会唤醒这些线程，被唤醒的线程就会进行新一轮的夺锁之争。\n锁对比\n\n\n\n锁\n优点\n缺点\n适用场景\n\n\n\n\n偏向锁\n加锁和解锁不需要额外的消耗，和执行非同步方法比仅存在纳秒级的差距。\n如果线程间存在锁竞争，会带来额外的锁撤销的消耗。\n适用于只有一个线程访问同步块场景。\n\n\n轻量级锁\n竞争的线程不会阻塞，提高了程序的响应速度。\n如果始终得不到锁竞争的线程使用自旋会消耗CPU。\n追求响应时间。同步块执行速度非常快。\n\n\n重量级锁\n线程竞争不使用自旋，不会消耗CPU。\n线程阻塞，响应时间缓慢。\n追求吞吐量。同步块执行速度较长。\n\n\n\n"},"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html":{"url":"第08章-Java并发机制的底层实现原理/03-原子操作的实现原理.html","title":"03-原子操作的实现原理","keywords":"","body":"原子操作的实现原理\n处理器对原子操作的实现\n\n通过总线锁保证原子性\n\n总线锁就是使用处理器提供的一个LOCK #信号，当一个处理器在总线上输出此信号时，其他处理器的请求将被阻塞住，那么该处理器可以独占共享内存。\n\n使用缓存锁保证原子性\n\n指内存区域如果被缓存在处理器的缓存行中，并且在Lock操作期间被锁定，那么当它执行锁操作回写到内存时，处理器不在总线上声言LOCK #信号，而是修改内部的内存地址，并允许它的缓存一致性机制来保证操作的原子性，因为缓存一致性机制会阻止同时修改由两个以上处理器缓存的内存区域数据，当其他处理器回写已被锁定的缓存行的数据时，会使缓存行无效\njava原子操作的实现\n使用循环CAS实现原子操作\nJVM中的CAS操作正是利用了处理器提供的CMPXCHG指令实现的。自旋CAS实现的基本思路就是循环进行CAS操作直到成功为止。\n\nCAS三大问题：\n\n（1）ABA问题\n如果一个值原来是A，变成了B，又变成了A，那么使用CAS进行检查时会发现它的值没有发生变化，但是实际上却变化了。\nABA问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加1，JDK1.5的Atomic包里提供了一个类AtomicStampedReference来解决ABA问题。这个类的compareAndSet方法的作用是首先检查当前引用是否等于预期引用，并且检查当前标志是否等于预期标志，如果全部相等，则以原子方式将该引用和该标志的值设置为给定的更新值。\n（2）循环时间长开销大\n自旋CAS如果长时间不成功，会给CPU带来非常大的执行开销。\n（3）只能保证一个共享变量的原子操作\n对多个共享变量操作时，循环CAS就无法保证操作的原子性，这个时候就可以用锁。\n两个方案：\n一是：就是把多个共享变量合并成一个共享变量来操作\n二是：实用jdk的AtomicReference类来保证引用对象之间的原子性，把多个变量放在一个对象里来进行CAS操作\n使用锁机制实现原子操作\n锁机制保证了只有获得锁的线程才能够操作锁定的内存区域。\nJVM内部实现了很多种锁机制，有偏向锁、轻量级锁和互斥锁。\n除了偏向锁，JVM实现锁的方式都用了循环CAS，即当一个线程想进入同步块的时候使用循环CAS的方式来获取锁，当它退出同步块的时候使用循环CAS释放锁。\n"},"第09章-java内存模型/":{"url":"第09章-java内存模型/","title":"第09章-java内存模型","keywords":"","body":"java内存模型\n并发编程存在两个关键性问题：\n\n一是线程之间如何通信\n二是线程之间如何同步\n\n通信是指线程之间以何种机制来交换信息\n同步是指程序中用于控制不同线程间操作发生相对顺序的机制\n线程之间的通信方式有两种：\n\n一是共享内存：线程之间共享程序的公共状态，通过写-读内存中的公共状态进行隐式通信\n二是消息传递：线程之间没有公共状态，线程之间必须通过发送消息来显式进行通信\n\n共享内存方式同步时显式的，需要手动指定方法或代码块在线程之间互斥\n消息传递方式同步时隐式的，天然同步，消息的发送必须在消息的接收之前\nJava的并发采用的是共享内存模型\n"},"第09章-java内存模型/01-java内存模型基础.html":{"url":"第09章-java内存模型/01-java内存模型基础.html","title":"01-java内存模型基础","keywords":"","body":"java内存模型基础\nJava内存模型的抽象结构\nJMM决定一个线程对共享变量的写入何时对另一个线程可见\n线程与主内存之间的抽象关系：\n线程之间的共享变量存储在主内存（Main Memory）中，每个线程都有一个私有的本地内存（Local Memory），本地内存中存储了该线程以读/写共享变量的副本。本地内存是JMM的一个抽象概念，并不真实存在。它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。\nJMM通过控制主内存与每个线程的本地内存之间的交互，来为Java程序员提供内存可见性保证。\n从源代码到指令序列的重排序\n重排序的分类\n\n编译器重排序：在不改变单线程程序语义的情况下，重新安排指令执行顺序\n处理器重排序\n指令级并行的重排序：如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序\n内存系统的重排序：由于处理器使用缓存和读/写缓冲区，这使得加载和存储操作看上去可能是在乱序执行\n\n\n\nJMM的编译器重排序规则会禁止特定类型的编译器重排序\nJMM的处理器重排序规则会要求Java编译器在生成指令序列时，插入特定类型的内存屏障（Memory Barriers，Intel称之为Memory Fence）指令，通过内存屏障指令来禁止特定类型的处理器重排序\n内存屏障（Memory Barriers）\n为了保证内存可见性，Java编译器在生成指令序列的适当位置会插入内存屏障指令来禁止特定类型的处理器重排序\n\n\n\n屏障类型\n指令示例\n说明\n\n\n\n\nLoadLoad Barriers\nLoad1; LoadLoad; Load2\n确保 Load1 数据的装载，之前于 Load2 及所有后续装载指令的装载\n\n\nStoreStore Barriers\nStore1; StoreStore; Store2\n确保 Store1 数据对其他处理器可见（刷新到内存），之前于 Store2 及所有后续存储指令的存储。\n\n\nLoadStore Barriers\nLoad1; LoadStore; Store2\n确保 Load1 数据装载，之前于 Store2 及所有后续的存储指令刷新到内存\n\n\nStoreLoad Barriers\nStore1; StoreLoad; Load2\n确保 Store1 数据对其他处理器变得可见（指刷新到内存），之前于 Load2 及所有后续装载指令的装载。StoreLoadBarriers 会使该屏障之前的所有内存访问指令（存储和装载指令）完成之后，才执行该屏障之后的内存访问指令\n\n\n\nStoreLoad Barriers是一个“全能型”的屏障，它同时具有其他3个屏障的效果。现代的多处理器大多支持该屏障\nhappens-before简介\n从JDK 5开始，Java使用新的JSR-133内存模型\nJSR-133使用happens-before的概念来阐述操作之间的内存可见性。在JMM中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须要存在happens-before关系\n与程序员密切相关的happens-before规则：\n\n程序顺序规则：一个线程中的每个操作，happens-before于该线程中的任意后续操作\n监视器锁规则：对一个锁的解锁，happens-before于随后对这个锁的加锁\nvolatile变量规则：对一个volatile域的写，happens- before于任意后续对这个volatile域的读\n传递性：如果A happens-before B，且B happens-before C，那么Ahappens-before C\n\n"},"第09章-java内存模型/02-重排序.html":{"url":"第09章-java内存模型/02-重排序.html","title":"02-重排序","keywords":"","body":"重排序\n重排序是指编译器和处理器为了优化程序性能而对指令序列进行重新排序的一种手段。\n数据依赖性\n在单线程中，只要重排序两个操作的执行顺序，程序的执行结果就会被改变，称这两个操作具有数据依赖性。\n数据依赖性仅针对单个处理器中执行的指令序列和单个线程中执行的操作，不同处理器之间和不同线程之间的数据依赖性不被编译器和处理器考虑\nas-if-serial语义\n不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不能被改变。编译器、runtime和处理器都必须遵守as-if-serial语义。\n程序顺序规则\n如果A happens-before B，JMM并不要求A一定要在B之前执行。JMM仅仅要求前一个操作（执行的结果）对后一个操作可见，且前一个操作按顺序排在第二个操作之前。JMM允许这种重排序。\n重排序对多线程的影响\n在单线程程序中，对存在数据依赖的操作重排序，不会改变执行结果（这也是as-if-serial语义允许对存在数据依赖的操作做重排序的原因）；但在多线程程序中，对存在数据依赖的操作重排序，可能会改变程序的执行结果。\n顺序一致性\n顺序一致性内存模型是一个理论参考模型，在设计的时候，处理器的内存模型和编程语言的内存模型都会以顺序一致性内存模型作为参照。\n数据竞争与顺序一致性\n当程序未正确同步时，就可能会存在数据竞争。\nJMM对正确同步的多线程程序的内存一致性做了如下保证：\n如果程序是正确同步的，程序的执行将具有顺序一致性（SequentiallyConsistent）——即程序的执行结果与该程序在顺序一致性内存模型中的执行结果相同。这对于程序员来说是一个极强的保证。\n这里的同步是指广义上的同步，包括对常用同步原语（synchronized、volatile和final）的正确使用。\n顺序一致性内存模型\n两大特性：\n\n一个线程中的所有操作必须按照程序的顺序来执行\n（不管程序是否同步）所有线程都只能看到一个单一的操作执行顺序。在顺序一致性内存模型中，每个操作都必须原子执行且立刻对所有线程可见\n\n同步程序的顺序一致性效果\n顺序一致性模型中，所有操作完全按程序的顺序串行执行。\n而在JMM中，临界区内的代码可以重排序。\nJMM会在退出临界区和进入临界区这两个关键时间点做一些特别处理，使得线程在这两个时间点具有与顺序一致性模型相同的内存视图）。临界区内的这种重排序既提高了执行效率，又没有改变程序的执行结果。\n未同步程序的执行特性\n对于未同步或未正确同步的多线程程序，JMM只提供最小安全性：线程执行时读取到的值，要么是之前某个线程写入的值，要么是默认值\n为了实现最小安全性，JVM在堆上分配对象时，首先会对内存空间进行清零，然后才会在上面分配对象（JVM内部会同步这两个操作）。因此，在已清零的内存空间（Pre-zeroed Memory）分配对象时，域的默认初始化已经完成了\nJMM不保证未同步程序的执行结果与该程序在顺序一致性模型中的执行结果一致\nJMM不保证对64位的long型和double型变量的写操作具有原子性，而顺序一致性模型保证对所有的内存读/写操作都具有原子性\n"},"第09章-java内存模型/03-volatile内存语义.html":{"url":"第09章-java内存模型/03-volatile内存语义.html","title":"03-volatile内存语义","keywords":"","body":"volatile内存语义\n特性\n理解volatile特性的一个好方法是把对volatile变量的单个读/写，看成是使用同一个锁对这些单个读/写操作做了同步\n对一个volatile变量的读，总是能看到（任意线程）对这个volatile变量最后的写入。\n即使是64位的long型和double型变量，只要它是volatile变量，对该变量的读/写就具有原子性。如果是多个volatile操作或类似于volatile++这种复合操作，这些操作整体上不具有原子\nvolatile写-读建立的happens-before关系\n从内存语义的角度来说，volatile的写-读与锁的释放-获取有相同的内存效果：volatile写和锁的释放有相同的内存语义；volatile读与锁的获取有相同的内存语义。\nvolatile写-读的内存语义\n\n线程A写一个volatile变量，实质上是线程A向接下来将要读这个volatile变量的某个线程发出了（其对共享变量所做修改的）消息\n线程B读一个volatile变量，实质上是线程B接收了之前某个线程发出的（在写这个volatile变量之前对共享变量所做修改的）消息\n线程A写一个volatile变量，随后线程B读这个volatile变量，这个过程实质上是线程A通过主内存向线程B发送消息\n\nvolatile内存语义的实现\n\n为了实现volatile的内存语义，编译器在生成字节码时，会在指令序列中插入内存屏障来禁止特定类型的处理器重排序\nJSR-133为什么要增强volatile的内存语义\n在JSR-133之前的旧Java内存模型中，虽然不允许volatile变量之间重排序，但旧的Java内存模型允许volatile变量与普通变量重排序.\n在旧的内存模型中，volatile的写-读没有锁的释放-获取所具有的内存语义。为了提供一种比锁更轻量级的线程之间通信的机制，JSR-133专家组决定增强volatile的内存语义\n由于volatile仅仅保证对单个volatile变量的读/写具有原子性，而锁的互斥执行的特性可以确保对整个临界区代码的执行具有原子性。在功能上，锁比volatile更强大；在可伸缩性和执行性能上，volatile更有优势\n"},"第09章-java内存模型/04-锁内存语义的实现.html":{"url":"第09章-java内存模型/04-锁内存语义的实现.html","title":"04-锁内存语义的实现","keywords":"","body":"锁内存语义的实现\n锁一般式基于AQS实现的，AQS维护了一个volatile的state， 这个state式实现锁内存语义的关键\nCAS\n如果当前状态值等于预期值，则以原子方式将同步状态设置为给定的更新值。此操作具有volatile读和写的内存语义。\n编译器不会对volatile读与volatile读后面的任意内存操作重排序；编译器不会对volatile写与volatile写前面的任意内存操作重排序。组合这两个条件，意味着为了同时实现volatile读和volatile写的内存语义，编译器不能对CAS与CAS前面和后面的任意内存操作重排序\n内存语义总结\n\n公平锁和非公平锁释放时，最后都要写一个volatile变量state。\n公平锁获取时，首先会去读volatile变量。\n非公平锁获取时，首先会用CAS更新volatile变量，这个操作同时具有volatile读和volatile写的内存语义。\n\n"},"第09章-java内存模型/05-concurrent包的实现.html":{"url":"第09章-java内存模型/05-concurrent包的实现.html","title":"05-concurrent包的实现","keywords":"","body":"concurrent包的实现\nconcurrent实现的基石\n\nJava的CAS会使用现代处理器上提供的高效机器级别的原子指令，这些原子指令以原子方式对内存执行读-改-写操作，这是在多处理器中实现同步的关键\nvolatile变量的读/写和CAS可以实现线程之间的通信\n\nconcurrent的模式\n\n声明共享变量为volatile。\n使用CAS的原子条件更新来实现线程之间的同步\n配合以volatile的读/写和CAS所具有的volatile读和写的内存语义来实现线程之间的通信\n\n"},"第09章-java内存模型/06-final域的内存语义.html":{"url":"第09章-java内存模型/06-final域的内存语义.html","title":"06-final域的内存语义","keywords":"","body":"final域的内存语义\nfinal域的重排序规则\n\n在构造函数内对一个final域的写入，与随后把这个被构造对象的引用赋值给一个引用变量，这两个操作之间不能重排序\n初次读一个包含final域的对象的引用，与随后初次读这个final域，这两个操作之间不能重排序\n\n写final域的重排序规则\n\nJMM禁止编译器把final域的写重排序到构造函数之外\n编译器会在final域的写之后，构造函数return之前，插入一个StoreStore屏障。这个屏障禁止处理器把final域的写重排序到构造函数之外\n\nfinal域写重排序规则可以保证：\n在对象引用为任意线程可见之前，对象的final域已经被正确初始化过了，而普通域不具有这个保障\n读final域的重排序规则\n在一个线程中，初次读对象引用与初次读该对象包含的final域，JMM禁止处理器重排序这两个操作\n读final域的重排序规则可以确保：\n在读一个对象的final域之前，一定会先读包含这个final域的对象的引用。读到了引用，则这个final域一定被初始化了\nfinal域为引用类型\n写final域的重排序规则对编译器和处理器增加了如下约束：在构造函数内对一个final引用的对象的成员域的写入，与随后在构造函数外把这个被构造对象的引用赋值给一个引用变量，这两个操作之间不能重排序\n"},"第09章-java内存模型/07-happens-before.html":{"url":"第09章-java内存模型/07-happens-before.html","title":"07-happens-before","keywords":"","body":"happens-before\n定义\n\n如果一个操作happens-before另一个操作，那么第一个操作的执行结果将对第二个操作可见，而且第一个操作的执行顺序排在第二个操作之前\n两个操作之间存在happens-before关系，并不意味着Java平台的具体实现必须要按照happens-before关系指定的顺序来执行。如果重排序之后的执行结果，与按happens-before关系来执行的结果一致，那么这种重排序并不非法\n\nhappens-before规则\n\n程序顺序规则：一个线程中的每个操作，happens-before于该线程中的任意后续操作。\n监视器锁规则：对一个锁的解锁，happens-before于随后对这个锁的加锁。\nvolatile变量规则：对一个volatile域的写，happens-before于任意后续对这个volatile域的读。\n传递性：如果A happens-before B，且B happens-before C，那么Ahappens-before C。\nstart()规则：如果线程A执行操作ThreadB.start()（启动线程B），那么A线程的ThreadB.start()操作happens-before于线程B中的任意操作。\njoin()规则：如果线程A执行操作ThreadB. join()并成功返回，那么线程B中的任意操作happens-before于线程A从ThreadB. join()操作成功返回。\n\n"}}}